{"ast":null,"code":"/**\r\n * @typedef {import('./create-h.js').Child} Child\r\n *   Acceptable child value.\r\n * @typedef {import('./create-h.js').Properties} Properties\r\n *   Acceptable value for element properties.\r\n * @typedef {import('./create-h.js').Result} Result\r\n *   Result from a `h` (or `s`) call.\r\n */\n\n// Register the JSX namespace on `h`.\n/**\r\n * @typedef {import('./jsx-classic.js').Element} h.JSX.Element\r\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} h.JSX.ElementChildrenAttribute\r\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} h.JSX.IntrinsicAttributes\r\n * @typedef {import('./jsx-classic.js').IntrinsicElements} h.JSX.IntrinsicElements\r\n */\n\n// Register the JSX namespace on `s`.\n/**\r\n * @typedef {import('./jsx-classic.js').Element} s.JSX.Element\r\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} s.JSX.ElementChildrenAttribute\r\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} s.JSX.IntrinsicAttributes\r\n * @typedef {import('./jsx-classic.js').IntrinsicElements} s.JSX.IntrinsicElements\r\n */\n\nimport { html, svg } from 'property-information';\nimport { createH } from './create-h.js';\nimport { svgCaseSensitiveTagNames } from './svg-case-sensitive-tag-names.js';\n\n// Note: this explicit type is needed, otherwise TS creates broken types.\n/** @type {ReturnType<createH>} */\nexport const h = createH(html, 'div');\n\n// Note: this explicit type is needed, otherwise TS creates broken types.\n/** @type {ReturnType<createH>} */\nexport const s = createH(svg, 'g', svgCaseSensitiveTagNames);","map":{"version":3,"names":["html","svg","createH","svgCaseSensitiveTagNames","h","s"],"sources":["C:/Users/Admin/Desktop/Fall24 MS/CS3980 Proj/cap_rx_3/HIT-Proj/code/app/node_modules/hastscript/lib/index.js"],"sourcesContent":["/**\r\n * @typedef {import('./create-h.js').Child} Child\r\n *   Acceptable child value.\r\n * @typedef {import('./create-h.js').Properties} Properties\r\n *   Acceptable value for element properties.\r\n * @typedef {import('./create-h.js').Result} Result\r\n *   Result from a `h` (or `s`) call.\r\n */\r\n\r\n// Register the JSX namespace on `h`.\r\n/**\r\n * @typedef {import('./jsx-classic.js').Element} h.JSX.Element\r\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} h.JSX.ElementChildrenAttribute\r\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} h.JSX.IntrinsicAttributes\r\n * @typedef {import('./jsx-classic.js').IntrinsicElements} h.JSX.IntrinsicElements\r\n */\r\n\r\n// Register the JSX namespace on `s`.\r\n/**\r\n * @typedef {import('./jsx-classic.js').Element} s.JSX.Element\r\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} s.JSX.ElementChildrenAttribute\r\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} s.JSX.IntrinsicAttributes\r\n * @typedef {import('./jsx-classic.js').IntrinsicElements} s.JSX.IntrinsicElements\r\n */\r\n\r\nimport {html, svg} from 'property-information'\r\nimport {createH} from './create-h.js'\r\nimport {svgCaseSensitiveTagNames} from './svg-case-sensitive-tag-names.js'\r\n\r\n// Note: this explicit type is needed, otherwise TS creates broken types.\r\n/** @type {ReturnType<createH>} */\r\nexport const h = createH(html, 'div')\r\n\r\n// Note: this explicit type is needed, otherwise TS creates broken types.\r\n/** @type {ReturnType<createH>} */\r\nexport const s = createH(svg, 'g', svgCaseSensitiveTagNames)\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAQA,IAAI,EAAEC,GAAG,QAAO,sBAAsB;AAC9C,SAAQC,OAAO,QAAO,eAAe;AACrC,SAAQC,wBAAwB,QAAO,mCAAmC;;AAE1E;AACA;AACA,OAAO,MAAMC,CAAC,GAAGF,OAAO,CAACF,IAAI,EAAE,KAAK,CAAC;;AAErC;AACA;AACA,OAAO,MAAMK,CAAC,GAAGH,OAAO,CAACD,GAAG,EAAE,GAAG,EAAEE,wBAAwB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}