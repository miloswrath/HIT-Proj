{"ast":null,"code":"import { Tokenizer, TokenizerMode } from '../tokenizer/index.js';\nimport { OpenElementStack } from './open-element-stack.js';\nimport { FormattingElementList, EntryType } from './formatting-element-list.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\nimport * as doctype from '../common/doctype.js';\nimport * as foreignContent from '../common/foreign-content.js';\nimport { ERR } from '../common/error-codes.js';\nimport * as unicode from '../common/unicode.js';\nimport { TAG_ID as $, TAG_NAMES as TN, NS, ATTRS, SPECIAL_ELEMENTS, DOCUMENT_MODE, NUMBERED_HEADERS, getTagID } from '../common/html.js';\nimport { TokenType, getTokenAttr } from '../common/token.js';\n//Misc constants\nconst HIDDEN_INPUT_TYPE = 'hidden';\n//Adoption agency loops iteration count\nconst AA_OUTER_LOOP_ITER = 8;\nconst AA_INNER_LOOP_ITER = 3;\n//Insertion modes\nvar InsertionMode;\n(function (InsertionMode) {\n  InsertionMode[InsertionMode[\"INITIAL\"] = 0] = \"INITIAL\";\n  InsertionMode[InsertionMode[\"BEFORE_HTML\"] = 1] = \"BEFORE_HTML\";\n  InsertionMode[InsertionMode[\"BEFORE_HEAD\"] = 2] = \"BEFORE_HEAD\";\n  InsertionMode[InsertionMode[\"IN_HEAD\"] = 3] = \"IN_HEAD\";\n  InsertionMode[InsertionMode[\"IN_HEAD_NO_SCRIPT\"] = 4] = \"IN_HEAD_NO_SCRIPT\";\n  InsertionMode[InsertionMode[\"AFTER_HEAD\"] = 5] = \"AFTER_HEAD\";\n  InsertionMode[InsertionMode[\"IN_BODY\"] = 6] = \"IN_BODY\";\n  InsertionMode[InsertionMode[\"TEXT\"] = 7] = \"TEXT\";\n  InsertionMode[InsertionMode[\"IN_TABLE\"] = 8] = \"IN_TABLE\";\n  InsertionMode[InsertionMode[\"IN_TABLE_TEXT\"] = 9] = \"IN_TABLE_TEXT\";\n  InsertionMode[InsertionMode[\"IN_CAPTION\"] = 10] = \"IN_CAPTION\";\n  InsertionMode[InsertionMode[\"IN_COLUMN_GROUP\"] = 11] = \"IN_COLUMN_GROUP\";\n  InsertionMode[InsertionMode[\"IN_TABLE_BODY\"] = 12] = \"IN_TABLE_BODY\";\n  InsertionMode[InsertionMode[\"IN_ROW\"] = 13] = \"IN_ROW\";\n  InsertionMode[InsertionMode[\"IN_CELL\"] = 14] = \"IN_CELL\";\n  InsertionMode[InsertionMode[\"IN_SELECT\"] = 15] = \"IN_SELECT\";\n  InsertionMode[InsertionMode[\"IN_SELECT_IN_TABLE\"] = 16] = \"IN_SELECT_IN_TABLE\";\n  InsertionMode[InsertionMode[\"IN_TEMPLATE\"] = 17] = \"IN_TEMPLATE\";\n  InsertionMode[InsertionMode[\"AFTER_BODY\"] = 18] = \"AFTER_BODY\";\n  InsertionMode[InsertionMode[\"IN_FRAMESET\"] = 19] = \"IN_FRAMESET\";\n  InsertionMode[InsertionMode[\"AFTER_FRAMESET\"] = 20] = \"AFTER_FRAMESET\";\n  InsertionMode[InsertionMode[\"AFTER_AFTER_BODY\"] = 21] = \"AFTER_AFTER_BODY\";\n  InsertionMode[InsertionMode[\"AFTER_AFTER_FRAMESET\"] = 22] = \"AFTER_AFTER_FRAMESET\";\n})(InsertionMode || (InsertionMode = {}));\nconst BASE_LOC = {\n  startLine: -1,\n  startCol: -1,\n  startOffset: -1,\n  endLine: -1,\n  endCol: -1,\n  endOffset: -1\n};\nconst TABLE_STRUCTURE_TAGS = new Set([$.TABLE, $.TBODY, $.TFOOT, $.THEAD, $.TR]);\nconst defaultParserOptions = {\n  scriptingEnabled: true,\n  sourceCodeLocationInfo: false,\n  treeAdapter: defaultTreeAdapter,\n  onParseError: null\n};\n//Parser\nexport class Parser {\n  constructor(options, document, /** @internal */\n  fragmentContext = null, /** @internal */\n  scriptHandler = null) {\n    this.fragmentContext = fragmentContext;\n    this.scriptHandler = scriptHandler;\n    this.currentToken = null;\n    this.stopped = false;\n    /** @internal */\n    this.insertionMode = InsertionMode.INITIAL;\n    /** @internal */\n    this.originalInsertionMode = InsertionMode.INITIAL;\n    /** @internal */\n    this.headElement = null;\n    /** @internal */\n    this.formElement = null;\n    /** Indicates that the current node is not an element in the HTML namespace */\n    this.currentNotInHTML = false;\n    /**\r\n     * The template insertion mode stack is maintained from the left.\r\n     * Ie. the topmost element will always have index 0.\r\n     *\r\n     * @internal\r\n     */\n    this.tmplInsertionModeStack = [];\n    /** @internal */\n    this.pendingCharacterTokens = [];\n    /** @internal */\n    this.hasNonWhitespacePendingCharacterToken = false;\n    /** @internal */\n    this.framesetOk = true;\n    /** @internal */\n    this.skipNextNewLine = false;\n    /** @internal */\n    this.fosterParentingEnabled = false;\n    this.options = {\n      ...defaultParserOptions,\n      ...options\n    };\n    this.treeAdapter = this.options.treeAdapter;\n    this.onParseError = this.options.onParseError;\n    // Always enable location info if we report parse errors.\n    if (this.onParseError) {\n      this.options.sourceCodeLocationInfo = true;\n    }\n    this.document = document !== null && document !== void 0 ? document : this.treeAdapter.createDocument();\n    this.tokenizer = new Tokenizer(this.options, this);\n    this.activeFormattingElements = new FormattingElementList(this.treeAdapter);\n    this.fragmentContextID = fragmentContext ? getTagID(this.treeAdapter.getTagName(fragmentContext)) : $.UNKNOWN;\n    this._setContextModes(fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : this.document, this.fragmentContextID);\n    this.openElements = new OpenElementStack(this.document, this.treeAdapter, this);\n  }\n  // API\n  static parse(html, options) {\n    const parser = new this(options);\n    parser.tokenizer.write(html, true);\n    return parser.document;\n  }\n  static getFragmentParser(fragmentContext, options) {\n    const opts = {\n      ...defaultParserOptions,\n      ...options\n    };\n    //NOTE: use a <template> element as the fragment context if no context element was provided,\n    //so we will parse in a \"forgiving\" manner\n    fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : fragmentContext = opts.treeAdapter.createElement(TN.TEMPLATE, NS.HTML, []);\n    //NOTE: create a fake element which will be used as the `document` for fragment parsing.\n    //This is important for jsdom, where a new `document` cannot be created. This led to\n    //fragment parsing messing with the main `document`.\n    const documentMock = opts.treeAdapter.createElement('documentmock', NS.HTML, []);\n    const parser = new this(opts, documentMock, fragmentContext);\n    if (parser.fragmentContextID === $.TEMPLATE) {\n      parser.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n    }\n    parser._initTokenizerForFragmentParsing();\n    parser._insertFakeRootElement();\n    parser._resetInsertionMode();\n    parser._findFormInFragmentContext();\n    return parser;\n  }\n  getFragment() {\n    const rootElement = this.treeAdapter.getFirstChild(this.document);\n    const fragment = this.treeAdapter.createDocumentFragment();\n    this._adoptNodes(rootElement, fragment);\n    return fragment;\n  }\n  //Errors\n  /** @internal */\n  _err(token, code, beforeToken) {\n    var _a;\n    if (!this.onParseError) return;\n    const loc = (_a = token.location) !== null && _a !== void 0 ? _a : BASE_LOC;\n    const err = {\n      code,\n      startLine: loc.startLine,\n      startCol: loc.startCol,\n      startOffset: loc.startOffset,\n      endLine: beforeToken ? loc.startLine : loc.endLine,\n      endCol: beforeToken ? loc.startCol : loc.endCol,\n      endOffset: beforeToken ? loc.startOffset : loc.endOffset\n    };\n    this.onParseError(err);\n  }\n  //Stack events\n  /** @internal */\n  onItemPush(node, tid, isTop) {\n    var _a, _b;\n    (_b = (_a = this.treeAdapter).onItemPush) === null || _b === void 0 ? void 0 : _b.call(_a, node);\n    if (isTop && this.openElements.stackTop > 0) this._setContextModes(node, tid);\n  }\n  /** @internal */\n  onItemPop(node, isTop) {\n    var _a, _b;\n    if (this.options.sourceCodeLocationInfo) {\n      this._setEndLocation(node, this.currentToken);\n    }\n    (_b = (_a = this.treeAdapter).onItemPop) === null || _b === void 0 ? void 0 : _b.call(_a, node, this.openElements.current);\n    if (isTop) {\n      let current;\n      let currentTagId;\n      if (this.openElements.stackTop === 0 && this.fragmentContext) {\n        current = this.fragmentContext;\n        currentTagId = this.fragmentContextID;\n      } else {\n        ({\n          current,\n          currentTagId\n        } = this.openElements);\n      }\n      this._setContextModes(current, currentTagId);\n    }\n  }\n  _setContextModes(current, tid) {\n    const isHTML = current === this.document || this.treeAdapter.getNamespaceURI(current) === NS.HTML;\n    this.currentNotInHTML = !isHTML;\n    this.tokenizer.inForeignNode = !isHTML && !this._isIntegrationPoint(tid, current);\n  }\n  /** @protected */\n  _switchToTextParsing(currentToken, nextTokenizerState) {\n    this._insertElement(currentToken, NS.HTML);\n    this.tokenizer.state = nextTokenizerState;\n    this.originalInsertionMode = this.insertionMode;\n    this.insertionMode = InsertionMode.TEXT;\n  }\n  switchToPlaintextParsing() {\n    this.insertionMode = InsertionMode.TEXT;\n    this.originalInsertionMode = InsertionMode.IN_BODY;\n    this.tokenizer.state = TokenizerMode.PLAINTEXT;\n  }\n  //Fragment parsing\n  /** @protected */\n  _getAdjustedCurrentElement() {\n    return this.openElements.stackTop === 0 && this.fragmentContext ? this.fragmentContext : this.openElements.current;\n  }\n  /** @protected */\n  _findFormInFragmentContext() {\n    let node = this.fragmentContext;\n    while (node) {\n      if (this.treeAdapter.getTagName(node) === TN.FORM) {\n        this.formElement = node;\n        break;\n      }\n      node = this.treeAdapter.getParentNode(node);\n    }\n  }\n  _initTokenizerForFragmentParsing() {\n    if (!this.fragmentContext || this.treeAdapter.getNamespaceURI(this.fragmentContext) !== NS.HTML) {\n      return;\n    }\n    switch (this.fragmentContextID) {\n      case $.TITLE:\n      case $.TEXTAREA:\n        {\n          this.tokenizer.state = TokenizerMode.RCDATA;\n          break;\n        }\n      case $.STYLE:\n      case $.XMP:\n      case $.IFRAME:\n      case $.NOEMBED:\n      case $.NOFRAMES:\n      case $.NOSCRIPT:\n        {\n          this.tokenizer.state = TokenizerMode.RAWTEXT;\n          break;\n        }\n      case $.SCRIPT:\n        {\n          this.tokenizer.state = TokenizerMode.SCRIPT_DATA;\n          break;\n        }\n      case $.PLAINTEXT:\n        {\n          this.tokenizer.state = TokenizerMode.PLAINTEXT;\n          break;\n        }\n      default:\n      // Do nothing\n    }\n  }\n  //Tree mutation\n  /** @protected */\n  _setDocumentType(token) {\n    const name = token.name || '';\n    const publicId = token.publicId || '';\n    const systemId = token.systemId || '';\n    this.treeAdapter.setDocumentType(this.document, name, publicId, systemId);\n    if (token.location) {\n      const documentChildren = this.treeAdapter.getChildNodes(this.document);\n      const docTypeNode = documentChildren.find(node => this.treeAdapter.isDocumentTypeNode(node));\n      if (docTypeNode) {\n        this.treeAdapter.setNodeSourceCodeLocation(docTypeNode, token.location);\n      }\n    }\n  }\n  /** @protected */\n  _attachElementToTree(element, location) {\n    if (this.options.sourceCodeLocationInfo) {\n      const loc = location && {\n        ...location,\n        startTag: location\n      };\n      this.treeAdapter.setNodeSourceCodeLocation(element, loc);\n    }\n    if (this._shouldFosterParentOnInsertion()) {\n      this._fosterParentElement(element);\n    } else {\n      const parent = this.openElements.currentTmplContentOrNode;\n      this.treeAdapter.appendChild(parent, element);\n    }\n  }\n  /**\r\n   * For self-closing tags. Add an element to the tree, but skip adding it\r\n   * to the stack.\r\n   */\n  /** @protected */\n  _appendElement(token, namespaceURI) {\n    const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n    this._attachElementToTree(element, token.location);\n  }\n  /** @protected */\n  _insertElement(token, namespaceURI) {\n    const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n    this._attachElementToTree(element, token.location);\n    this.openElements.push(element, token.tagID);\n  }\n  /** @protected */\n  _insertFakeElement(tagName, tagID) {\n    const element = this.treeAdapter.createElement(tagName, NS.HTML, []);\n    this._attachElementToTree(element, null);\n    this.openElements.push(element, tagID);\n  }\n  /** @protected */\n  _insertTemplate(token) {\n    const tmpl = this.treeAdapter.createElement(token.tagName, NS.HTML, token.attrs);\n    const content = this.treeAdapter.createDocumentFragment();\n    this.treeAdapter.setTemplateContent(tmpl, content);\n    this._attachElementToTree(tmpl, token.location);\n    this.openElements.push(tmpl, token.tagID);\n    if (this.options.sourceCodeLocationInfo) this.treeAdapter.setNodeSourceCodeLocation(content, null);\n  }\n  /** @protected */\n  _insertFakeRootElement() {\n    const element = this.treeAdapter.createElement(TN.HTML, NS.HTML, []);\n    if (this.options.sourceCodeLocationInfo) this.treeAdapter.setNodeSourceCodeLocation(element, null);\n    this.treeAdapter.appendChild(this.openElements.current, element);\n    this.openElements.push(element, $.HTML);\n  }\n  /** @protected */\n  _appendCommentNode(token, parent) {\n    const commentNode = this.treeAdapter.createCommentNode(token.data);\n    this.treeAdapter.appendChild(parent, commentNode);\n    if (this.options.sourceCodeLocationInfo) {\n      this.treeAdapter.setNodeSourceCodeLocation(commentNode, token.location);\n    }\n  }\n  /** @protected */\n  _insertCharacters(token) {\n    let parent;\n    let beforeElement;\n    if (this._shouldFosterParentOnInsertion()) {\n      ({\n        parent,\n        beforeElement\n      } = this._findFosterParentingLocation());\n      if (beforeElement) {\n        this.treeAdapter.insertTextBefore(parent, token.chars, beforeElement);\n      } else {\n        this.treeAdapter.insertText(parent, token.chars);\n      }\n    } else {\n      parent = this.openElements.currentTmplContentOrNode;\n      this.treeAdapter.insertText(parent, token.chars);\n    }\n    if (!token.location) return;\n    const siblings = this.treeAdapter.getChildNodes(parent);\n    const textNodeIdx = beforeElement ? siblings.lastIndexOf(beforeElement) : siblings.length;\n    const textNode = siblings[textNodeIdx - 1];\n    //NOTE: if we have a location assigned by another token, then just update the end position\n    const tnLoc = this.treeAdapter.getNodeSourceCodeLocation(textNode);\n    if (tnLoc) {\n      const {\n        endLine,\n        endCol,\n        endOffset\n      } = token.location;\n      this.treeAdapter.updateNodeSourceCodeLocation(textNode, {\n        endLine,\n        endCol,\n        endOffset\n      });\n    } else if (this.options.sourceCodeLocationInfo) {\n      this.treeAdapter.setNodeSourceCodeLocation(textNode, token.location);\n    }\n  }\n  /** @protected */\n  _adoptNodes(donor, recipient) {\n    for (let child = this.treeAdapter.getFirstChild(donor); child; child = this.treeAdapter.getFirstChild(donor)) {\n      this.treeAdapter.detachNode(child);\n      this.treeAdapter.appendChild(recipient, child);\n    }\n  }\n  /** @protected */\n  _setEndLocation(element, closingToken) {\n    if (this.treeAdapter.getNodeSourceCodeLocation(element) && closingToken.location) {\n      const ctLoc = closingToken.location;\n      const tn = this.treeAdapter.getTagName(element);\n      const endLoc =\n      // NOTE: For cases like <p> <p> </p> - First 'p' closes without a closing\n      // tag and for cases like <td> <p> </td> - 'p' closes without a closing tag.\n      closingToken.type === TokenType.END_TAG && tn === closingToken.tagName ? {\n        endTag: {\n          ...ctLoc\n        },\n        endLine: ctLoc.endLine,\n        endCol: ctLoc.endCol,\n        endOffset: ctLoc.endOffset\n      } : {\n        endLine: ctLoc.startLine,\n        endCol: ctLoc.startCol,\n        endOffset: ctLoc.startOffset\n      };\n      this.treeAdapter.updateNodeSourceCodeLocation(element, endLoc);\n    }\n  }\n  //Token processing\n  shouldProcessStartTagTokenInForeignContent(token) {\n    // Check that neither current === document, or ns === NS.HTML\n    if (!this.currentNotInHTML) return false;\n    let current;\n    let currentTagId;\n    if (this.openElements.stackTop === 0 && this.fragmentContext) {\n      current = this.fragmentContext;\n      currentTagId = this.fragmentContextID;\n    } else {\n      ({\n        current,\n        currentTagId\n      } = this.openElements);\n    }\n    if (token.tagID === $.SVG && this.treeAdapter.getTagName(current) === TN.ANNOTATION_XML && this.treeAdapter.getNamespaceURI(current) === NS.MATHML) {\n      return false;\n    }\n    return (\n      // Check that `current` is not an integration point for HTML or MathML elements.\n      this.tokenizer.inForeignNode ||\n      // If it _is_ an integration point, then we might have to check that it is not an HTML\n      // integration point.\n      (token.tagID === $.MGLYPH || token.tagID === $.MALIGNMARK) && !this._isIntegrationPoint(currentTagId, current, NS.HTML)\n    );\n  }\n  /** @protected */\n  _processToken(token) {\n    switch (token.type) {\n      case TokenType.CHARACTER:\n        {\n          this.onCharacter(token);\n          break;\n        }\n      case TokenType.NULL_CHARACTER:\n        {\n          this.onNullCharacter(token);\n          break;\n        }\n      case TokenType.COMMENT:\n        {\n          this.onComment(token);\n          break;\n        }\n      case TokenType.DOCTYPE:\n        {\n          this.onDoctype(token);\n          break;\n        }\n      case TokenType.START_TAG:\n        {\n          this._processStartTag(token);\n          break;\n        }\n      case TokenType.END_TAG:\n        {\n          this.onEndTag(token);\n          break;\n        }\n      case TokenType.EOF:\n        {\n          this.onEof(token);\n          break;\n        }\n      case TokenType.WHITESPACE_CHARACTER:\n        {\n          this.onWhitespaceCharacter(token);\n          break;\n        }\n    }\n  }\n  //Integration points\n  /** @protected */\n  _isIntegrationPoint(tid, element, foreignNS) {\n    const ns = this.treeAdapter.getNamespaceURI(element);\n    const attrs = this.treeAdapter.getAttrList(element);\n    return foreignContent.isIntegrationPoint(tid, ns, attrs, foreignNS);\n  }\n  //Active formatting elements reconstruction\n  /** @protected */\n  _reconstructActiveFormattingElements() {\n    const listLength = this.activeFormattingElements.entries.length;\n    if (listLength) {\n      const endIndex = this.activeFormattingElements.entries.findIndex(entry => entry.type === EntryType.Marker || this.openElements.contains(entry.element));\n      const unopenIdx = endIndex < 0 ? listLength - 1 : endIndex - 1;\n      for (let i = unopenIdx; i >= 0; i--) {\n        const entry = this.activeFormattingElements.entries[i];\n        this._insertElement(entry.token, this.treeAdapter.getNamespaceURI(entry.element));\n        entry.element = this.openElements.current;\n      }\n    }\n  }\n  //Close elements\n  /** @protected */\n  _closeTableCell() {\n    this.openElements.generateImpliedEndTags();\n    this.openElements.popUntilTableCellPopped();\n    this.activeFormattingElements.clearToLastMarker();\n    this.insertionMode = InsertionMode.IN_ROW;\n  }\n  /** @protected */\n  _closePElement() {\n    this.openElements.generateImpliedEndTagsWithExclusion($.P);\n    this.openElements.popUntilTagNamePopped($.P);\n  }\n  //Insertion modes\n  /** @protected */\n  _resetInsertionMode() {\n    for (let i = this.openElements.stackTop; i >= 0; i--) {\n      //Insertion mode reset map\n      switch (i === 0 && this.fragmentContext ? this.fragmentContextID : this.openElements.tagIDs[i]) {\n        case $.TR:\n          {\n            this.insertionMode = InsertionMode.IN_ROW;\n            return;\n          }\n        case $.TBODY:\n        case $.THEAD:\n        case $.TFOOT:\n          {\n            this.insertionMode = InsertionMode.IN_TABLE_BODY;\n            return;\n          }\n        case $.CAPTION:\n          {\n            this.insertionMode = InsertionMode.IN_CAPTION;\n            return;\n          }\n        case $.COLGROUP:\n          {\n            this.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n            return;\n          }\n        case $.TABLE:\n          {\n            this.insertionMode = InsertionMode.IN_TABLE;\n            return;\n          }\n        case $.BODY:\n          {\n            this.insertionMode = InsertionMode.IN_BODY;\n            return;\n          }\n        case $.FRAMESET:\n          {\n            this.insertionMode = InsertionMode.IN_FRAMESET;\n            return;\n          }\n        case $.SELECT:\n          {\n            this._resetInsertionModeForSelect(i);\n            return;\n          }\n        case $.TEMPLATE:\n          {\n            this.insertionMode = this.tmplInsertionModeStack[0];\n            return;\n          }\n        case $.HTML:\n          {\n            this.insertionMode = this.headElement ? InsertionMode.AFTER_HEAD : InsertionMode.BEFORE_HEAD;\n            return;\n          }\n        case $.TD:\n        case $.TH:\n          {\n            if (i > 0) {\n              this.insertionMode = InsertionMode.IN_CELL;\n              return;\n            }\n            break;\n          }\n        case $.HEAD:\n          {\n            if (i > 0) {\n              this.insertionMode = InsertionMode.IN_HEAD;\n              return;\n            }\n            break;\n          }\n      }\n    }\n    this.insertionMode = InsertionMode.IN_BODY;\n  }\n  /** @protected */\n  _resetInsertionModeForSelect(selectIdx) {\n    if (selectIdx > 0) {\n      for (let i = selectIdx - 1; i > 0; i--) {\n        const tn = this.openElements.tagIDs[i];\n        if (tn === $.TEMPLATE) {\n          break;\n        } else if (tn === $.TABLE) {\n          this.insertionMode = InsertionMode.IN_SELECT_IN_TABLE;\n          return;\n        }\n      }\n    }\n    this.insertionMode = InsertionMode.IN_SELECT;\n  }\n  //Foster parenting\n  /** @protected */\n  _isElementCausesFosterParenting(tn) {\n    return TABLE_STRUCTURE_TAGS.has(tn);\n  }\n  /** @protected */\n  _shouldFosterParentOnInsertion() {\n    return this.fosterParentingEnabled && this._isElementCausesFosterParenting(this.openElements.currentTagId);\n  }\n  /** @protected */\n  _findFosterParentingLocation() {\n    for (let i = this.openElements.stackTop; i >= 0; i--) {\n      const openElement = this.openElements.items[i];\n      switch (this.openElements.tagIDs[i]) {\n        case $.TEMPLATE:\n          {\n            if (this.treeAdapter.getNamespaceURI(openElement) === NS.HTML) {\n              return {\n                parent: this.treeAdapter.getTemplateContent(openElement),\n                beforeElement: null\n              };\n            }\n            break;\n          }\n        case $.TABLE:\n          {\n            const parent = this.treeAdapter.getParentNode(openElement);\n            if (parent) {\n              return {\n                parent,\n                beforeElement: openElement\n              };\n            }\n            return {\n              parent: this.openElements.items[i - 1],\n              beforeElement: null\n            };\n          }\n        default:\n        // Do nothing\n      }\n    }\n    return {\n      parent: this.openElements.items[0],\n      beforeElement: null\n    };\n  }\n  /** @protected */\n  _fosterParentElement(element) {\n    const location = this._findFosterParentingLocation();\n    if (location.beforeElement) {\n      this.treeAdapter.insertBefore(location.parent, element, location.beforeElement);\n    } else {\n      this.treeAdapter.appendChild(location.parent, element);\n    }\n  }\n  //Special elements\n  /** @protected */\n  _isSpecialElement(element, id) {\n    const ns = this.treeAdapter.getNamespaceURI(element);\n    return SPECIAL_ELEMENTS[ns].has(id);\n  }\n  /** @internal */\n  onCharacter(token) {\n    this.skipNextNewLine = false;\n    if (this.tokenizer.inForeignNode) {\n      characterInForeignContent(this, token);\n      return;\n    }\n    switch (this.insertionMode) {\n      case InsertionMode.INITIAL:\n        {\n          tokenInInitialMode(this, token);\n          break;\n        }\n      case InsertionMode.BEFORE_HTML:\n        {\n          tokenBeforeHtml(this, token);\n          break;\n        }\n      case InsertionMode.BEFORE_HEAD:\n        {\n          tokenBeforeHead(this, token);\n          break;\n        }\n      case InsertionMode.IN_HEAD:\n        {\n          tokenInHead(this, token);\n          break;\n        }\n      case InsertionMode.IN_HEAD_NO_SCRIPT:\n        {\n          tokenInHeadNoScript(this, token);\n          break;\n        }\n      case InsertionMode.AFTER_HEAD:\n        {\n          tokenAfterHead(this, token);\n          break;\n        }\n      case InsertionMode.IN_BODY:\n      case InsertionMode.IN_CAPTION:\n      case InsertionMode.IN_CELL:\n      case InsertionMode.IN_TEMPLATE:\n        {\n          characterInBody(this, token);\n          break;\n        }\n      case InsertionMode.TEXT:\n      case InsertionMode.IN_SELECT:\n      case InsertionMode.IN_SELECT_IN_TABLE:\n        {\n          this._insertCharacters(token);\n          break;\n        }\n      case InsertionMode.IN_TABLE:\n      case InsertionMode.IN_TABLE_BODY:\n      case InsertionMode.IN_ROW:\n        {\n          characterInTable(this, token);\n          break;\n        }\n      case InsertionMode.IN_TABLE_TEXT:\n        {\n          characterInTableText(this, token);\n          break;\n        }\n      case InsertionMode.IN_COLUMN_GROUP:\n        {\n          tokenInColumnGroup(this, token);\n          break;\n        }\n      case InsertionMode.AFTER_BODY:\n        {\n          tokenAfterBody(this, token);\n          break;\n        }\n      case InsertionMode.AFTER_AFTER_BODY:\n        {\n          tokenAfterAfterBody(this, token);\n          break;\n        }\n      default:\n      // Do nothing\n    }\n  }\n  /** @internal */\n  onNullCharacter(token) {\n    this.skipNextNewLine = false;\n    if (this.tokenizer.inForeignNode) {\n      nullCharacterInForeignContent(this, token);\n      return;\n    }\n    switch (this.insertionMode) {\n      case InsertionMode.INITIAL:\n        {\n          tokenInInitialMode(this, token);\n          break;\n        }\n      case InsertionMode.BEFORE_HTML:\n        {\n          tokenBeforeHtml(this, token);\n          break;\n        }\n      case InsertionMode.BEFORE_HEAD:\n        {\n          tokenBeforeHead(this, token);\n          break;\n        }\n      case InsertionMode.IN_HEAD:\n        {\n          tokenInHead(this, token);\n          break;\n        }\n      case InsertionMode.IN_HEAD_NO_SCRIPT:\n        {\n          tokenInHeadNoScript(this, token);\n          break;\n        }\n      case InsertionMode.AFTER_HEAD:\n        {\n          tokenAfterHead(this, token);\n          break;\n        }\n      case InsertionMode.TEXT:\n        {\n          this._insertCharacters(token);\n          break;\n        }\n      case InsertionMode.IN_TABLE:\n      case InsertionMode.IN_TABLE_BODY:\n      case InsertionMode.IN_ROW:\n        {\n          characterInTable(this, token);\n          break;\n        }\n      case InsertionMode.IN_COLUMN_GROUP:\n        {\n          tokenInColumnGroup(this, token);\n          break;\n        }\n      case InsertionMode.AFTER_BODY:\n        {\n          tokenAfterBody(this, token);\n          break;\n        }\n      case InsertionMode.AFTER_AFTER_BODY:\n        {\n          tokenAfterAfterBody(this, token);\n          break;\n        }\n      default:\n      // Do nothing\n    }\n  }\n  /** @internal */\n  onComment(token) {\n    this.skipNextNewLine = false;\n    if (this.currentNotInHTML) {\n      appendComment(this, token);\n      return;\n    }\n    switch (this.insertionMode) {\n      case InsertionMode.INITIAL:\n      case InsertionMode.BEFORE_HTML:\n      case InsertionMode.BEFORE_HEAD:\n      case InsertionMode.IN_HEAD:\n      case InsertionMode.IN_HEAD_NO_SCRIPT:\n      case InsertionMode.AFTER_HEAD:\n      case InsertionMode.IN_BODY:\n      case InsertionMode.IN_TABLE:\n      case InsertionMode.IN_CAPTION:\n      case InsertionMode.IN_COLUMN_GROUP:\n      case InsertionMode.IN_TABLE_BODY:\n      case InsertionMode.IN_ROW:\n      case InsertionMode.IN_CELL:\n      case InsertionMode.IN_SELECT:\n      case InsertionMode.IN_SELECT_IN_TABLE:\n      case InsertionMode.IN_TEMPLATE:\n      case InsertionMode.IN_FRAMESET:\n      case InsertionMode.AFTER_FRAMESET:\n        {\n          appendComment(this, token);\n          break;\n        }\n      case InsertionMode.IN_TABLE_TEXT:\n        {\n          tokenInTableText(this, token);\n          break;\n        }\n      case InsertionMode.AFTER_BODY:\n        {\n          appendCommentToRootHtmlElement(this, token);\n          break;\n        }\n      case InsertionMode.AFTER_AFTER_BODY:\n      case InsertionMode.AFTER_AFTER_FRAMESET:\n        {\n          appendCommentToDocument(this, token);\n          break;\n        }\n      default:\n      // Do nothing\n    }\n  }\n  /** @internal */\n  onDoctype(token) {\n    this.skipNextNewLine = false;\n    switch (this.insertionMode) {\n      case InsertionMode.INITIAL:\n        {\n          doctypeInInitialMode(this, token);\n          break;\n        }\n      case InsertionMode.BEFORE_HEAD:\n      case InsertionMode.IN_HEAD:\n      case InsertionMode.IN_HEAD_NO_SCRIPT:\n      case InsertionMode.AFTER_HEAD:\n        {\n          this._err(token, ERR.misplacedDoctype);\n          break;\n        }\n      case InsertionMode.IN_TABLE_TEXT:\n        {\n          tokenInTableText(this, token);\n          break;\n        }\n      default:\n      // Do nothing\n    }\n  }\n  /** @internal */\n  onStartTag(token) {\n    this.skipNextNewLine = false;\n    this.currentToken = token;\n    this._processStartTag(token);\n    if (token.selfClosing && !token.ackSelfClosing) {\n      this._err(token, ERR.nonVoidHtmlElementStartTagWithTrailingSolidus);\n    }\n  }\n  /**\r\n   * Processes a given start tag.\r\n   *\r\n   * `onStartTag` checks if a self-closing tag was recognized. When a token\r\n   * is moved inbetween multiple insertion modes, this check for self-closing\r\n   * could lead to false positives. To avoid this, `_processStartTag` is used\r\n   * for nested calls.\r\n   *\r\n   * @param token The token to process.\r\n   * @protected\r\n   */\n  _processStartTag(token) {\n    if (this.shouldProcessStartTagTokenInForeignContent(token)) {\n      startTagInForeignContent(this, token);\n    } else {\n      this._startTagOutsideForeignContent(token);\n    }\n  }\n  /** @protected */\n  _startTagOutsideForeignContent(token) {\n    switch (this.insertionMode) {\n      case InsertionMode.INITIAL:\n        {\n          tokenInInitialMode(this, token);\n          break;\n        }\n      case InsertionMode.BEFORE_HTML:\n        {\n          startTagBeforeHtml(this, token);\n          break;\n        }\n      case InsertionMode.BEFORE_HEAD:\n        {\n          startTagBeforeHead(this, token);\n          break;\n        }\n      case InsertionMode.IN_HEAD:\n        {\n          startTagInHead(this, token);\n          break;\n        }\n      case InsertionMode.IN_HEAD_NO_SCRIPT:\n        {\n          startTagInHeadNoScript(this, token);\n          break;\n        }\n      case InsertionMode.AFTER_HEAD:\n        {\n          startTagAfterHead(this, token);\n          break;\n        }\n      case InsertionMode.IN_BODY:\n        {\n          startTagInBody(this, token);\n          break;\n        }\n      case InsertionMode.IN_TABLE:\n        {\n          startTagInTable(this, token);\n          break;\n        }\n      case InsertionMode.IN_TABLE_TEXT:\n        {\n          tokenInTableText(this, token);\n          break;\n        }\n      case InsertionMode.IN_CAPTION:\n        {\n          startTagInCaption(this, token);\n          break;\n        }\n      case InsertionMode.IN_COLUMN_GROUP:\n        {\n          startTagInColumnGroup(this, token);\n          break;\n        }\n      case InsertionMode.IN_TABLE_BODY:\n        {\n          startTagInTableBody(this, token);\n          break;\n        }\n      case InsertionMode.IN_ROW:\n        {\n          startTagInRow(this, token);\n          break;\n        }\n      case InsertionMode.IN_CELL:\n        {\n          startTagInCell(this, token);\n          break;\n        }\n      case InsertionMode.IN_SELECT:\n        {\n          startTagInSelect(this, token);\n          break;\n        }\n      case InsertionMode.IN_SELECT_IN_TABLE:\n        {\n          startTagInSelectInTable(this, token);\n          break;\n        }\n      case InsertionMode.IN_TEMPLATE:\n        {\n          startTagInTemplate(this, token);\n          break;\n        }\n      case InsertionMode.AFTER_BODY:\n        {\n          startTagAfterBody(this, token);\n          break;\n        }\n      case InsertionMode.IN_FRAMESET:\n        {\n          startTagInFrameset(this, token);\n          break;\n        }\n      case InsertionMode.AFTER_FRAMESET:\n        {\n          startTagAfterFrameset(this, token);\n          break;\n        }\n      case InsertionMode.AFTER_AFTER_BODY:\n        {\n          startTagAfterAfterBody(this, token);\n          break;\n        }\n      case InsertionMode.AFTER_AFTER_FRAMESET:\n        {\n          startTagAfterAfterFrameset(this, token);\n          break;\n        }\n      default:\n      // Do nothing\n    }\n  }\n  /** @internal */\n  onEndTag(token) {\n    this.skipNextNewLine = false;\n    this.currentToken = token;\n    if (this.currentNotInHTML) {\n      endTagInForeignContent(this, token);\n    } else {\n      this._endTagOutsideForeignContent(token);\n    }\n  }\n  /** @protected */\n  _endTagOutsideForeignContent(token) {\n    switch (this.insertionMode) {\n      case InsertionMode.INITIAL:\n        {\n          tokenInInitialMode(this, token);\n          break;\n        }\n      case InsertionMode.BEFORE_HTML:\n        {\n          endTagBeforeHtml(this, token);\n          break;\n        }\n      case InsertionMode.BEFORE_HEAD:\n        {\n          endTagBeforeHead(this, token);\n          break;\n        }\n      case InsertionMode.IN_HEAD:\n        {\n          endTagInHead(this, token);\n          break;\n        }\n      case InsertionMode.IN_HEAD_NO_SCRIPT:\n        {\n          endTagInHeadNoScript(this, token);\n          break;\n        }\n      case InsertionMode.AFTER_HEAD:\n        {\n          endTagAfterHead(this, token);\n          break;\n        }\n      case InsertionMode.IN_BODY:\n        {\n          endTagInBody(this, token);\n          break;\n        }\n      case InsertionMode.TEXT:\n        {\n          endTagInText(this, token);\n          break;\n        }\n      case InsertionMode.IN_TABLE:\n        {\n          endTagInTable(this, token);\n          break;\n        }\n      case InsertionMode.IN_TABLE_TEXT:\n        {\n          tokenInTableText(this, token);\n          break;\n        }\n      case InsertionMode.IN_CAPTION:\n        {\n          endTagInCaption(this, token);\n          break;\n        }\n      case InsertionMode.IN_COLUMN_GROUP:\n        {\n          endTagInColumnGroup(this, token);\n          break;\n        }\n      case InsertionMode.IN_TABLE_BODY:\n        {\n          endTagInTableBody(this, token);\n          break;\n        }\n      case InsertionMode.IN_ROW:\n        {\n          endTagInRow(this, token);\n          break;\n        }\n      case InsertionMode.IN_CELL:\n        {\n          endTagInCell(this, token);\n          break;\n        }\n      case InsertionMode.IN_SELECT:\n        {\n          endTagInSelect(this, token);\n          break;\n        }\n      case InsertionMode.IN_SELECT_IN_TABLE:\n        {\n          endTagInSelectInTable(this, token);\n          break;\n        }\n      case InsertionMode.IN_TEMPLATE:\n        {\n          endTagInTemplate(this, token);\n          break;\n        }\n      case InsertionMode.AFTER_BODY:\n        {\n          endTagAfterBody(this, token);\n          break;\n        }\n      case InsertionMode.IN_FRAMESET:\n        {\n          endTagInFrameset(this, token);\n          break;\n        }\n      case InsertionMode.AFTER_FRAMESET:\n        {\n          endTagAfterFrameset(this, token);\n          break;\n        }\n      case InsertionMode.AFTER_AFTER_BODY:\n        {\n          tokenAfterAfterBody(this, token);\n          break;\n        }\n      default:\n      // Do nothing\n    }\n  }\n  /** @internal */\n  onEof(token) {\n    switch (this.insertionMode) {\n      case InsertionMode.INITIAL:\n        {\n          tokenInInitialMode(this, token);\n          break;\n        }\n      case InsertionMode.BEFORE_HTML:\n        {\n          tokenBeforeHtml(this, token);\n          break;\n        }\n      case InsertionMode.BEFORE_HEAD:\n        {\n          tokenBeforeHead(this, token);\n          break;\n        }\n      case InsertionMode.IN_HEAD:\n        {\n          tokenInHead(this, token);\n          break;\n        }\n      case InsertionMode.IN_HEAD_NO_SCRIPT:\n        {\n          tokenInHeadNoScript(this, token);\n          break;\n        }\n      case InsertionMode.AFTER_HEAD:\n        {\n          tokenAfterHead(this, token);\n          break;\n        }\n      case InsertionMode.IN_BODY:\n      case InsertionMode.IN_TABLE:\n      case InsertionMode.IN_CAPTION:\n      case InsertionMode.IN_COLUMN_GROUP:\n      case InsertionMode.IN_TABLE_BODY:\n      case InsertionMode.IN_ROW:\n      case InsertionMode.IN_CELL:\n      case InsertionMode.IN_SELECT:\n      case InsertionMode.IN_SELECT_IN_TABLE:\n        {\n          eofInBody(this, token);\n          break;\n        }\n      case InsertionMode.TEXT:\n        {\n          eofInText(this, token);\n          break;\n        }\n      case InsertionMode.IN_TABLE_TEXT:\n        {\n          tokenInTableText(this, token);\n          break;\n        }\n      case InsertionMode.IN_TEMPLATE:\n        {\n          eofInTemplate(this, token);\n          break;\n        }\n      case InsertionMode.AFTER_BODY:\n      case InsertionMode.IN_FRAMESET:\n      case InsertionMode.AFTER_FRAMESET:\n      case InsertionMode.AFTER_AFTER_BODY:\n      case InsertionMode.AFTER_AFTER_FRAMESET:\n        {\n          stopParsing(this, token);\n          break;\n        }\n      default:\n      // Do nothing\n    }\n  }\n  /** @internal */\n  onWhitespaceCharacter(token) {\n    if (this.skipNextNewLine) {\n      this.skipNextNewLine = false;\n      if (token.chars.charCodeAt(0) === unicode.CODE_POINTS.LINE_FEED) {\n        if (token.chars.length === 1) {\n          return;\n        }\n        token.chars = token.chars.substr(1);\n      }\n    }\n    if (this.tokenizer.inForeignNode) {\n      this._insertCharacters(token);\n      return;\n    }\n    switch (this.insertionMode) {\n      case InsertionMode.IN_HEAD:\n      case InsertionMode.IN_HEAD_NO_SCRIPT:\n      case InsertionMode.AFTER_HEAD:\n      case InsertionMode.TEXT:\n      case InsertionMode.IN_COLUMN_GROUP:\n      case InsertionMode.IN_SELECT:\n      case InsertionMode.IN_SELECT_IN_TABLE:\n      case InsertionMode.IN_FRAMESET:\n      case InsertionMode.AFTER_FRAMESET:\n        {\n          this._insertCharacters(token);\n          break;\n        }\n      case InsertionMode.IN_BODY:\n      case InsertionMode.IN_CAPTION:\n      case InsertionMode.IN_CELL:\n      case InsertionMode.IN_TEMPLATE:\n      case InsertionMode.AFTER_BODY:\n      case InsertionMode.AFTER_AFTER_BODY:\n      case InsertionMode.AFTER_AFTER_FRAMESET:\n        {\n          whitespaceCharacterInBody(this, token);\n          break;\n        }\n      case InsertionMode.IN_TABLE:\n      case InsertionMode.IN_TABLE_BODY:\n      case InsertionMode.IN_ROW:\n        {\n          characterInTable(this, token);\n          break;\n        }\n      case InsertionMode.IN_TABLE_TEXT:\n        {\n          whitespaceCharacterInTableText(this, token);\n          break;\n        }\n      default:\n      // Do nothing\n    }\n  }\n}\n//Adoption agency algorithm\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#adoptionAgency)\n//------------------------------------------------------------------\n//Steps 5-8 of the algorithm\nfunction aaObtainFormattingElementEntry(p, token) {\n  let formattingElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(token.tagName);\n  if (formattingElementEntry) {\n    if (!p.openElements.contains(formattingElementEntry.element)) {\n      p.activeFormattingElements.removeEntry(formattingElementEntry);\n      formattingElementEntry = null;\n    } else if (!p.openElements.hasInScope(token.tagID)) {\n      formattingElementEntry = null;\n    }\n  } else {\n    genericEndTagInBody(p, token);\n  }\n  return formattingElementEntry;\n}\n//Steps 9 and 10 of the algorithm\nfunction aaObtainFurthestBlock(p, formattingElementEntry) {\n  let furthestBlock = null;\n  let idx = p.openElements.stackTop;\n  for (; idx >= 0; idx--) {\n    const element = p.openElements.items[idx];\n    if (element === formattingElementEntry.element) {\n      break;\n    }\n    if (p._isSpecialElement(element, p.openElements.tagIDs[idx])) {\n      furthestBlock = element;\n    }\n  }\n  if (!furthestBlock) {\n    p.openElements.shortenToLength(idx < 0 ? 0 : idx);\n    p.activeFormattingElements.removeEntry(formattingElementEntry);\n  }\n  return furthestBlock;\n}\n//Step 13 of the algorithm\nfunction aaInnerLoop(p, furthestBlock, formattingElement) {\n  let lastElement = furthestBlock;\n  let nextElement = p.openElements.getCommonAncestor(furthestBlock);\n  for (let i = 0, element = nextElement; element !== formattingElement; i++, element = nextElement) {\n    //NOTE: store the next element for the next loop iteration (it may be deleted from the stack by step 9.5)\n    nextElement = p.openElements.getCommonAncestor(element);\n    const elementEntry = p.activeFormattingElements.getElementEntry(element);\n    const counterOverflow = elementEntry && i >= AA_INNER_LOOP_ITER;\n    const shouldRemoveFromOpenElements = !elementEntry || counterOverflow;\n    if (shouldRemoveFromOpenElements) {\n      if (counterOverflow) {\n        p.activeFormattingElements.removeEntry(elementEntry);\n      }\n      p.openElements.remove(element);\n    } else {\n      element = aaRecreateElementFromEntry(p, elementEntry);\n      if (lastElement === furthestBlock) {\n        p.activeFormattingElements.bookmark = elementEntry;\n      }\n      p.treeAdapter.detachNode(lastElement);\n      p.treeAdapter.appendChild(element, lastElement);\n      lastElement = element;\n    }\n  }\n  return lastElement;\n}\n//Step 13.7 of the algorithm\nfunction aaRecreateElementFromEntry(p, elementEntry) {\n  const ns = p.treeAdapter.getNamespaceURI(elementEntry.element);\n  const newElement = p.treeAdapter.createElement(elementEntry.token.tagName, ns, elementEntry.token.attrs);\n  p.openElements.replace(elementEntry.element, newElement);\n  elementEntry.element = newElement;\n  return newElement;\n}\n//Step 14 of the algorithm\nfunction aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement) {\n  const tn = p.treeAdapter.getTagName(commonAncestor);\n  const tid = getTagID(tn);\n  if (p._isElementCausesFosterParenting(tid)) {\n    p._fosterParentElement(lastElement);\n  } else {\n    const ns = p.treeAdapter.getNamespaceURI(commonAncestor);\n    if (tid === $.TEMPLATE && ns === NS.HTML) {\n      commonAncestor = p.treeAdapter.getTemplateContent(commonAncestor);\n    }\n    p.treeAdapter.appendChild(commonAncestor, lastElement);\n  }\n}\n//Steps 15-19 of the algorithm\nfunction aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry) {\n  const ns = p.treeAdapter.getNamespaceURI(formattingElementEntry.element);\n  const {\n    token\n  } = formattingElementEntry;\n  const newElement = p.treeAdapter.createElement(token.tagName, ns, token.attrs);\n  p._adoptNodes(furthestBlock, newElement);\n  p.treeAdapter.appendChild(furthestBlock, newElement);\n  p.activeFormattingElements.insertElementAfterBookmark(newElement, token);\n  p.activeFormattingElements.removeEntry(formattingElementEntry);\n  p.openElements.remove(formattingElementEntry.element);\n  p.openElements.insertAfter(furthestBlock, newElement, token.tagID);\n}\n//Algorithm entry point\nfunction callAdoptionAgency(p, token) {\n  for (let i = 0; i < AA_OUTER_LOOP_ITER; i++) {\n    const formattingElementEntry = aaObtainFormattingElementEntry(p, token);\n    if (!formattingElementEntry) {\n      break;\n    }\n    const furthestBlock = aaObtainFurthestBlock(p, formattingElementEntry);\n    if (!furthestBlock) {\n      break;\n    }\n    p.activeFormattingElements.bookmark = formattingElementEntry;\n    const lastElement = aaInnerLoop(p, furthestBlock, formattingElementEntry.element);\n    const commonAncestor = p.openElements.getCommonAncestor(formattingElementEntry.element);\n    p.treeAdapter.detachNode(lastElement);\n    if (commonAncestor) aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement);\n    aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry);\n  }\n}\n//Generic token handlers\n//------------------------------------------------------------------\nfunction appendComment(p, token) {\n  p._appendCommentNode(token, p.openElements.currentTmplContentOrNode);\n}\nfunction appendCommentToRootHtmlElement(p, token) {\n  p._appendCommentNode(token, p.openElements.items[0]);\n}\nfunction appendCommentToDocument(p, token) {\n  p._appendCommentNode(token, p.document);\n}\nfunction stopParsing(p, token) {\n  p.stopped = true;\n  // NOTE: Set end locations for elements that remain on the open element stack.\n  if (token.location) {\n    // NOTE: If we are not in a fragment, `html` and `body` will stay on the stack.\n    // This is a problem, as we might overwrite their end position here.\n    const target = p.fragmentContext ? 0 : 2;\n    for (let i = p.openElements.stackTop; i >= target; i--) {\n      p._setEndLocation(p.openElements.items[i], token);\n    }\n    // Handle `html` and `body`\n    if (!p.fragmentContext && p.openElements.stackTop >= 0) {\n      const htmlElement = p.openElements.items[0];\n      const htmlLocation = p.treeAdapter.getNodeSourceCodeLocation(htmlElement);\n      if (htmlLocation && !htmlLocation.endTag) {\n        p._setEndLocation(htmlElement, token);\n        if (p.openElements.stackTop >= 1) {\n          const bodyElement = p.openElements.items[1];\n          const bodyLocation = p.treeAdapter.getNodeSourceCodeLocation(bodyElement);\n          if (bodyLocation && !bodyLocation.endTag) {\n            p._setEndLocation(bodyElement, token);\n          }\n        }\n      }\n    }\n  }\n}\n// The \"initial\" insertion mode\n//------------------------------------------------------------------\nfunction doctypeInInitialMode(p, token) {\n  p._setDocumentType(token);\n  const mode = token.forceQuirks ? DOCUMENT_MODE.QUIRKS : doctype.getDocumentMode(token);\n  if (!doctype.isConforming(token)) {\n    p._err(token, ERR.nonConformingDoctype);\n  }\n  p.treeAdapter.setDocumentMode(p.document, mode);\n  p.insertionMode = InsertionMode.BEFORE_HTML;\n}\nfunction tokenInInitialMode(p, token) {\n  p._err(token, ERR.missingDoctype, true);\n  p.treeAdapter.setDocumentMode(p.document, DOCUMENT_MODE.QUIRKS);\n  p.insertionMode = InsertionMode.BEFORE_HTML;\n  p._processToken(token);\n}\n// The \"before html\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHtml(p, token) {\n  if (token.tagID === $.HTML) {\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.BEFORE_HEAD;\n  } else {\n    tokenBeforeHtml(p, token);\n  }\n}\nfunction endTagBeforeHtml(p, token) {\n  const tn = token.tagID;\n  if (tn === $.HTML || tn === $.HEAD || tn === $.BODY || tn === $.BR) {\n    tokenBeforeHtml(p, token);\n  }\n}\nfunction tokenBeforeHtml(p, token) {\n  p._insertFakeRootElement();\n  p.insertionMode = InsertionMode.BEFORE_HEAD;\n  p._processToken(token);\n}\n// The \"before head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHead(p, token) {\n  switch (token.tagID) {\n    case $.HTML:\n      {\n        startTagInBody(p, token);\n        break;\n      }\n    case $.HEAD:\n      {\n        p._insertElement(token, NS.HTML);\n        p.headElement = p.openElements.current;\n        p.insertionMode = InsertionMode.IN_HEAD;\n        break;\n      }\n    default:\n      {\n        tokenBeforeHead(p, token);\n      }\n  }\n}\nfunction endTagBeforeHead(p, token) {\n  const tn = token.tagID;\n  if (tn === $.HEAD || tn === $.BODY || tn === $.HTML || tn === $.BR) {\n    tokenBeforeHead(p, token);\n  } else {\n    p._err(token, ERR.endTagWithoutMatchingOpenElement);\n  }\n}\nfunction tokenBeforeHead(p, token) {\n  p._insertFakeElement(TN.HEAD, $.HEAD);\n  p.headElement = p.openElements.current;\n  p.insertionMode = InsertionMode.IN_HEAD;\n  p._processToken(token);\n}\n// The \"in head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHead(p, token) {\n  switch (token.tagID) {\n    case $.HTML:\n      {\n        startTagInBody(p, token);\n        break;\n      }\n    case $.BASE:\n    case $.BASEFONT:\n    case $.BGSOUND:\n    case $.LINK:\n    case $.META:\n      {\n        p._appendElement(token, NS.HTML);\n        token.ackSelfClosing = true;\n        break;\n      }\n    case $.TITLE:\n      {\n        p._switchToTextParsing(token, TokenizerMode.RCDATA);\n        break;\n      }\n    case $.NOSCRIPT:\n      {\n        if (p.options.scriptingEnabled) {\n          p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n        } else {\n          p._insertElement(token, NS.HTML);\n          p.insertionMode = InsertionMode.IN_HEAD_NO_SCRIPT;\n        }\n        break;\n      }\n    case $.NOFRAMES:\n    case $.STYLE:\n      {\n        p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n        break;\n      }\n    case $.SCRIPT:\n      {\n        p._switchToTextParsing(token, TokenizerMode.SCRIPT_DATA);\n        break;\n      }\n    case $.TEMPLATE:\n      {\n        p._insertTemplate(token);\n        p.activeFormattingElements.insertMarker();\n        p.framesetOk = false;\n        p.insertionMode = InsertionMode.IN_TEMPLATE;\n        p.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n        break;\n      }\n    case $.HEAD:\n      {\n        p._err(token, ERR.misplacedStartTagForHeadElement);\n        break;\n      }\n    default:\n      {\n        tokenInHead(p, token);\n      }\n  }\n}\nfunction endTagInHead(p, token) {\n  switch (token.tagID) {\n    case $.HEAD:\n      {\n        p.openElements.pop();\n        p.insertionMode = InsertionMode.AFTER_HEAD;\n        break;\n      }\n    case $.BODY:\n    case $.BR:\n    case $.HTML:\n      {\n        tokenInHead(p, token);\n        break;\n      }\n    case $.TEMPLATE:\n      {\n        templateEndTagInHead(p, token);\n        break;\n      }\n    default:\n      {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n      }\n  }\n}\nfunction templateEndTagInHead(p, token) {\n  if (p.openElements.tmplCount > 0) {\n    p.openElements.generateImpliedEndTagsThoroughly();\n    if (p.openElements.currentTagId !== $.TEMPLATE) {\n      p._err(token, ERR.closingOfElementWithOpenChildElements);\n    }\n    p.openElements.popUntilTagNamePopped($.TEMPLATE);\n    p.activeFormattingElements.clearToLastMarker();\n    p.tmplInsertionModeStack.shift();\n    p._resetInsertionMode();\n  } else {\n    p._err(token, ERR.endTagWithoutMatchingOpenElement);\n  }\n}\nfunction tokenInHead(p, token) {\n  p.openElements.pop();\n  p.insertionMode = InsertionMode.AFTER_HEAD;\n  p._processToken(token);\n}\n// The \"in head no script\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHeadNoScript(p, token) {\n  switch (token.tagID) {\n    case $.HTML:\n      {\n        startTagInBody(p, token);\n        break;\n      }\n    case $.BASEFONT:\n    case $.BGSOUND:\n    case $.HEAD:\n    case $.LINK:\n    case $.META:\n    case $.NOFRAMES:\n    case $.STYLE:\n      {\n        startTagInHead(p, token);\n        break;\n      }\n    case $.NOSCRIPT:\n      {\n        p._err(token, ERR.nestedNoscriptInHead);\n        break;\n      }\n    default:\n      {\n        tokenInHeadNoScript(p, token);\n      }\n  }\n}\nfunction endTagInHeadNoScript(p, token) {\n  switch (token.tagID) {\n    case $.NOSCRIPT:\n      {\n        p.openElements.pop();\n        p.insertionMode = InsertionMode.IN_HEAD;\n        break;\n      }\n    case $.BR:\n      {\n        tokenInHeadNoScript(p, token);\n        break;\n      }\n    default:\n      {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n      }\n  }\n}\nfunction tokenInHeadNoScript(p, token) {\n  const errCode = token.type === TokenType.EOF ? ERR.openElementsLeftAfterEof : ERR.disallowedContentInNoscriptInHead;\n  p._err(token, errCode);\n  p.openElements.pop();\n  p.insertionMode = InsertionMode.IN_HEAD;\n  p._processToken(token);\n}\n// The \"after head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterHead(p, token) {\n  switch (token.tagID) {\n    case $.HTML:\n      {\n        startTagInBody(p, token);\n        break;\n      }\n    case $.BODY:\n      {\n        p._insertElement(token, NS.HTML);\n        p.framesetOk = false;\n        p.insertionMode = InsertionMode.IN_BODY;\n        break;\n      }\n    case $.FRAMESET:\n      {\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.IN_FRAMESET;\n        break;\n      }\n    case $.BASE:\n    case $.BASEFONT:\n    case $.BGSOUND:\n    case $.LINK:\n    case $.META:\n    case $.NOFRAMES:\n    case $.SCRIPT:\n    case $.STYLE:\n    case $.TEMPLATE:\n    case $.TITLE:\n      {\n        p._err(token, ERR.abandonedHeadElementChild);\n        p.openElements.push(p.headElement, $.HEAD);\n        startTagInHead(p, token);\n        p.openElements.remove(p.headElement);\n        break;\n      }\n    case $.HEAD:\n      {\n        p._err(token, ERR.misplacedStartTagForHeadElement);\n        break;\n      }\n    default:\n      {\n        tokenAfterHead(p, token);\n      }\n  }\n}\nfunction endTagAfterHead(p, token) {\n  switch (token.tagID) {\n    case $.BODY:\n    case $.HTML:\n    case $.BR:\n      {\n        tokenAfterHead(p, token);\n        break;\n      }\n    case $.TEMPLATE:\n      {\n        templateEndTagInHead(p, token);\n        break;\n      }\n    default:\n      {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n      }\n  }\n}\nfunction tokenAfterHead(p, token) {\n  p._insertFakeElement(TN.BODY, $.BODY);\n  p.insertionMode = InsertionMode.IN_BODY;\n  modeInBody(p, token);\n}\n// The \"in body\" insertion mode\n//------------------------------------------------------------------\nfunction modeInBody(p, token) {\n  switch (token.type) {\n    case TokenType.CHARACTER:\n      {\n        characterInBody(p, token);\n        break;\n      }\n    case TokenType.WHITESPACE_CHARACTER:\n      {\n        whitespaceCharacterInBody(p, token);\n        break;\n      }\n    case TokenType.COMMENT:\n      {\n        appendComment(p, token);\n        break;\n      }\n    case TokenType.START_TAG:\n      {\n        startTagInBody(p, token);\n        break;\n      }\n    case TokenType.END_TAG:\n      {\n        endTagInBody(p, token);\n        break;\n      }\n    case TokenType.EOF:\n      {\n        eofInBody(p, token);\n        break;\n      }\n    default:\n    // Do nothing\n  }\n}\nfunction whitespaceCharacterInBody(p, token) {\n  p._reconstructActiveFormattingElements();\n  p._insertCharacters(token);\n}\nfunction characterInBody(p, token) {\n  p._reconstructActiveFormattingElements();\n  p._insertCharacters(token);\n  p.framesetOk = false;\n}\nfunction htmlStartTagInBody(p, token) {\n  if (p.openElements.tmplCount === 0) {\n    p.treeAdapter.adoptAttributes(p.openElements.items[0], token.attrs);\n  }\n}\nfunction bodyStartTagInBody(p, token) {\n  const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n  if (bodyElement && p.openElements.tmplCount === 0) {\n    p.framesetOk = false;\n    p.treeAdapter.adoptAttributes(bodyElement, token.attrs);\n  }\n}\nfunction framesetStartTagInBody(p, token) {\n  const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n  if (p.framesetOk && bodyElement) {\n    p.treeAdapter.detachNode(bodyElement);\n    p.openElements.popAllUpToHtmlElement();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_FRAMESET;\n  }\n}\nfunction addressStartTagInBody(p, token) {\n  if (p.openElements.hasInButtonScope($.P)) {\n    p._closePElement();\n  }\n  p._insertElement(token, NS.HTML);\n}\nfunction numberedHeaderStartTagInBody(p, token) {\n  if (p.openElements.hasInButtonScope($.P)) {\n    p._closePElement();\n  }\n  if (NUMBERED_HEADERS.has(p.openElements.currentTagId)) {\n    p.openElements.pop();\n  }\n  p._insertElement(token, NS.HTML);\n}\nfunction preStartTagInBody(p, token) {\n  if (p.openElements.hasInButtonScope($.P)) {\n    p._closePElement();\n  }\n  p._insertElement(token, NS.HTML);\n  //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n  //on to the next one. (Newlines at the start of pre blocks are ignored as an authoring convenience.)\n  p.skipNextNewLine = true;\n  p.framesetOk = false;\n}\nfunction formStartTagInBody(p, token) {\n  const inTemplate = p.openElements.tmplCount > 0;\n  if (!p.formElement || inTemplate) {\n    if (p.openElements.hasInButtonScope($.P)) {\n      p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    if (!inTemplate) {\n      p.formElement = p.openElements.current;\n    }\n  }\n}\nfunction listItemStartTagInBody(p, token) {\n  p.framesetOk = false;\n  const tn = token.tagID;\n  for (let i = p.openElements.stackTop; i >= 0; i--) {\n    const elementId = p.openElements.tagIDs[i];\n    if (tn === $.LI && elementId === $.LI || (tn === $.DD || tn === $.DT) && (elementId === $.DD || elementId === $.DT)) {\n      p.openElements.generateImpliedEndTagsWithExclusion(elementId);\n      p.openElements.popUntilTagNamePopped(elementId);\n      break;\n    }\n    if (elementId !== $.ADDRESS && elementId !== $.DIV && elementId !== $.P && p._isSpecialElement(p.openElements.items[i], elementId)) {\n      break;\n    }\n  }\n  if (p.openElements.hasInButtonScope($.P)) {\n    p._closePElement();\n  }\n  p._insertElement(token, NS.HTML);\n}\nfunction plaintextStartTagInBody(p, token) {\n  if (p.openElements.hasInButtonScope($.P)) {\n    p._closePElement();\n  }\n  p._insertElement(token, NS.HTML);\n  p.tokenizer.state = TokenizerMode.PLAINTEXT;\n}\nfunction buttonStartTagInBody(p, token) {\n  if (p.openElements.hasInScope($.BUTTON)) {\n    p.openElements.generateImpliedEndTags();\n    p.openElements.popUntilTagNamePopped($.BUTTON);\n  }\n  p._reconstructActiveFormattingElements();\n  p._insertElement(token, NS.HTML);\n  p.framesetOk = false;\n}\nfunction aStartTagInBody(p, token) {\n  const activeElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(TN.A);\n  if (activeElementEntry) {\n    callAdoptionAgency(p, token);\n    p.openElements.remove(activeElementEntry.element);\n    p.activeFormattingElements.removeEntry(activeElementEntry);\n  }\n  p._reconstructActiveFormattingElements();\n  p._insertElement(token, NS.HTML);\n  p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction bStartTagInBody(p, token) {\n  p._reconstructActiveFormattingElements();\n  p._insertElement(token, NS.HTML);\n  p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction nobrStartTagInBody(p, token) {\n  p._reconstructActiveFormattingElements();\n  if (p.openElements.hasInScope($.NOBR)) {\n    callAdoptionAgency(p, token);\n    p._reconstructActiveFormattingElements();\n  }\n  p._insertElement(token, NS.HTML);\n  p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction appletStartTagInBody(p, token) {\n  p._reconstructActiveFormattingElements();\n  p._insertElement(token, NS.HTML);\n  p.activeFormattingElements.insertMarker();\n  p.framesetOk = false;\n}\nfunction tableStartTagInBody(p, token) {\n  if (p.treeAdapter.getDocumentMode(p.document) !== DOCUMENT_MODE.QUIRKS && p.openElements.hasInButtonScope($.P)) {\n    p._closePElement();\n  }\n  p._insertElement(token, NS.HTML);\n  p.framesetOk = false;\n  p.insertionMode = InsertionMode.IN_TABLE;\n}\nfunction areaStartTagInBody(p, token) {\n  p._reconstructActiveFormattingElements();\n  p._appendElement(token, NS.HTML);\n  p.framesetOk = false;\n  token.ackSelfClosing = true;\n}\nfunction isHiddenInput(token) {\n  const inputType = getTokenAttr(token, ATTRS.TYPE);\n  return inputType != null && inputType.toLowerCase() === HIDDEN_INPUT_TYPE;\n}\nfunction inputStartTagInBody(p, token) {\n  p._reconstructActiveFormattingElements();\n  p._appendElement(token, NS.HTML);\n  if (!isHiddenInput(token)) {\n    p.framesetOk = false;\n  }\n  token.ackSelfClosing = true;\n}\nfunction paramStartTagInBody(p, token) {\n  p._appendElement(token, NS.HTML);\n  token.ackSelfClosing = true;\n}\nfunction hrStartTagInBody(p, token) {\n  if (p.openElements.hasInButtonScope($.P)) {\n    p._closePElement();\n  }\n  p._appendElement(token, NS.HTML);\n  p.framesetOk = false;\n  token.ackSelfClosing = true;\n}\nfunction imageStartTagInBody(p, token) {\n  token.tagName = TN.IMG;\n  token.tagID = $.IMG;\n  areaStartTagInBody(p, token);\n}\nfunction textareaStartTagInBody(p, token) {\n  p._insertElement(token, NS.HTML);\n  //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n  //on to the next one. (Newlines at the start of textarea elements are ignored as an authoring convenience.)\n  p.skipNextNewLine = true;\n  p.tokenizer.state = TokenizerMode.RCDATA;\n  p.originalInsertionMode = p.insertionMode;\n  p.framesetOk = false;\n  p.insertionMode = InsertionMode.TEXT;\n}\nfunction xmpStartTagInBody(p, token) {\n  if (p.openElements.hasInButtonScope($.P)) {\n    p._closePElement();\n  }\n  p._reconstructActiveFormattingElements();\n  p.framesetOk = false;\n  p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction iframeStartTagInBody(p, token) {\n  p.framesetOk = false;\n  p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\n//NOTE: here we assume that we always act as a user agent with enabled plugins/frames, so we parse\n//<noembed>/<noframes> as rawtext.\nfunction rawTextStartTagInBody(p, token) {\n  p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction selectStartTagInBody(p, token) {\n  p._reconstructActiveFormattingElements();\n  p._insertElement(token, NS.HTML);\n  p.framesetOk = false;\n  p.insertionMode = p.insertionMode === InsertionMode.IN_TABLE || p.insertionMode === InsertionMode.IN_CAPTION || p.insertionMode === InsertionMode.IN_TABLE_BODY || p.insertionMode === InsertionMode.IN_ROW || p.insertionMode === InsertionMode.IN_CELL ? InsertionMode.IN_SELECT_IN_TABLE : InsertionMode.IN_SELECT;\n}\nfunction optgroupStartTagInBody(p, token) {\n  if (p.openElements.currentTagId === $.OPTION) {\n    p.openElements.pop();\n  }\n  p._reconstructActiveFormattingElements();\n  p._insertElement(token, NS.HTML);\n}\nfunction rbStartTagInBody(p, token) {\n  if (p.openElements.hasInScope($.RUBY)) {\n    p.openElements.generateImpliedEndTags();\n  }\n  p._insertElement(token, NS.HTML);\n}\nfunction rtStartTagInBody(p, token) {\n  if (p.openElements.hasInScope($.RUBY)) {\n    p.openElements.generateImpliedEndTagsWithExclusion($.RTC);\n  }\n  p._insertElement(token, NS.HTML);\n}\nfunction mathStartTagInBody(p, token) {\n  p._reconstructActiveFormattingElements();\n  foreignContent.adjustTokenMathMLAttrs(token);\n  foreignContent.adjustTokenXMLAttrs(token);\n  if (token.selfClosing) {\n    p._appendElement(token, NS.MATHML);\n  } else {\n    p._insertElement(token, NS.MATHML);\n  }\n  token.ackSelfClosing = true;\n}\nfunction svgStartTagInBody(p, token) {\n  p._reconstructActiveFormattingElements();\n  foreignContent.adjustTokenSVGAttrs(token);\n  foreignContent.adjustTokenXMLAttrs(token);\n  if (token.selfClosing) {\n    p._appendElement(token, NS.SVG);\n  } else {\n    p._insertElement(token, NS.SVG);\n  }\n  token.ackSelfClosing = true;\n}\nfunction genericStartTagInBody(p, token) {\n  p._reconstructActiveFormattingElements();\n  p._insertElement(token, NS.HTML);\n}\nfunction startTagInBody(p, token) {\n  switch (token.tagID) {\n    case $.I:\n    case $.S:\n    case $.B:\n    case $.U:\n    case $.EM:\n    case $.TT:\n    case $.BIG:\n    case $.CODE:\n    case $.FONT:\n    case $.SMALL:\n    case $.STRIKE:\n    case $.STRONG:\n      {\n        bStartTagInBody(p, token);\n        break;\n      }\n    case $.A:\n      {\n        aStartTagInBody(p, token);\n        break;\n      }\n    case $.H1:\n    case $.H2:\n    case $.H3:\n    case $.H4:\n    case $.H5:\n    case $.H6:\n      {\n        numberedHeaderStartTagInBody(p, token);\n        break;\n      }\n    case $.P:\n    case $.DL:\n    case $.OL:\n    case $.UL:\n    case $.DIV:\n    case $.DIR:\n    case $.NAV:\n    case $.MAIN:\n    case $.MENU:\n    case $.ASIDE:\n    case $.CENTER:\n    case $.FIGURE:\n    case $.FOOTER:\n    case $.HEADER:\n    case $.HGROUP:\n    case $.DIALOG:\n    case $.DETAILS:\n    case $.ADDRESS:\n    case $.ARTICLE:\n    case $.SEARCH:\n    case $.SECTION:\n    case $.SUMMARY:\n    case $.FIELDSET:\n    case $.BLOCKQUOTE:\n    case $.FIGCAPTION:\n      {\n        addressStartTagInBody(p, token);\n        break;\n      }\n    case $.LI:\n    case $.DD:\n    case $.DT:\n      {\n        listItemStartTagInBody(p, token);\n        break;\n      }\n    case $.BR:\n    case $.IMG:\n    case $.WBR:\n    case $.AREA:\n    case $.EMBED:\n    case $.KEYGEN:\n      {\n        areaStartTagInBody(p, token);\n        break;\n      }\n    case $.HR:\n      {\n        hrStartTagInBody(p, token);\n        break;\n      }\n    case $.RB:\n    case $.RTC:\n      {\n        rbStartTagInBody(p, token);\n        break;\n      }\n    case $.RT:\n    case $.RP:\n      {\n        rtStartTagInBody(p, token);\n        break;\n      }\n    case $.PRE:\n    case $.LISTING:\n      {\n        preStartTagInBody(p, token);\n        break;\n      }\n    case $.XMP:\n      {\n        xmpStartTagInBody(p, token);\n        break;\n      }\n    case $.SVG:\n      {\n        svgStartTagInBody(p, token);\n        break;\n      }\n    case $.HTML:\n      {\n        htmlStartTagInBody(p, token);\n        break;\n      }\n    case $.BASE:\n    case $.LINK:\n    case $.META:\n    case $.STYLE:\n    case $.TITLE:\n    case $.SCRIPT:\n    case $.BGSOUND:\n    case $.BASEFONT:\n    case $.TEMPLATE:\n      {\n        startTagInHead(p, token);\n        break;\n      }\n    case $.BODY:\n      {\n        bodyStartTagInBody(p, token);\n        break;\n      }\n    case $.FORM:\n      {\n        formStartTagInBody(p, token);\n        break;\n      }\n    case $.NOBR:\n      {\n        nobrStartTagInBody(p, token);\n        break;\n      }\n    case $.MATH:\n      {\n        mathStartTagInBody(p, token);\n        break;\n      }\n    case $.TABLE:\n      {\n        tableStartTagInBody(p, token);\n        break;\n      }\n    case $.INPUT:\n      {\n        inputStartTagInBody(p, token);\n        break;\n      }\n    case $.PARAM:\n    case $.TRACK:\n    case $.SOURCE:\n      {\n        paramStartTagInBody(p, token);\n        break;\n      }\n    case $.IMAGE:\n      {\n        imageStartTagInBody(p, token);\n        break;\n      }\n    case $.BUTTON:\n      {\n        buttonStartTagInBody(p, token);\n        break;\n      }\n    case $.APPLET:\n    case $.OBJECT:\n    case $.MARQUEE:\n      {\n        appletStartTagInBody(p, token);\n        break;\n      }\n    case $.IFRAME:\n      {\n        iframeStartTagInBody(p, token);\n        break;\n      }\n    case $.SELECT:\n      {\n        selectStartTagInBody(p, token);\n        break;\n      }\n    case $.OPTION:\n    case $.OPTGROUP:\n      {\n        optgroupStartTagInBody(p, token);\n        break;\n      }\n    case $.NOEMBED:\n    case $.NOFRAMES:\n      {\n        rawTextStartTagInBody(p, token);\n        break;\n      }\n    case $.FRAMESET:\n      {\n        framesetStartTagInBody(p, token);\n        break;\n      }\n    case $.TEXTAREA:\n      {\n        textareaStartTagInBody(p, token);\n        break;\n      }\n    case $.NOSCRIPT:\n      {\n        if (p.options.scriptingEnabled) {\n          rawTextStartTagInBody(p, token);\n        } else {\n          genericStartTagInBody(p, token);\n        }\n        break;\n      }\n    case $.PLAINTEXT:\n      {\n        plaintextStartTagInBody(p, token);\n        break;\n      }\n    case $.COL:\n    case $.TH:\n    case $.TD:\n    case $.TR:\n    case $.HEAD:\n    case $.FRAME:\n    case $.TBODY:\n    case $.TFOOT:\n    case $.THEAD:\n    case $.CAPTION:\n    case $.COLGROUP:\n      {\n        // Ignore token\n        break;\n      }\n    default:\n      {\n        genericStartTagInBody(p, token);\n      }\n  }\n}\nfunction bodyEndTagInBody(p, token) {\n  if (p.openElements.hasInScope($.BODY)) {\n    p.insertionMode = InsertionMode.AFTER_BODY;\n    //NOTE: <body> is never popped from the stack, so we need to updated\n    //the end location explicitly.\n    if (p.options.sourceCodeLocationInfo) {\n      const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n      if (bodyElement) {\n        p._setEndLocation(bodyElement, token);\n      }\n    }\n  }\n}\nfunction htmlEndTagInBody(p, token) {\n  if (p.openElements.hasInScope($.BODY)) {\n    p.insertionMode = InsertionMode.AFTER_BODY;\n    endTagAfterBody(p, token);\n  }\n}\nfunction addressEndTagInBody(p, token) {\n  const tn = token.tagID;\n  if (p.openElements.hasInScope(tn)) {\n    p.openElements.generateImpliedEndTags();\n    p.openElements.popUntilTagNamePopped(tn);\n  }\n}\nfunction formEndTagInBody(p) {\n  const inTemplate = p.openElements.tmplCount > 0;\n  const {\n    formElement\n  } = p;\n  if (!inTemplate) {\n    p.formElement = null;\n  }\n  if ((formElement || inTemplate) && p.openElements.hasInScope($.FORM)) {\n    p.openElements.generateImpliedEndTags();\n    if (inTemplate) {\n      p.openElements.popUntilTagNamePopped($.FORM);\n    } else if (formElement) {\n      p.openElements.remove(formElement);\n    }\n  }\n}\nfunction pEndTagInBody(p) {\n  if (!p.openElements.hasInButtonScope($.P)) {\n    p._insertFakeElement(TN.P, $.P);\n  }\n  p._closePElement();\n}\nfunction liEndTagInBody(p) {\n  if (p.openElements.hasInListItemScope($.LI)) {\n    p.openElements.generateImpliedEndTagsWithExclusion($.LI);\n    p.openElements.popUntilTagNamePopped($.LI);\n  }\n}\nfunction ddEndTagInBody(p, token) {\n  const tn = token.tagID;\n  if (p.openElements.hasInScope(tn)) {\n    p.openElements.generateImpliedEndTagsWithExclusion(tn);\n    p.openElements.popUntilTagNamePopped(tn);\n  }\n}\nfunction numberedHeaderEndTagInBody(p) {\n  if (p.openElements.hasNumberedHeaderInScope()) {\n    p.openElements.generateImpliedEndTags();\n    p.openElements.popUntilNumberedHeaderPopped();\n  }\n}\nfunction appletEndTagInBody(p, token) {\n  const tn = token.tagID;\n  if (p.openElements.hasInScope(tn)) {\n    p.openElements.generateImpliedEndTags();\n    p.openElements.popUntilTagNamePopped(tn);\n    p.activeFormattingElements.clearToLastMarker();\n  }\n}\nfunction brEndTagInBody(p) {\n  p._reconstructActiveFormattingElements();\n  p._insertFakeElement(TN.BR, $.BR);\n  p.openElements.pop();\n  p.framesetOk = false;\n}\nfunction genericEndTagInBody(p, token) {\n  const tn = token.tagName;\n  const tid = token.tagID;\n  for (let i = p.openElements.stackTop; i > 0; i--) {\n    const element = p.openElements.items[i];\n    const elementId = p.openElements.tagIDs[i];\n    // Compare the tag name here, as the tag might not be a known tag with an ID.\n    if (tid === elementId && (tid !== $.UNKNOWN || p.treeAdapter.getTagName(element) === tn)) {\n      p.openElements.generateImpliedEndTagsWithExclusion(tid);\n      if (p.openElements.stackTop >= i) p.openElements.shortenToLength(i);\n      break;\n    }\n    if (p._isSpecialElement(element, elementId)) {\n      break;\n    }\n  }\n}\nfunction endTagInBody(p, token) {\n  switch (token.tagID) {\n    case $.A:\n    case $.B:\n    case $.I:\n    case $.S:\n    case $.U:\n    case $.EM:\n    case $.TT:\n    case $.BIG:\n    case $.CODE:\n    case $.FONT:\n    case $.NOBR:\n    case $.SMALL:\n    case $.STRIKE:\n    case $.STRONG:\n      {\n        callAdoptionAgency(p, token);\n        break;\n      }\n    case $.P:\n      {\n        pEndTagInBody(p);\n        break;\n      }\n    case $.DL:\n    case $.UL:\n    case $.OL:\n    case $.DIR:\n    case $.DIV:\n    case $.NAV:\n    case $.PRE:\n    case $.MAIN:\n    case $.MENU:\n    case $.ASIDE:\n    case $.BUTTON:\n    case $.CENTER:\n    case $.FIGURE:\n    case $.FOOTER:\n    case $.HEADER:\n    case $.HGROUP:\n    case $.DIALOG:\n    case $.ADDRESS:\n    case $.ARTICLE:\n    case $.DETAILS:\n    case $.SEARCH:\n    case $.SECTION:\n    case $.SUMMARY:\n    case $.LISTING:\n    case $.FIELDSET:\n    case $.BLOCKQUOTE:\n    case $.FIGCAPTION:\n      {\n        addressEndTagInBody(p, token);\n        break;\n      }\n    case $.LI:\n      {\n        liEndTagInBody(p);\n        break;\n      }\n    case $.DD:\n    case $.DT:\n      {\n        ddEndTagInBody(p, token);\n        break;\n      }\n    case $.H1:\n    case $.H2:\n    case $.H3:\n    case $.H4:\n    case $.H5:\n    case $.H6:\n      {\n        numberedHeaderEndTagInBody(p);\n        break;\n      }\n    case $.BR:\n      {\n        brEndTagInBody(p);\n        break;\n      }\n    case $.BODY:\n      {\n        bodyEndTagInBody(p, token);\n        break;\n      }\n    case $.HTML:\n      {\n        htmlEndTagInBody(p, token);\n        break;\n      }\n    case $.FORM:\n      {\n        formEndTagInBody(p);\n        break;\n      }\n    case $.APPLET:\n    case $.OBJECT:\n    case $.MARQUEE:\n      {\n        appletEndTagInBody(p, token);\n        break;\n      }\n    case $.TEMPLATE:\n      {\n        templateEndTagInHead(p, token);\n        break;\n      }\n    default:\n      {\n        genericEndTagInBody(p, token);\n      }\n  }\n}\nfunction eofInBody(p, token) {\n  if (p.tmplInsertionModeStack.length > 0) {\n    eofInTemplate(p, token);\n  } else {\n    stopParsing(p, token);\n  }\n}\n// The \"text\" insertion mode\n//------------------------------------------------------------------\nfunction endTagInText(p, token) {\n  var _a;\n  if (token.tagID === $.SCRIPT) {\n    (_a = p.scriptHandler) === null || _a === void 0 ? void 0 : _a.call(p, p.openElements.current);\n  }\n  p.openElements.pop();\n  p.insertionMode = p.originalInsertionMode;\n}\nfunction eofInText(p, token) {\n  p._err(token, ERR.eofInElementThatCanContainOnlyText);\n  p.openElements.pop();\n  p.insertionMode = p.originalInsertionMode;\n  p.onEof(token);\n}\n// The \"in table\" insertion mode\n//------------------------------------------------------------------\nfunction characterInTable(p, token) {\n  if (TABLE_STRUCTURE_TAGS.has(p.openElements.currentTagId)) {\n    p.pendingCharacterTokens.length = 0;\n    p.hasNonWhitespacePendingCharacterToken = false;\n    p.originalInsertionMode = p.insertionMode;\n    p.insertionMode = InsertionMode.IN_TABLE_TEXT;\n    switch (token.type) {\n      case TokenType.CHARACTER:\n        {\n          characterInTableText(p, token);\n          break;\n        }\n      case TokenType.WHITESPACE_CHARACTER:\n        {\n          whitespaceCharacterInTableText(p, token);\n          break;\n        }\n      // Ignore null\n    }\n  } else {\n    tokenInTable(p, token);\n  }\n}\nfunction captionStartTagInTable(p, token) {\n  p.openElements.clearBackToTableContext();\n  p.activeFormattingElements.insertMarker();\n  p._insertElement(token, NS.HTML);\n  p.insertionMode = InsertionMode.IN_CAPTION;\n}\nfunction colgroupStartTagInTable(p, token) {\n  p.openElements.clearBackToTableContext();\n  p._insertElement(token, NS.HTML);\n  p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n}\nfunction colStartTagInTable(p, token) {\n  p.openElements.clearBackToTableContext();\n  p._insertFakeElement(TN.COLGROUP, $.COLGROUP);\n  p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n  startTagInColumnGroup(p, token);\n}\nfunction tbodyStartTagInTable(p, token) {\n  p.openElements.clearBackToTableContext();\n  p._insertElement(token, NS.HTML);\n  p.insertionMode = InsertionMode.IN_TABLE_BODY;\n}\nfunction tdStartTagInTable(p, token) {\n  p.openElements.clearBackToTableContext();\n  p._insertFakeElement(TN.TBODY, $.TBODY);\n  p.insertionMode = InsertionMode.IN_TABLE_BODY;\n  startTagInTableBody(p, token);\n}\nfunction tableStartTagInTable(p, token) {\n  if (p.openElements.hasInTableScope($.TABLE)) {\n    p.openElements.popUntilTagNamePopped($.TABLE);\n    p._resetInsertionMode();\n    p._processStartTag(token);\n  }\n}\nfunction inputStartTagInTable(p, token) {\n  if (isHiddenInput(token)) {\n    p._appendElement(token, NS.HTML);\n  } else {\n    tokenInTable(p, token);\n  }\n  token.ackSelfClosing = true;\n}\nfunction formStartTagInTable(p, token) {\n  if (!p.formElement && p.openElements.tmplCount === 0) {\n    p._insertElement(token, NS.HTML);\n    p.formElement = p.openElements.current;\n    p.openElements.pop();\n  }\n}\nfunction startTagInTable(p, token) {\n  switch (token.tagID) {\n    case $.TD:\n    case $.TH:\n    case $.TR:\n      {\n        tdStartTagInTable(p, token);\n        break;\n      }\n    case $.STYLE:\n    case $.SCRIPT:\n    case $.TEMPLATE:\n      {\n        startTagInHead(p, token);\n        break;\n      }\n    case $.COL:\n      {\n        colStartTagInTable(p, token);\n        break;\n      }\n    case $.FORM:\n      {\n        formStartTagInTable(p, token);\n        break;\n      }\n    case $.TABLE:\n      {\n        tableStartTagInTable(p, token);\n        break;\n      }\n    case $.TBODY:\n    case $.TFOOT:\n    case $.THEAD:\n      {\n        tbodyStartTagInTable(p, token);\n        break;\n      }\n    case $.INPUT:\n      {\n        inputStartTagInTable(p, token);\n        break;\n      }\n    case $.CAPTION:\n      {\n        captionStartTagInTable(p, token);\n        break;\n      }\n    case $.COLGROUP:\n      {\n        colgroupStartTagInTable(p, token);\n        break;\n      }\n    default:\n      {\n        tokenInTable(p, token);\n      }\n  }\n}\nfunction endTagInTable(p, token) {\n  switch (token.tagID) {\n    case $.TABLE:\n      {\n        if (p.openElements.hasInTableScope($.TABLE)) {\n          p.openElements.popUntilTagNamePopped($.TABLE);\n          p._resetInsertionMode();\n        }\n        break;\n      }\n    case $.TEMPLATE:\n      {\n        templateEndTagInHead(p, token);\n        break;\n      }\n    case $.BODY:\n    case $.CAPTION:\n    case $.COL:\n    case $.COLGROUP:\n    case $.HTML:\n    case $.TBODY:\n    case $.TD:\n    case $.TFOOT:\n    case $.TH:\n    case $.THEAD:\n    case $.TR:\n      {\n        // Ignore token\n        break;\n      }\n    default:\n      {\n        tokenInTable(p, token);\n      }\n  }\n}\nfunction tokenInTable(p, token) {\n  const savedFosterParentingState = p.fosterParentingEnabled;\n  p.fosterParentingEnabled = true;\n  // Process token in `In Body` mode\n  modeInBody(p, token);\n  p.fosterParentingEnabled = savedFosterParentingState;\n}\n// The \"in table text\" insertion mode\n//------------------------------------------------------------------\nfunction whitespaceCharacterInTableText(p, token) {\n  p.pendingCharacterTokens.push(token);\n}\nfunction characterInTableText(p, token) {\n  p.pendingCharacterTokens.push(token);\n  p.hasNonWhitespacePendingCharacterToken = true;\n}\nfunction tokenInTableText(p, token) {\n  let i = 0;\n  if (p.hasNonWhitespacePendingCharacterToken) {\n    for (; i < p.pendingCharacterTokens.length; i++) {\n      tokenInTable(p, p.pendingCharacterTokens[i]);\n    }\n  } else {\n    for (; i < p.pendingCharacterTokens.length; i++) {\n      p._insertCharacters(p.pendingCharacterTokens[i]);\n    }\n  }\n  p.insertionMode = p.originalInsertionMode;\n  p._processToken(token);\n}\n// The \"in caption\" insertion mode\n//------------------------------------------------------------------\nconst TABLE_VOID_ELEMENTS = new Set([$.CAPTION, $.COL, $.COLGROUP, $.TBODY, $.TD, $.TFOOT, $.TH, $.THEAD, $.TR]);\nfunction startTagInCaption(p, token) {\n  const tn = token.tagID;\n  if (TABLE_VOID_ELEMENTS.has(tn)) {\n    if (p.openElements.hasInTableScope($.CAPTION)) {\n      p.openElements.generateImpliedEndTags();\n      p.openElements.popUntilTagNamePopped($.CAPTION);\n      p.activeFormattingElements.clearToLastMarker();\n      p.insertionMode = InsertionMode.IN_TABLE;\n      startTagInTable(p, token);\n    }\n  } else {\n    startTagInBody(p, token);\n  }\n}\nfunction endTagInCaption(p, token) {\n  const tn = token.tagID;\n  switch (tn) {\n    case $.CAPTION:\n    case $.TABLE:\n      {\n        if (p.openElements.hasInTableScope($.CAPTION)) {\n          p.openElements.generateImpliedEndTags();\n          p.openElements.popUntilTagNamePopped($.CAPTION);\n          p.activeFormattingElements.clearToLastMarker();\n          p.insertionMode = InsertionMode.IN_TABLE;\n          if (tn === $.TABLE) {\n            endTagInTable(p, token);\n          }\n        }\n        break;\n      }\n    case $.BODY:\n    case $.COL:\n    case $.COLGROUP:\n    case $.HTML:\n    case $.TBODY:\n    case $.TD:\n    case $.TFOOT:\n    case $.TH:\n    case $.THEAD:\n    case $.TR:\n      {\n        // Ignore token\n        break;\n      }\n    default:\n      {\n        endTagInBody(p, token);\n      }\n  }\n}\n// The \"in column group\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInColumnGroup(p, token) {\n  switch (token.tagID) {\n    case $.HTML:\n      {\n        startTagInBody(p, token);\n        break;\n      }\n    case $.COL:\n      {\n        p._appendElement(token, NS.HTML);\n        token.ackSelfClosing = true;\n        break;\n      }\n    case $.TEMPLATE:\n      {\n        startTagInHead(p, token);\n        break;\n      }\n    default:\n      {\n        tokenInColumnGroup(p, token);\n      }\n  }\n}\nfunction endTagInColumnGroup(p, token) {\n  switch (token.tagID) {\n    case $.COLGROUP:\n      {\n        if (p.openElements.currentTagId === $.COLGROUP) {\n          p.openElements.pop();\n          p.insertionMode = InsertionMode.IN_TABLE;\n        }\n        break;\n      }\n    case $.TEMPLATE:\n      {\n        templateEndTagInHead(p, token);\n        break;\n      }\n    case $.COL:\n      {\n        // Ignore token\n        break;\n      }\n    default:\n      {\n        tokenInColumnGroup(p, token);\n      }\n  }\n}\nfunction tokenInColumnGroup(p, token) {\n  if (p.openElements.currentTagId === $.COLGROUP) {\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.IN_TABLE;\n    p._processToken(token);\n  }\n}\n// The \"in table body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTableBody(p, token) {\n  switch (token.tagID) {\n    case $.TR:\n      {\n        p.openElements.clearBackToTableBodyContext();\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.IN_ROW;\n        break;\n      }\n    case $.TH:\n    case $.TD:\n      {\n        p.openElements.clearBackToTableBodyContext();\n        p._insertFakeElement(TN.TR, $.TR);\n        p.insertionMode = InsertionMode.IN_ROW;\n        startTagInRow(p, token);\n        break;\n      }\n    case $.CAPTION:\n    case $.COL:\n    case $.COLGROUP:\n    case $.TBODY:\n    case $.TFOOT:\n    case $.THEAD:\n      {\n        if (p.openElements.hasTableBodyContextInTableScope()) {\n          p.openElements.clearBackToTableBodyContext();\n          p.openElements.pop();\n          p.insertionMode = InsertionMode.IN_TABLE;\n          startTagInTable(p, token);\n        }\n        break;\n      }\n    default:\n      {\n        startTagInTable(p, token);\n      }\n  }\n}\nfunction endTagInTableBody(p, token) {\n  const tn = token.tagID;\n  switch (token.tagID) {\n    case $.TBODY:\n    case $.TFOOT:\n    case $.THEAD:\n      {\n        if (p.openElements.hasInTableScope(tn)) {\n          p.openElements.clearBackToTableBodyContext();\n          p.openElements.pop();\n          p.insertionMode = InsertionMode.IN_TABLE;\n        }\n        break;\n      }\n    case $.TABLE:\n      {\n        if (p.openElements.hasTableBodyContextInTableScope()) {\n          p.openElements.clearBackToTableBodyContext();\n          p.openElements.pop();\n          p.insertionMode = InsertionMode.IN_TABLE;\n          endTagInTable(p, token);\n        }\n        break;\n      }\n    case $.BODY:\n    case $.CAPTION:\n    case $.COL:\n    case $.COLGROUP:\n    case $.HTML:\n    case $.TD:\n    case $.TH:\n    case $.TR:\n      {\n        // Ignore token\n        break;\n      }\n    default:\n      {\n        endTagInTable(p, token);\n      }\n  }\n}\n// The \"in row\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInRow(p, token) {\n  switch (token.tagID) {\n    case $.TH:\n    case $.TD:\n      {\n        p.openElements.clearBackToTableRowContext();\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.IN_CELL;\n        p.activeFormattingElements.insertMarker();\n        break;\n      }\n    case $.CAPTION:\n    case $.COL:\n    case $.COLGROUP:\n    case $.TBODY:\n    case $.TFOOT:\n    case $.THEAD:\n    case $.TR:\n      {\n        if (p.openElements.hasInTableScope($.TR)) {\n          p.openElements.clearBackToTableRowContext();\n          p.openElements.pop();\n          p.insertionMode = InsertionMode.IN_TABLE_BODY;\n          startTagInTableBody(p, token);\n        }\n        break;\n      }\n    default:\n      {\n        startTagInTable(p, token);\n      }\n  }\n}\nfunction endTagInRow(p, token) {\n  switch (token.tagID) {\n    case $.TR:\n      {\n        if (p.openElements.hasInTableScope($.TR)) {\n          p.openElements.clearBackToTableRowContext();\n          p.openElements.pop();\n          p.insertionMode = InsertionMode.IN_TABLE_BODY;\n        }\n        break;\n      }\n    case $.TABLE:\n      {\n        if (p.openElements.hasInTableScope($.TR)) {\n          p.openElements.clearBackToTableRowContext();\n          p.openElements.pop();\n          p.insertionMode = InsertionMode.IN_TABLE_BODY;\n          endTagInTableBody(p, token);\n        }\n        break;\n      }\n    case $.TBODY:\n    case $.TFOOT:\n    case $.THEAD:\n      {\n        if (p.openElements.hasInTableScope(token.tagID) || p.openElements.hasInTableScope($.TR)) {\n          p.openElements.clearBackToTableRowContext();\n          p.openElements.pop();\n          p.insertionMode = InsertionMode.IN_TABLE_BODY;\n          endTagInTableBody(p, token);\n        }\n        break;\n      }\n    case $.BODY:\n    case $.CAPTION:\n    case $.COL:\n    case $.COLGROUP:\n    case $.HTML:\n    case $.TD:\n    case $.TH:\n      {\n        // Ignore end tag\n        break;\n      }\n    default:\n      {\n        endTagInTable(p, token);\n      }\n  }\n}\n// The \"in cell\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInCell(p, token) {\n  const tn = token.tagID;\n  if (TABLE_VOID_ELEMENTS.has(tn)) {\n    if (p.openElements.hasInTableScope($.TD) || p.openElements.hasInTableScope($.TH)) {\n      p._closeTableCell();\n      startTagInRow(p, token);\n    }\n  } else {\n    startTagInBody(p, token);\n  }\n}\nfunction endTagInCell(p, token) {\n  const tn = token.tagID;\n  switch (tn) {\n    case $.TD:\n    case $.TH:\n      {\n        if (p.openElements.hasInTableScope(tn)) {\n          p.openElements.generateImpliedEndTags();\n          p.openElements.popUntilTagNamePopped(tn);\n          p.activeFormattingElements.clearToLastMarker();\n          p.insertionMode = InsertionMode.IN_ROW;\n        }\n        break;\n      }\n    case $.TABLE:\n    case $.TBODY:\n    case $.TFOOT:\n    case $.THEAD:\n    case $.TR:\n      {\n        if (p.openElements.hasInTableScope(tn)) {\n          p._closeTableCell();\n          endTagInRow(p, token);\n        }\n        break;\n      }\n    case $.BODY:\n    case $.CAPTION:\n    case $.COL:\n    case $.COLGROUP:\n    case $.HTML:\n      {\n        // Ignore token\n        break;\n      }\n    default:\n      {\n        endTagInBody(p, token);\n      }\n  }\n}\n// The \"in select\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelect(p, token) {\n  switch (token.tagID) {\n    case $.HTML:\n      {\n        startTagInBody(p, token);\n        break;\n      }\n    case $.OPTION:\n      {\n        if (p.openElements.currentTagId === $.OPTION) {\n          p.openElements.pop();\n        }\n        p._insertElement(token, NS.HTML);\n        break;\n      }\n    case $.OPTGROUP:\n      {\n        if (p.openElements.currentTagId === $.OPTION) {\n          p.openElements.pop();\n        }\n        if (p.openElements.currentTagId === $.OPTGROUP) {\n          p.openElements.pop();\n        }\n        p._insertElement(token, NS.HTML);\n        break;\n      }\n    case $.HR:\n      {\n        if (p.openElements.currentTagId === $.OPTION) {\n          p.openElements.pop();\n        }\n        if (p.openElements.currentTagId === $.OPTGROUP) {\n          p.openElements.pop();\n        }\n        p._appendElement(token, NS.HTML);\n        token.ackSelfClosing = true;\n        break;\n      }\n    case $.INPUT:\n    case $.KEYGEN:\n    case $.TEXTAREA:\n    case $.SELECT:\n      {\n        if (p.openElements.hasInSelectScope($.SELECT)) {\n          p.openElements.popUntilTagNamePopped($.SELECT);\n          p._resetInsertionMode();\n          if (token.tagID !== $.SELECT) {\n            p._processStartTag(token);\n          }\n        }\n        break;\n      }\n    case $.SCRIPT:\n    case $.TEMPLATE:\n      {\n        startTagInHead(p, token);\n        break;\n      }\n    default:\n    // Do nothing\n  }\n}\nfunction endTagInSelect(p, token) {\n  switch (token.tagID) {\n    case $.OPTGROUP:\n      {\n        if (p.openElements.stackTop > 0 && p.openElements.currentTagId === $.OPTION && p.openElements.tagIDs[p.openElements.stackTop - 1] === $.OPTGROUP) {\n          p.openElements.pop();\n        }\n        if (p.openElements.currentTagId === $.OPTGROUP) {\n          p.openElements.pop();\n        }\n        break;\n      }\n    case $.OPTION:\n      {\n        if (p.openElements.currentTagId === $.OPTION) {\n          p.openElements.pop();\n        }\n        break;\n      }\n    case $.SELECT:\n      {\n        if (p.openElements.hasInSelectScope($.SELECT)) {\n          p.openElements.popUntilTagNamePopped($.SELECT);\n          p._resetInsertionMode();\n        }\n        break;\n      }\n    case $.TEMPLATE:\n      {\n        templateEndTagInHead(p, token);\n        break;\n      }\n    default:\n    // Do nothing\n  }\n}\n// The \"in select in table\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelectInTable(p, token) {\n  const tn = token.tagID;\n  if (tn === $.CAPTION || tn === $.TABLE || tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD || tn === $.TR || tn === $.TD || tn === $.TH) {\n    p.openElements.popUntilTagNamePopped($.SELECT);\n    p._resetInsertionMode();\n    p._processStartTag(token);\n  } else {\n    startTagInSelect(p, token);\n  }\n}\nfunction endTagInSelectInTable(p, token) {\n  const tn = token.tagID;\n  if (tn === $.CAPTION || tn === $.TABLE || tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD || tn === $.TR || tn === $.TD || tn === $.TH) {\n    if (p.openElements.hasInTableScope(tn)) {\n      p.openElements.popUntilTagNamePopped($.SELECT);\n      p._resetInsertionMode();\n      p.onEndTag(token);\n    }\n  } else {\n    endTagInSelect(p, token);\n  }\n}\n// The \"in template\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTemplate(p, token) {\n  switch (token.tagID) {\n    // First, handle tags that can start without a mode change\n    case $.BASE:\n    case $.BASEFONT:\n    case $.BGSOUND:\n    case $.LINK:\n    case $.META:\n    case $.NOFRAMES:\n    case $.SCRIPT:\n    case $.STYLE:\n    case $.TEMPLATE:\n    case $.TITLE:\n      {\n        startTagInHead(p, token);\n        break;\n      }\n    // Re-process the token in the appropriate mode\n    case $.CAPTION:\n    case $.COLGROUP:\n    case $.TBODY:\n    case $.TFOOT:\n    case $.THEAD:\n      {\n        p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE;\n        p.insertionMode = InsertionMode.IN_TABLE;\n        startTagInTable(p, token);\n        break;\n      }\n    case $.COL:\n      {\n        p.tmplInsertionModeStack[0] = InsertionMode.IN_COLUMN_GROUP;\n        p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n        startTagInColumnGroup(p, token);\n        break;\n      }\n    case $.TR:\n      {\n        p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE_BODY;\n        p.insertionMode = InsertionMode.IN_TABLE_BODY;\n        startTagInTableBody(p, token);\n        break;\n      }\n    case $.TD:\n    case $.TH:\n      {\n        p.tmplInsertionModeStack[0] = InsertionMode.IN_ROW;\n        p.insertionMode = InsertionMode.IN_ROW;\n        startTagInRow(p, token);\n        break;\n      }\n    default:\n      {\n        p.tmplInsertionModeStack[0] = InsertionMode.IN_BODY;\n        p.insertionMode = InsertionMode.IN_BODY;\n        startTagInBody(p, token);\n      }\n  }\n}\nfunction endTagInTemplate(p, token) {\n  if (token.tagID === $.TEMPLATE) {\n    templateEndTagInHead(p, token);\n  }\n}\nfunction eofInTemplate(p, token) {\n  if (p.openElements.tmplCount > 0) {\n    p.openElements.popUntilTagNamePopped($.TEMPLATE);\n    p.activeFormattingElements.clearToLastMarker();\n    p.tmplInsertionModeStack.shift();\n    p._resetInsertionMode();\n    p.onEof(token);\n  } else {\n    stopParsing(p, token);\n  }\n}\n// The \"after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterBody(p, token) {\n  if (token.tagID === $.HTML) {\n    startTagInBody(p, token);\n  } else {\n    tokenAfterBody(p, token);\n  }\n}\nfunction endTagAfterBody(p, token) {\n  var _a;\n  if (token.tagID === $.HTML) {\n    if (!p.fragmentContext) {\n      p.insertionMode = InsertionMode.AFTER_AFTER_BODY;\n    }\n    //NOTE: <html> is never popped from the stack, so we need to updated\n    //the end location explicitly.\n    if (p.options.sourceCodeLocationInfo && p.openElements.tagIDs[0] === $.HTML) {\n      p._setEndLocation(p.openElements.items[0], token);\n      // Update the body element, if it doesn't have an end tag\n      const bodyElement = p.openElements.items[1];\n      if (bodyElement && !((_a = p.treeAdapter.getNodeSourceCodeLocation(bodyElement)) === null || _a === void 0 ? void 0 : _a.endTag)) {\n        p._setEndLocation(bodyElement, token);\n      }\n    }\n  } else {\n    tokenAfterBody(p, token);\n  }\n}\nfunction tokenAfterBody(p, token) {\n  p.insertionMode = InsertionMode.IN_BODY;\n  modeInBody(p, token);\n}\n// The \"in frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInFrameset(p, token) {\n  switch (token.tagID) {\n    case $.HTML:\n      {\n        startTagInBody(p, token);\n        break;\n      }\n    case $.FRAMESET:\n      {\n        p._insertElement(token, NS.HTML);\n        break;\n      }\n    case $.FRAME:\n      {\n        p._appendElement(token, NS.HTML);\n        token.ackSelfClosing = true;\n        break;\n      }\n    case $.NOFRAMES:\n      {\n        startTagInHead(p, token);\n        break;\n      }\n    default:\n    // Do nothing\n  }\n}\nfunction endTagInFrameset(p, token) {\n  if (token.tagID === $.FRAMESET && !p.openElements.isRootHtmlElementCurrent()) {\n    p.openElements.pop();\n    if (!p.fragmentContext && p.openElements.currentTagId !== $.FRAMESET) {\n      p.insertionMode = InsertionMode.AFTER_FRAMESET;\n    }\n  }\n}\n// The \"after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterFrameset(p, token) {\n  switch (token.tagID) {\n    case $.HTML:\n      {\n        startTagInBody(p, token);\n        break;\n      }\n    case $.NOFRAMES:\n      {\n        startTagInHead(p, token);\n        break;\n      }\n    default:\n    // Do nothing\n  }\n}\nfunction endTagAfterFrameset(p, token) {\n  if (token.tagID === $.HTML) {\n    p.insertionMode = InsertionMode.AFTER_AFTER_FRAMESET;\n  }\n}\n// The \"after after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterBody(p, token) {\n  if (token.tagID === $.HTML) {\n    startTagInBody(p, token);\n  } else {\n    tokenAfterAfterBody(p, token);\n  }\n}\nfunction tokenAfterAfterBody(p, token) {\n  p.insertionMode = InsertionMode.IN_BODY;\n  modeInBody(p, token);\n}\n// The \"after after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterFrameset(p, token) {\n  switch (token.tagID) {\n    case $.HTML:\n      {\n        startTagInBody(p, token);\n        break;\n      }\n    case $.NOFRAMES:\n      {\n        startTagInHead(p, token);\n        break;\n      }\n    default:\n    // Do nothing\n  }\n}\n// The rules for parsing tokens in foreign content\n//------------------------------------------------------------------\nfunction nullCharacterInForeignContent(p, token) {\n  token.chars = unicode.REPLACEMENT_CHARACTER;\n  p._insertCharacters(token);\n}\nfunction characterInForeignContent(p, token) {\n  p._insertCharacters(token);\n  p.framesetOk = false;\n}\nfunction popUntilHtmlOrIntegrationPoint(p) {\n  while (p.treeAdapter.getNamespaceURI(p.openElements.current) !== NS.HTML && !p._isIntegrationPoint(p.openElements.currentTagId, p.openElements.current)) {\n    p.openElements.pop();\n  }\n}\nfunction startTagInForeignContent(p, token) {\n  if (foreignContent.causesExit(token)) {\n    popUntilHtmlOrIntegrationPoint(p);\n    p._startTagOutsideForeignContent(token);\n  } else {\n    const current = p._getAdjustedCurrentElement();\n    const currentNs = p.treeAdapter.getNamespaceURI(current);\n    if (currentNs === NS.MATHML) {\n      foreignContent.adjustTokenMathMLAttrs(token);\n    } else if (currentNs === NS.SVG) {\n      foreignContent.adjustTokenSVGTagName(token);\n      foreignContent.adjustTokenSVGAttrs(token);\n    }\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n      p._appendElement(token, currentNs);\n    } else {\n      p._insertElement(token, currentNs);\n    }\n    token.ackSelfClosing = true;\n  }\n}\nfunction endTagInForeignContent(p, token) {\n  if (token.tagID === $.P || token.tagID === $.BR) {\n    popUntilHtmlOrIntegrationPoint(p);\n    p._endTagOutsideForeignContent(token);\n    return;\n  }\n  for (let i = p.openElements.stackTop; i > 0; i--) {\n    const element = p.openElements.items[i];\n    if (p.treeAdapter.getNamespaceURI(element) === NS.HTML) {\n      p._endTagOutsideForeignContent(token);\n      break;\n    }\n    const tagName = p.treeAdapter.getTagName(element);\n    if (tagName.toLowerCase() === token.tagName) {\n      //NOTE: update the token tag name for `_setEndLocation`.\n      token.tagName = tagName;\n      p.openElements.shortenToLength(i);\n      break;\n    }\n  }\n}","map":{"version":3,"names":["Tokenizer","TokenizerMode","OpenElementStack","FormattingElementList","EntryType","defaultTreeAdapter","doctype","foreignContent","ERR","unicode","TAG_ID","$","TAG_NAMES","TN","NS","ATTRS","SPECIAL_ELEMENTS","DOCUMENT_MODE","NUMBERED_HEADERS","getTagID","TokenType","getTokenAttr","HIDDEN_INPUT_TYPE","AA_OUTER_LOOP_ITER","AA_INNER_LOOP_ITER","InsertionMode","BASE_LOC","startLine","startCol","startOffset","endLine","endCol","endOffset","TABLE_STRUCTURE_TAGS","Set","TABLE","TBODY","TFOOT","THEAD","TR","defaultParserOptions","scriptingEnabled","sourceCodeLocationInfo","treeAdapter","onParseError","Parser","constructor","options","document","fragmentContext","scriptHandler","currentToken","stopped","insertionMode","INITIAL","originalInsertionMode","headElement","formElement","currentNotInHTML","tmplInsertionModeStack","pendingCharacterTokens","hasNonWhitespacePendingCharacterToken","framesetOk","skipNextNewLine","fosterParentingEnabled","createDocument","tokenizer","activeFormattingElements","fragmentContextID","getTagName","UNKNOWN","_setContextModes","openElements","parse","html","parser","write","getFragmentParser","opts","createElement","TEMPLATE","HTML","documentMock","unshift","IN_TEMPLATE","_initTokenizerForFragmentParsing","_insertFakeRootElement","_resetInsertionMode","_findFormInFragmentContext","getFragment","rootElement","getFirstChild","fragment","createDocumentFragment","_adoptNodes","_err","token","code","beforeToken","_a","loc","location","err","onItemPush","node","tid","isTop","_b","call","stackTop","onItemPop","_setEndLocation","current","currentTagId","isHTML","getNamespaceURI","inForeignNode","_isIntegrationPoint","_switchToTextParsing","nextTokenizerState","_insertElement","state","TEXT","switchToPlaintextParsing","IN_BODY","PLAINTEXT","_getAdjustedCurrentElement","FORM","getParentNode","TITLE","TEXTAREA","RCDATA","STYLE","XMP","IFRAME","NOEMBED","NOFRAMES","NOSCRIPT","RAWTEXT","SCRIPT","SCRIPT_DATA","_setDocumentType","name","publicId","systemId","setDocumentType","documentChildren","getChildNodes","docTypeNode","find","isDocumentTypeNode","setNodeSourceCodeLocation","_attachElementToTree","element","startTag","_shouldFosterParentOnInsertion","_fosterParentElement","parent","currentTmplContentOrNode","appendChild","_appendElement","namespaceURI","tagName","attrs","push","tagID","_insertFakeElement","_insertTemplate","tmpl","content","setTemplateContent","_appendCommentNode","commentNode","createCommentNode","data","_insertCharacters","beforeElement","_findFosterParentingLocation","insertTextBefore","chars","insertText","siblings","textNodeIdx","lastIndexOf","length","textNode","tnLoc","getNodeSourceCodeLocation","updateNodeSourceCodeLocation","donor","recipient","child","detachNode","closingToken","ctLoc","tn","endLoc","type","END_TAG","endTag","shouldProcessStartTagTokenInForeignContent","SVG","ANNOTATION_XML","MATHML","MGLYPH","MALIGNMARK","_processToken","CHARACTER","onCharacter","NULL_CHARACTER","onNullCharacter","COMMENT","onComment","DOCTYPE","onDoctype","START_TAG","_processStartTag","onEndTag","EOF","onEof","WHITESPACE_CHARACTER","onWhitespaceCharacter","foreignNS","ns","getAttrList","isIntegrationPoint","_reconstructActiveFormattingElements","listLength","entries","endIndex","findIndex","entry","Marker","contains","unopenIdx","i","_closeTableCell","generateImpliedEndTags","popUntilTableCellPopped","clearToLastMarker","IN_ROW","_closePElement","generateImpliedEndTagsWithExclusion","P","popUntilTagNamePopped","tagIDs","IN_TABLE_BODY","CAPTION","IN_CAPTION","COLGROUP","IN_COLUMN_GROUP","IN_TABLE","BODY","FRAMESET","IN_FRAMESET","SELECT","_resetInsertionModeForSelect","AFTER_HEAD","BEFORE_HEAD","TD","TH","IN_CELL","HEAD","IN_HEAD","selectIdx","IN_SELECT_IN_TABLE","IN_SELECT","_isElementCausesFosterParenting","has","openElement","items","getTemplateContent","insertBefore","_isSpecialElement","id","characterInForeignContent","tokenInInitialMode","BEFORE_HTML","tokenBeforeHtml","tokenBeforeHead","tokenInHead","IN_HEAD_NO_SCRIPT","tokenInHeadNoScript","tokenAfterHead","characterInBody","characterInTable","IN_TABLE_TEXT","characterInTableText","tokenInColumnGroup","AFTER_BODY","tokenAfterBody","AFTER_AFTER_BODY","tokenAfterAfterBody","nullCharacterInForeignContent","appendComment","AFTER_FRAMESET","tokenInTableText","appendCommentToRootHtmlElement","AFTER_AFTER_FRAMESET","appendCommentToDocument","doctypeInInitialMode","misplacedDoctype","onStartTag","selfClosing","ackSelfClosing","nonVoidHtmlElementStartTagWithTrailingSolidus","startTagInForeignContent","_startTagOutsideForeignContent","startTagBeforeHtml","startTagBeforeHead","startTagInHead","startTagInHeadNoScript","startTagAfterHead","startTagInBody","startTagInTable","startTagInCaption","startTagInColumnGroup","startTagInTableBody","startTagInRow","startTagInCell","startTagInSelect","startTagInSelectInTable","startTagInTemplate","startTagAfterBody","startTagInFrameset","startTagAfterFrameset","startTagAfterAfterBody","startTagAfterAfterFrameset","endTagInForeignContent","_endTagOutsideForeignContent","endTagBeforeHtml","endTagBeforeHead","endTagInHead","endTagInHeadNoScript","endTagAfterHead","endTagInBody","endTagInText","endTagInTable","endTagInCaption","endTagInColumnGroup","endTagInTableBody","endTagInRow","endTagInCell","endTagInSelect","endTagInSelectInTable","endTagInTemplate","endTagAfterBody","endTagInFrameset","endTagAfterFrameset","eofInBody","eofInText","eofInTemplate","stopParsing","charCodeAt","CODE_POINTS","LINE_FEED","substr","whitespaceCharacterInBody","whitespaceCharacterInTableText","aaObtainFormattingElementEntry","p","formattingElementEntry","getElementEntryInScopeWithTagName","removeEntry","hasInScope","genericEndTagInBody","aaObtainFurthestBlock","furthestBlock","idx","shortenToLength","aaInnerLoop","formattingElement","lastElement","nextElement","getCommonAncestor","elementEntry","getElementEntry","counterOverflow","shouldRemoveFromOpenElements","remove","aaRecreateElementFromEntry","bookmark","newElement","replace","aaInsertLastNodeInCommonAncestor","commonAncestor","aaReplaceFormattingElement","insertElementAfterBookmark","insertAfter","callAdoptionAgency","target","htmlElement","htmlLocation","bodyElement","bodyLocation","mode","forceQuirks","QUIRKS","getDocumentMode","isConforming","nonConformingDoctype","setDocumentMode","missingDoctype","BR","endTagWithoutMatchingOpenElement","BASE","BASEFONT","BGSOUND","LINK","META","insertMarker","misplacedStartTagForHeadElement","pop","templateEndTagInHead","tmplCount","generateImpliedEndTagsThoroughly","closingOfElementWithOpenChildElements","shift","nestedNoscriptInHead","errCode","openElementsLeftAfterEof","disallowedContentInNoscriptInHead","abandonedHeadElementChild","modeInBody","htmlStartTagInBody","adoptAttributes","bodyStartTagInBody","tryPeekProperlyNestedBodyElement","framesetStartTagInBody","popAllUpToHtmlElement","addressStartTagInBody","hasInButtonScope","numberedHeaderStartTagInBody","preStartTagInBody","formStartTagInBody","inTemplate","listItemStartTagInBody","elementId","LI","DD","DT","ADDRESS","DIV","plaintextStartTagInBody","buttonStartTagInBody","BUTTON","aStartTagInBody","activeElementEntry","A","pushElement","bStartTagInBody","nobrStartTagInBody","NOBR","appletStartTagInBody","tableStartTagInBody","areaStartTagInBody","isHiddenInput","inputType","TYPE","toLowerCase","inputStartTagInBody","paramStartTagInBody","hrStartTagInBody","imageStartTagInBody","IMG","textareaStartTagInBody","xmpStartTagInBody","iframeStartTagInBody","rawTextStartTagInBody","selectStartTagInBody","optgroupStartTagInBody","OPTION","rbStartTagInBody","RUBY","rtStartTagInBody","RTC","mathStartTagInBody","adjustTokenMathMLAttrs","adjustTokenXMLAttrs","svgStartTagInBody","adjustTokenSVGAttrs","genericStartTagInBody","I","S","B","U","EM","TT","BIG","CODE","FONT","SMALL","STRIKE","STRONG","H1","H2","H3","H4","H5","H6","DL","OL","UL","DIR","NAV","MAIN","MENU","ASIDE","CENTER","FIGURE","FOOTER","HEADER","HGROUP","DIALOG","DETAILS","ARTICLE","SEARCH","SECTION","SUMMARY","FIELDSET","BLOCKQUOTE","FIGCAPTION","WBR","AREA","EMBED","KEYGEN","HR","RB","RT","RP","PRE","LISTING","MATH","INPUT","PARAM","TRACK","SOURCE","IMAGE","APPLET","OBJECT","MARQUEE","OPTGROUP","COL","FRAME","bodyEndTagInBody","htmlEndTagInBody","addressEndTagInBody","formEndTagInBody","pEndTagInBody","liEndTagInBody","hasInListItemScope","ddEndTagInBody","numberedHeaderEndTagInBody","hasNumberedHeaderInScope","popUntilNumberedHeaderPopped","appletEndTagInBody","brEndTagInBody","eofInElementThatCanContainOnlyText","tokenInTable","captionStartTagInTable","clearBackToTableContext","colgroupStartTagInTable","colStartTagInTable","tbodyStartTagInTable","tdStartTagInTable","tableStartTagInTable","hasInTableScope","inputStartTagInTable","formStartTagInTable","savedFosterParentingState","TABLE_VOID_ELEMENTS","clearBackToTableBodyContext","hasTableBodyContextInTableScope","clearBackToTableRowContext","hasInSelectScope","isRootHtmlElementCurrent","REPLACEMENT_CHARACTER","popUntilHtmlOrIntegrationPoint","causesExit","currentNs","adjustTokenSVGTagName"],"sources":["C:/Users/Admin/Desktop/Fall24 MS/CS3980 Proj/cap_rx_3/HIT-Proj/code/app/node_modules/hast-util-raw/node_modules/parse5/dist/parser/index.js"],"sourcesContent":["import { Tokenizer, TokenizerMode } from '../tokenizer/index.js';\r\nimport { OpenElementStack } from './open-element-stack.js';\r\nimport { FormattingElementList, EntryType } from './formatting-element-list.js';\r\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\r\nimport * as doctype from '../common/doctype.js';\r\nimport * as foreignContent from '../common/foreign-content.js';\r\nimport { ERR } from '../common/error-codes.js';\r\nimport * as unicode from '../common/unicode.js';\r\nimport { TAG_ID as $, TAG_NAMES as TN, NS, ATTRS, SPECIAL_ELEMENTS, DOCUMENT_MODE, NUMBERED_HEADERS, getTagID, } from '../common/html.js';\r\nimport { TokenType, getTokenAttr, } from '../common/token.js';\r\n//Misc constants\r\nconst HIDDEN_INPUT_TYPE = 'hidden';\r\n//Adoption agency loops iteration count\r\nconst AA_OUTER_LOOP_ITER = 8;\r\nconst AA_INNER_LOOP_ITER = 3;\r\n//Insertion modes\r\nvar InsertionMode;\r\n(function (InsertionMode) {\r\n    InsertionMode[InsertionMode[\"INITIAL\"] = 0] = \"INITIAL\";\r\n    InsertionMode[InsertionMode[\"BEFORE_HTML\"] = 1] = \"BEFORE_HTML\";\r\n    InsertionMode[InsertionMode[\"BEFORE_HEAD\"] = 2] = \"BEFORE_HEAD\";\r\n    InsertionMode[InsertionMode[\"IN_HEAD\"] = 3] = \"IN_HEAD\";\r\n    InsertionMode[InsertionMode[\"IN_HEAD_NO_SCRIPT\"] = 4] = \"IN_HEAD_NO_SCRIPT\";\r\n    InsertionMode[InsertionMode[\"AFTER_HEAD\"] = 5] = \"AFTER_HEAD\";\r\n    InsertionMode[InsertionMode[\"IN_BODY\"] = 6] = \"IN_BODY\";\r\n    InsertionMode[InsertionMode[\"TEXT\"] = 7] = \"TEXT\";\r\n    InsertionMode[InsertionMode[\"IN_TABLE\"] = 8] = \"IN_TABLE\";\r\n    InsertionMode[InsertionMode[\"IN_TABLE_TEXT\"] = 9] = \"IN_TABLE_TEXT\";\r\n    InsertionMode[InsertionMode[\"IN_CAPTION\"] = 10] = \"IN_CAPTION\";\r\n    InsertionMode[InsertionMode[\"IN_COLUMN_GROUP\"] = 11] = \"IN_COLUMN_GROUP\";\r\n    InsertionMode[InsertionMode[\"IN_TABLE_BODY\"] = 12] = \"IN_TABLE_BODY\";\r\n    InsertionMode[InsertionMode[\"IN_ROW\"] = 13] = \"IN_ROW\";\r\n    InsertionMode[InsertionMode[\"IN_CELL\"] = 14] = \"IN_CELL\";\r\n    InsertionMode[InsertionMode[\"IN_SELECT\"] = 15] = \"IN_SELECT\";\r\n    InsertionMode[InsertionMode[\"IN_SELECT_IN_TABLE\"] = 16] = \"IN_SELECT_IN_TABLE\";\r\n    InsertionMode[InsertionMode[\"IN_TEMPLATE\"] = 17] = \"IN_TEMPLATE\";\r\n    InsertionMode[InsertionMode[\"AFTER_BODY\"] = 18] = \"AFTER_BODY\";\r\n    InsertionMode[InsertionMode[\"IN_FRAMESET\"] = 19] = \"IN_FRAMESET\";\r\n    InsertionMode[InsertionMode[\"AFTER_FRAMESET\"] = 20] = \"AFTER_FRAMESET\";\r\n    InsertionMode[InsertionMode[\"AFTER_AFTER_BODY\"] = 21] = \"AFTER_AFTER_BODY\";\r\n    InsertionMode[InsertionMode[\"AFTER_AFTER_FRAMESET\"] = 22] = \"AFTER_AFTER_FRAMESET\";\r\n})(InsertionMode || (InsertionMode = {}));\r\nconst BASE_LOC = {\r\n    startLine: -1,\r\n    startCol: -1,\r\n    startOffset: -1,\r\n    endLine: -1,\r\n    endCol: -1,\r\n    endOffset: -1,\r\n};\r\nconst TABLE_STRUCTURE_TAGS = new Set([$.TABLE, $.TBODY, $.TFOOT, $.THEAD, $.TR]);\r\nconst defaultParserOptions = {\r\n    scriptingEnabled: true,\r\n    sourceCodeLocationInfo: false,\r\n    treeAdapter: defaultTreeAdapter,\r\n    onParseError: null,\r\n};\r\n//Parser\r\nexport class Parser {\r\n    constructor(options, document, \r\n    /** @internal */\r\n    fragmentContext = null, \r\n    /** @internal */\r\n    scriptHandler = null) {\r\n        this.fragmentContext = fragmentContext;\r\n        this.scriptHandler = scriptHandler;\r\n        this.currentToken = null;\r\n        this.stopped = false;\r\n        /** @internal */\r\n        this.insertionMode = InsertionMode.INITIAL;\r\n        /** @internal */\r\n        this.originalInsertionMode = InsertionMode.INITIAL;\r\n        /** @internal */\r\n        this.headElement = null;\r\n        /** @internal */\r\n        this.formElement = null;\r\n        /** Indicates that the current node is not an element in the HTML namespace */\r\n        this.currentNotInHTML = false;\r\n        /**\r\n         * The template insertion mode stack is maintained from the left.\r\n         * Ie. the topmost element will always have index 0.\r\n         *\r\n         * @internal\r\n         */\r\n        this.tmplInsertionModeStack = [];\r\n        /** @internal */\r\n        this.pendingCharacterTokens = [];\r\n        /** @internal */\r\n        this.hasNonWhitespacePendingCharacterToken = false;\r\n        /** @internal */\r\n        this.framesetOk = true;\r\n        /** @internal */\r\n        this.skipNextNewLine = false;\r\n        /** @internal */\r\n        this.fosterParentingEnabled = false;\r\n        this.options = {\r\n            ...defaultParserOptions,\r\n            ...options,\r\n        };\r\n        this.treeAdapter = this.options.treeAdapter;\r\n        this.onParseError = this.options.onParseError;\r\n        // Always enable location info if we report parse errors.\r\n        if (this.onParseError) {\r\n            this.options.sourceCodeLocationInfo = true;\r\n        }\r\n        this.document = document !== null && document !== void 0 ? document : this.treeAdapter.createDocument();\r\n        this.tokenizer = new Tokenizer(this.options, this);\r\n        this.activeFormattingElements = new FormattingElementList(this.treeAdapter);\r\n        this.fragmentContextID = fragmentContext ? getTagID(this.treeAdapter.getTagName(fragmentContext)) : $.UNKNOWN;\r\n        this._setContextModes(fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : this.document, this.fragmentContextID);\r\n        this.openElements = new OpenElementStack(this.document, this.treeAdapter, this);\r\n    }\r\n    // API\r\n    static parse(html, options) {\r\n        const parser = new this(options);\r\n        parser.tokenizer.write(html, true);\r\n        return parser.document;\r\n    }\r\n    static getFragmentParser(fragmentContext, options) {\r\n        const opts = {\r\n            ...defaultParserOptions,\r\n            ...options,\r\n        };\r\n        //NOTE: use a <template> element as the fragment context if no context element was provided,\r\n        //so we will parse in a \"forgiving\" manner\r\n        fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : (fragmentContext = opts.treeAdapter.createElement(TN.TEMPLATE, NS.HTML, []));\r\n        //NOTE: create a fake element which will be used as the `document` for fragment parsing.\r\n        //This is important for jsdom, where a new `document` cannot be created. This led to\r\n        //fragment parsing messing with the main `document`.\r\n        const documentMock = opts.treeAdapter.createElement('documentmock', NS.HTML, []);\r\n        const parser = new this(opts, documentMock, fragmentContext);\r\n        if (parser.fragmentContextID === $.TEMPLATE) {\r\n            parser.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\r\n        }\r\n        parser._initTokenizerForFragmentParsing();\r\n        parser._insertFakeRootElement();\r\n        parser._resetInsertionMode();\r\n        parser._findFormInFragmentContext();\r\n        return parser;\r\n    }\r\n    getFragment() {\r\n        const rootElement = this.treeAdapter.getFirstChild(this.document);\r\n        const fragment = this.treeAdapter.createDocumentFragment();\r\n        this._adoptNodes(rootElement, fragment);\r\n        return fragment;\r\n    }\r\n    //Errors\r\n    /** @internal */\r\n    _err(token, code, beforeToken) {\r\n        var _a;\r\n        if (!this.onParseError)\r\n            return;\r\n        const loc = (_a = token.location) !== null && _a !== void 0 ? _a : BASE_LOC;\r\n        const err = {\r\n            code,\r\n            startLine: loc.startLine,\r\n            startCol: loc.startCol,\r\n            startOffset: loc.startOffset,\r\n            endLine: beforeToken ? loc.startLine : loc.endLine,\r\n            endCol: beforeToken ? loc.startCol : loc.endCol,\r\n            endOffset: beforeToken ? loc.startOffset : loc.endOffset,\r\n        };\r\n        this.onParseError(err);\r\n    }\r\n    //Stack events\r\n    /** @internal */\r\n    onItemPush(node, tid, isTop) {\r\n        var _a, _b;\r\n        (_b = (_a = this.treeAdapter).onItemPush) === null || _b === void 0 ? void 0 : _b.call(_a, node);\r\n        if (isTop && this.openElements.stackTop > 0)\r\n            this._setContextModes(node, tid);\r\n    }\r\n    /** @internal */\r\n    onItemPop(node, isTop) {\r\n        var _a, _b;\r\n        if (this.options.sourceCodeLocationInfo) {\r\n            this._setEndLocation(node, this.currentToken);\r\n        }\r\n        (_b = (_a = this.treeAdapter).onItemPop) === null || _b === void 0 ? void 0 : _b.call(_a, node, this.openElements.current);\r\n        if (isTop) {\r\n            let current;\r\n            let currentTagId;\r\n            if (this.openElements.stackTop === 0 && this.fragmentContext) {\r\n                current = this.fragmentContext;\r\n                currentTagId = this.fragmentContextID;\r\n            }\r\n            else {\r\n                ({ current, currentTagId } = this.openElements);\r\n            }\r\n            this._setContextModes(current, currentTagId);\r\n        }\r\n    }\r\n    _setContextModes(current, tid) {\r\n        const isHTML = current === this.document || this.treeAdapter.getNamespaceURI(current) === NS.HTML;\r\n        this.currentNotInHTML = !isHTML;\r\n        this.tokenizer.inForeignNode = !isHTML && !this._isIntegrationPoint(tid, current);\r\n    }\r\n    /** @protected */\r\n    _switchToTextParsing(currentToken, nextTokenizerState) {\r\n        this._insertElement(currentToken, NS.HTML);\r\n        this.tokenizer.state = nextTokenizerState;\r\n        this.originalInsertionMode = this.insertionMode;\r\n        this.insertionMode = InsertionMode.TEXT;\r\n    }\r\n    switchToPlaintextParsing() {\r\n        this.insertionMode = InsertionMode.TEXT;\r\n        this.originalInsertionMode = InsertionMode.IN_BODY;\r\n        this.tokenizer.state = TokenizerMode.PLAINTEXT;\r\n    }\r\n    //Fragment parsing\r\n    /** @protected */\r\n    _getAdjustedCurrentElement() {\r\n        return this.openElements.stackTop === 0 && this.fragmentContext\r\n            ? this.fragmentContext\r\n            : this.openElements.current;\r\n    }\r\n    /** @protected */\r\n    _findFormInFragmentContext() {\r\n        let node = this.fragmentContext;\r\n        while (node) {\r\n            if (this.treeAdapter.getTagName(node) === TN.FORM) {\r\n                this.formElement = node;\r\n                break;\r\n            }\r\n            node = this.treeAdapter.getParentNode(node);\r\n        }\r\n    }\r\n    _initTokenizerForFragmentParsing() {\r\n        if (!this.fragmentContext || this.treeAdapter.getNamespaceURI(this.fragmentContext) !== NS.HTML) {\r\n            return;\r\n        }\r\n        switch (this.fragmentContextID) {\r\n            case $.TITLE:\r\n            case $.TEXTAREA: {\r\n                this.tokenizer.state = TokenizerMode.RCDATA;\r\n                break;\r\n            }\r\n            case $.STYLE:\r\n            case $.XMP:\r\n            case $.IFRAME:\r\n            case $.NOEMBED:\r\n            case $.NOFRAMES:\r\n            case $.NOSCRIPT: {\r\n                this.tokenizer.state = TokenizerMode.RAWTEXT;\r\n                break;\r\n            }\r\n            case $.SCRIPT: {\r\n                this.tokenizer.state = TokenizerMode.SCRIPT_DATA;\r\n                break;\r\n            }\r\n            case $.PLAINTEXT: {\r\n                this.tokenizer.state = TokenizerMode.PLAINTEXT;\r\n                break;\r\n            }\r\n            default:\r\n            // Do nothing\r\n        }\r\n    }\r\n    //Tree mutation\r\n    /** @protected */\r\n    _setDocumentType(token) {\r\n        const name = token.name || '';\r\n        const publicId = token.publicId || '';\r\n        const systemId = token.systemId || '';\r\n        this.treeAdapter.setDocumentType(this.document, name, publicId, systemId);\r\n        if (token.location) {\r\n            const documentChildren = this.treeAdapter.getChildNodes(this.document);\r\n            const docTypeNode = documentChildren.find((node) => this.treeAdapter.isDocumentTypeNode(node));\r\n            if (docTypeNode) {\r\n                this.treeAdapter.setNodeSourceCodeLocation(docTypeNode, token.location);\r\n            }\r\n        }\r\n    }\r\n    /** @protected */\r\n    _attachElementToTree(element, location) {\r\n        if (this.options.sourceCodeLocationInfo) {\r\n            const loc = location && {\r\n                ...location,\r\n                startTag: location,\r\n            };\r\n            this.treeAdapter.setNodeSourceCodeLocation(element, loc);\r\n        }\r\n        if (this._shouldFosterParentOnInsertion()) {\r\n            this._fosterParentElement(element);\r\n        }\r\n        else {\r\n            const parent = this.openElements.currentTmplContentOrNode;\r\n            this.treeAdapter.appendChild(parent, element);\r\n        }\r\n    }\r\n    /**\r\n     * For self-closing tags. Add an element to the tree, but skip adding it\r\n     * to the stack.\r\n     */\r\n    /** @protected */\r\n    _appendElement(token, namespaceURI) {\r\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\r\n        this._attachElementToTree(element, token.location);\r\n    }\r\n    /** @protected */\r\n    _insertElement(token, namespaceURI) {\r\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\r\n        this._attachElementToTree(element, token.location);\r\n        this.openElements.push(element, token.tagID);\r\n    }\r\n    /** @protected */\r\n    _insertFakeElement(tagName, tagID) {\r\n        const element = this.treeAdapter.createElement(tagName, NS.HTML, []);\r\n        this._attachElementToTree(element, null);\r\n        this.openElements.push(element, tagID);\r\n    }\r\n    /** @protected */\r\n    _insertTemplate(token) {\r\n        const tmpl = this.treeAdapter.createElement(token.tagName, NS.HTML, token.attrs);\r\n        const content = this.treeAdapter.createDocumentFragment();\r\n        this.treeAdapter.setTemplateContent(tmpl, content);\r\n        this._attachElementToTree(tmpl, token.location);\r\n        this.openElements.push(tmpl, token.tagID);\r\n        if (this.options.sourceCodeLocationInfo)\r\n            this.treeAdapter.setNodeSourceCodeLocation(content, null);\r\n    }\r\n    /** @protected */\r\n    _insertFakeRootElement() {\r\n        const element = this.treeAdapter.createElement(TN.HTML, NS.HTML, []);\r\n        if (this.options.sourceCodeLocationInfo)\r\n            this.treeAdapter.setNodeSourceCodeLocation(element, null);\r\n        this.treeAdapter.appendChild(this.openElements.current, element);\r\n        this.openElements.push(element, $.HTML);\r\n    }\r\n    /** @protected */\r\n    _appendCommentNode(token, parent) {\r\n        const commentNode = this.treeAdapter.createCommentNode(token.data);\r\n        this.treeAdapter.appendChild(parent, commentNode);\r\n        if (this.options.sourceCodeLocationInfo) {\r\n            this.treeAdapter.setNodeSourceCodeLocation(commentNode, token.location);\r\n        }\r\n    }\r\n    /** @protected */\r\n    _insertCharacters(token) {\r\n        let parent;\r\n        let beforeElement;\r\n        if (this._shouldFosterParentOnInsertion()) {\r\n            ({ parent, beforeElement } = this._findFosterParentingLocation());\r\n            if (beforeElement) {\r\n                this.treeAdapter.insertTextBefore(parent, token.chars, beforeElement);\r\n            }\r\n            else {\r\n                this.treeAdapter.insertText(parent, token.chars);\r\n            }\r\n        }\r\n        else {\r\n            parent = this.openElements.currentTmplContentOrNode;\r\n            this.treeAdapter.insertText(parent, token.chars);\r\n        }\r\n        if (!token.location)\r\n            return;\r\n        const siblings = this.treeAdapter.getChildNodes(parent);\r\n        const textNodeIdx = beforeElement ? siblings.lastIndexOf(beforeElement) : siblings.length;\r\n        const textNode = siblings[textNodeIdx - 1];\r\n        //NOTE: if we have a location assigned by another token, then just update the end position\r\n        const tnLoc = this.treeAdapter.getNodeSourceCodeLocation(textNode);\r\n        if (tnLoc) {\r\n            const { endLine, endCol, endOffset } = token.location;\r\n            this.treeAdapter.updateNodeSourceCodeLocation(textNode, { endLine, endCol, endOffset });\r\n        }\r\n        else if (this.options.sourceCodeLocationInfo) {\r\n            this.treeAdapter.setNodeSourceCodeLocation(textNode, token.location);\r\n        }\r\n    }\r\n    /** @protected */\r\n    _adoptNodes(donor, recipient) {\r\n        for (let child = this.treeAdapter.getFirstChild(donor); child; child = this.treeAdapter.getFirstChild(donor)) {\r\n            this.treeAdapter.detachNode(child);\r\n            this.treeAdapter.appendChild(recipient, child);\r\n        }\r\n    }\r\n    /** @protected */\r\n    _setEndLocation(element, closingToken) {\r\n        if (this.treeAdapter.getNodeSourceCodeLocation(element) && closingToken.location) {\r\n            const ctLoc = closingToken.location;\r\n            const tn = this.treeAdapter.getTagName(element);\r\n            const endLoc = \r\n            // NOTE: For cases like <p> <p> </p> - First 'p' closes without a closing\r\n            // tag and for cases like <td> <p> </td> - 'p' closes without a closing tag.\r\n            closingToken.type === TokenType.END_TAG && tn === closingToken.tagName\r\n                ? {\r\n                    endTag: { ...ctLoc },\r\n                    endLine: ctLoc.endLine,\r\n                    endCol: ctLoc.endCol,\r\n                    endOffset: ctLoc.endOffset,\r\n                }\r\n                : {\r\n                    endLine: ctLoc.startLine,\r\n                    endCol: ctLoc.startCol,\r\n                    endOffset: ctLoc.startOffset,\r\n                };\r\n            this.treeAdapter.updateNodeSourceCodeLocation(element, endLoc);\r\n        }\r\n    }\r\n    //Token processing\r\n    shouldProcessStartTagTokenInForeignContent(token) {\r\n        // Check that neither current === document, or ns === NS.HTML\r\n        if (!this.currentNotInHTML)\r\n            return false;\r\n        let current;\r\n        let currentTagId;\r\n        if (this.openElements.stackTop === 0 && this.fragmentContext) {\r\n            current = this.fragmentContext;\r\n            currentTagId = this.fragmentContextID;\r\n        }\r\n        else {\r\n            ({ current, currentTagId } = this.openElements);\r\n        }\r\n        if (token.tagID === $.SVG &&\r\n            this.treeAdapter.getTagName(current) === TN.ANNOTATION_XML &&\r\n            this.treeAdapter.getNamespaceURI(current) === NS.MATHML) {\r\n            return false;\r\n        }\r\n        return (\r\n        // Check that `current` is not an integration point for HTML or MathML elements.\r\n        this.tokenizer.inForeignNode ||\r\n            // If it _is_ an integration point, then we might have to check that it is not an HTML\r\n            // integration point.\r\n            ((token.tagID === $.MGLYPH || token.tagID === $.MALIGNMARK) &&\r\n                !this._isIntegrationPoint(currentTagId, current, NS.HTML)));\r\n    }\r\n    /** @protected */\r\n    _processToken(token) {\r\n        switch (token.type) {\r\n            case TokenType.CHARACTER: {\r\n                this.onCharacter(token);\r\n                break;\r\n            }\r\n            case TokenType.NULL_CHARACTER: {\r\n                this.onNullCharacter(token);\r\n                break;\r\n            }\r\n            case TokenType.COMMENT: {\r\n                this.onComment(token);\r\n                break;\r\n            }\r\n            case TokenType.DOCTYPE: {\r\n                this.onDoctype(token);\r\n                break;\r\n            }\r\n            case TokenType.START_TAG: {\r\n                this._processStartTag(token);\r\n                break;\r\n            }\r\n            case TokenType.END_TAG: {\r\n                this.onEndTag(token);\r\n                break;\r\n            }\r\n            case TokenType.EOF: {\r\n                this.onEof(token);\r\n                break;\r\n            }\r\n            case TokenType.WHITESPACE_CHARACTER: {\r\n                this.onWhitespaceCharacter(token);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    //Integration points\r\n    /** @protected */\r\n    _isIntegrationPoint(tid, element, foreignNS) {\r\n        const ns = this.treeAdapter.getNamespaceURI(element);\r\n        const attrs = this.treeAdapter.getAttrList(element);\r\n        return foreignContent.isIntegrationPoint(tid, ns, attrs, foreignNS);\r\n    }\r\n    //Active formatting elements reconstruction\r\n    /** @protected */\r\n    _reconstructActiveFormattingElements() {\r\n        const listLength = this.activeFormattingElements.entries.length;\r\n        if (listLength) {\r\n            const endIndex = this.activeFormattingElements.entries.findIndex((entry) => entry.type === EntryType.Marker || this.openElements.contains(entry.element));\r\n            const unopenIdx = endIndex < 0 ? listLength - 1 : endIndex - 1;\r\n            for (let i = unopenIdx; i >= 0; i--) {\r\n                const entry = this.activeFormattingElements.entries[i];\r\n                this._insertElement(entry.token, this.treeAdapter.getNamespaceURI(entry.element));\r\n                entry.element = this.openElements.current;\r\n            }\r\n        }\r\n    }\r\n    //Close elements\r\n    /** @protected */\r\n    _closeTableCell() {\r\n        this.openElements.generateImpliedEndTags();\r\n        this.openElements.popUntilTableCellPopped();\r\n        this.activeFormattingElements.clearToLastMarker();\r\n        this.insertionMode = InsertionMode.IN_ROW;\r\n    }\r\n    /** @protected */\r\n    _closePElement() {\r\n        this.openElements.generateImpliedEndTagsWithExclusion($.P);\r\n        this.openElements.popUntilTagNamePopped($.P);\r\n    }\r\n    //Insertion modes\r\n    /** @protected */\r\n    _resetInsertionMode() {\r\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\r\n            //Insertion mode reset map\r\n            switch (i === 0 && this.fragmentContext ? this.fragmentContextID : this.openElements.tagIDs[i]) {\r\n                case $.TR: {\r\n                    this.insertionMode = InsertionMode.IN_ROW;\r\n                    return;\r\n                }\r\n                case $.TBODY:\r\n                case $.THEAD:\r\n                case $.TFOOT: {\r\n                    this.insertionMode = InsertionMode.IN_TABLE_BODY;\r\n                    return;\r\n                }\r\n                case $.CAPTION: {\r\n                    this.insertionMode = InsertionMode.IN_CAPTION;\r\n                    return;\r\n                }\r\n                case $.COLGROUP: {\r\n                    this.insertionMode = InsertionMode.IN_COLUMN_GROUP;\r\n                    return;\r\n                }\r\n                case $.TABLE: {\r\n                    this.insertionMode = InsertionMode.IN_TABLE;\r\n                    return;\r\n                }\r\n                case $.BODY: {\r\n                    this.insertionMode = InsertionMode.IN_BODY;\r\n                    return;\r\n                }\r\n                case $.FRAMESET: {\r\n                    this.insertionMode = InsertionMode.IN_FRAMESET;\r\n                    return;\r\n                }\r\n                case $.SELECT: {\r\n                    this._resetInsertionModeForSelect(i);\r\n                    return;\r\n                }\r\n                case $.TEMPLATE: {\r\n                    this.insertionMode = this.tmplInsertionModeStack[0];\r\n                    return;\r\n                }\r\n                case $.HTML: {\r\n                    this.insertionMode = this.headElement ? InsertionMode.AFTER_HEAD : InsertionMode.BEFORE_HEAD;\r\n                    return;\r\n                }\r\n                case $.TD:\r\n                case $.TH: {\r\n                    if (i > 0) {\r\n                        this.insertionMode = InsertionMode.IN_CELL;\r\n                        return;\r\n                    }\r\n                    break;\r\n                }\r\n                case $.HEAD: {\r\n                    if (i > 0) {\r\n                        this.insertionMode = InsertionMode.IN_HEAD;\r\n                        return;\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        this.insertionMode = InsertionMode.IN_BODY;\r\n    }\r\n    /** @protected */\r\n    _resetInsertionModeForSelect(selectIdx) {\r\n        if (selectIdx > 0) {\r\n            for (let i = selectIdx - 1; i > 0; i--) {\r\n                const tn = this.openElements.tagIDs[i];\r\n                if (tn === $.TEMPLATE) {\r\n                    break;\r\n                }\r\n                else if (tn === $.TABLE) {\r\n                    this.insertionMode = InsertionMode.IN_SELECT_IN_TABLE;\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        this.insertionMode = InsertionMode.IN_SELECT;\r\n    }\r\n    //Foster parenting\r\n    /** @protected */\r\n    _isElementCausesFosterParenting(tn) {\r\n        return TABLE_STRUCTURE_TAGS.has(tn);\r\n    }\r\n    /** @protected */\r\n    _shouldFosterParentOnInsertion() {\r\n        return this.fosterParentingEnabled && this._isElementCausesFosterParenting(this.openElements.currentTagId);\r\n    }\r\n    /** @protected */\r\n    _findFosterParentingLocation() {\r\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\r\n            const openElement = this.openElements.items[i];\r\n            switch (this.openElements.tagIDs[i]) {\r\n                case $.TEMPLATE: {\r\n                    if (this.treeAdapter.getNamespaceURI(openElement) === NS.HTML) {\r\n                        return { parent: this.treeAdapter.getTemplateContent(openElement), beforeElement: null };\r\n                    }\r\n                    break;\r\n                }\r\n                case $.TABLE: {\r\n                    const parent = this.treeAdapter.getParentNode(openElement);\r\n                    if (parent) {\r\n                        return { parent, beforeElement: openElement };\r\n                    }\r\n                    return { parent: this.openElements.items[i - 1], beforeElement: null };\r\n                }\r\n                default:\r\n                // Do nothing\r\n            }\r\n        }\r\n        return { parent: this.openElements.items[0], beforeElement: null };\r\n    }\r\n    /** @protected */\r\n    _fosterParentElement(element) {\r\n        const location = this._findFosterParentingLocation();\r\n        if (location.beforeElement) {\r\n            this.treeAdapter.insertBefore(location.parent, element, location.beforeElement);\r\n        }\r\n        else {\r\n            this.treeAdapter.appendChild(location.parent, element);\r\n        }\r\n    }\r\n    //Special elements\r\n    /** @protected */\r\n    _isSpecialElement(element, id) {\r\n        const ns = this.treeAdapter.getNamespaceURI(element);\r\n        return SPECIAL_ELEMENTS[ns].has(id);\r\n    }\r\n    /** @internal */\r\n    onCharacter(token) {\r\n        this.skipNextNewLine = false;\r\n        if (this.tokenizer.inForeignNode) {\r\n            characterInForeignContent(this, token);\r\n            return;\r\n        }\r\n        switch (this.insertionMode) {\r\n            case InsertionMode.INITIAL: {\r\n                tokenInInitialMode(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.BEFORE_HTML: {\r\n                tokenBeforeHtml(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.BEFORE_HEAD: {\r\n                tokenBeforeHead(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_HEAD: {\r\n                tokenInHead(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\r\n                tokenInHeadNoScript(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.AFTER_HEAD: {\r\n                tokenAfterHead(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_BODY:\r\n            case InsertionMode.IN_CAPTION:\r\n            case InsertionMode.IN_CELL:\r\n            case InsertionMode.IN_TEMPLATE: {\r\n                characterInBody(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.TEXT:\r\n            case InsertionMode.IN_SELECT:\r\n            case InsertionMode.IN_SELECT_IN_TABLE: {\r\n                this._insertCharacters(token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_TABLE:\r\n            case InsertionMode.IN_TABLE_BODY:\r\n            case InsertionMode.IN_ROW: {\r\n                characterInTable(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_TABLE_TEXT: {\r\n                characterInTableText(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_COLUMN_GROUP: {\r\n                tokenInColumnGroup(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.AFTER_BODY: {\r\n                tokenAfterBody(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.AFTER_AFTER_BODY: {\r\n                tokenAfterAfterBody(this, token);\r\n                break;\r\n            }\r\n            default:\r\n            // Do nothing\r\n        }\r\n    }\r\n    /** @internal */\r\n    onNullCharacter(token) {\r\n        this.skipNextNewLine = false;\r\n        if (this.tokenizer.inForeignNode) {\r\n            nullCharacterInForeignContent(this, token);\r\n            return;\r\n        }\r\n        switch (this.insertionMode) {\r\n            case InsertionMode.INITIAL: {\r\n                tokenInInitialMode(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.BEFORE_HTML: {\r\n                tokenBeforeHtml(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.BEFORE_HEAD: {\r\n                tokenBeforeHead(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_HEAD: {\r\n                tokenInHead(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\r\n                tokenInHeadNoScript(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.AFTER_HEAD: {\r\n                tokenAfterHead(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.TEXT: {\r\n                this._insertCharacters(token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_TABLE:\r\n            case InsertionMode.IN_TABLE_BODY:\r\n            case InsertionMode.IN_ROW: {\r\n                characterInTable(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_COLUMN_GROUP: {\r\n                tokenInColumnGroup(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.AFTER_BODY: {\r\n                tokenAfterBody(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.AFTER_AFTER_BODY: {\r\n                tokenAfterAfterBody(this, token);\r\n                break;\r\n            }\r\n            default:\r\n            // Do nothing\r\n        }\r\n    }\r\n    /** @internal */\r\n    onComment(token) {\r\n        this.skipNextNewLine = false;\r\n        if (this.currentNotInHTML) {\r\n            appendComment(this, token);\r\n            return;\r\n        }\r\n        switch (this.insertionMode) {\r\n            case InsertionMode.INITIAL:\r\n            case InsertionMode.BEFORE_HTML:\r\n            case InsertionMode.BEFORE_HEAD:\r\n            case InsertionMode.IN_HEAD:\r\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\r\n            case InsertionMode.AFTER_HEAD:\r\n            case InsertionMode.IN_BODY:\r\n            case InsertionMode.IN_TABLE:\r\n            case InsertionMode.IN_CAPTION:\r\n            case InsertionMode.IN_COLUMN_GROUP:\r\n            case InsertionMode.IN_TABLE_BODY:\r\n            case InsertionMode.IN_ROW:\r\n            case InsertionMode.IN_CELL:\r\n            case InsertionMode.IN_SELECT:\r\n            case InsertionMode.IN_SELECT_IN_TABLE:\r\n            case InsertionMode.IN_TEMPLATE:\r\n            case InsertionMode.IN_FRAMESET:\r\n            case InsertionMode.AFTER_FRAMESET: {\r\n                appendComment(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_TABLE_TEXT: {\r\n                tokenInTableText(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.AFTER_BODY: {\r\n                appendCommentToRootHtmlElement(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.AFTER_AFTER_BODY:\r\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\r\n                appendCommentToDocument(this, token);\r\n                break;\r\n            }\r\n            default:\r\n            // Do nothing\r\n        }\r\n    }\r\n    /** @internal */\r\n    onDoctype(token) {\r\n        this.skipNextNewLine = false;\r\n        switch (this.insertionMode) {\r\n            case InsertionMode.INITIAL: {\r\n                doctypeInInitialMode(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.BEFORE_HEAD:\r\n            case InsertionMode.IN_HEAD:\r\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\r\n            case InsertionMode.AFTER_HEAD: {\r\n                this._err(token, ERR.misplacedDoctype);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_TABLE_TEXT: {\r\n                tokenInTableText(this, token);\r\n                break;\r\n            }\r\n            default:\r\n            // Do nothing\r\n        }\r\n    }\r\n    /** @internal */\r\n    onStartTag(token) {\r\n        this.skipNextNewLine = false;\r\n        this.currentToken = token;\r\n        this._processStartTag(token);\r\n        if (token.selfClosing && !token.ackSelfClosing) {\r\n            this._err(token, ERR.nonVoidHtmlElementStartTagWithTrailingSolidus);\r\n        }\r\n    }\r\n    /**\r\n     * Processes a given start tag.\r\n     *\r\n     * `onStartTag` checks if a self-closing tag was recognized. When a token\r\n     * is moved inbetween multiple insertion modes, this check for self-closing\r\n     * could lead to false positives. To avoid this, `_processStartTag` is used\r\n     * for nested calls.\r\n     *\r\n     * @param token The token to process.\r\n     * @protected\r\n     */\r\n    _processStartTag(token) {\r\n        if (this.shouldProcessStartTagTokenInForeignContent(token)) {\r\n            startTagInForeignContent(this, token);\r\n        }\r\n        else {\r\n            this._startTagOutsideForeignContent(token);\r\n        }\r\n    }\r\n    /** @protected */\r\n    _startTagOutsideForeignContent(token) {\r\n        switch (this.insertionMode) {\r\n            case InsertionMode.INITIAL: {\r\n                tokenInInitialMode(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.BEFORE_HTML: {\r\n                startTagBeforeHtml(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.BEFORE_HEAD: {\r\n                startTagBeforeHead(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_HEAD: {\r\n                startTagInHead(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\r\n                startTagInHeadNoScript(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.AFTER_HEAD: {\r\n                startTagAfterHead(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_BODY: {\r\n                startTagInBody(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_TABLE: {\r\n                startTagInTable(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_TABLE_TEXT: {\r\n                tokenInTableText(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_CAPTION: {\r\n                startTagInCaption(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_COLUMN_GROUP: {\r\n                startTagInColumnGroup(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_TABLE_BODY: {\r\n                startTagInTableBody(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_ROW: {\r\n                startTagInRow(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_CELL: {\r\n                startTagInCell(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_SELECT: {\r\n                startTagInSelect(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_SELECT_IN_TABLE: {\r\n                startTagInSelectInTable(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_TEMPLATE: {\r\n                startTagInTemplate(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.AFTER_BODY: {\r\n                startTagAfterBody(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_FRAMESET: {\r\n                startTagInFrameset(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.AFTER_FRAMESET: {\r\n                startTagAfterFrameset(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.AFTER_AFTER_BODY: {\r\n                startTagAfterAfterBody(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\r\n                startTagAfterAfterFrameset(this, token);\r\n                break;\r\n            }\r\n            default:\r\n            // Do nothing\r\n        }\r\n    }\r\n    /** @internal */\r\n    onEndTag(token) {\r\n        this.skipNextNewLine = false;\r\n        this.currentToken = token;\r\n        if (this.currentNotInHTML) {\r\n            endTagInForeignContent(this, token);\r\n        }\r\n        else {\r\n            this._endTagOutsideForeignContent(token);\r\n        }\r\n    }\r\n    /** @protected */\r\n    _endTagOutsideForeignContent(token) {\r\n        switch (this.insertionMode) {\r\n            case InsertionMode.INITIAL: {\r\n                tokenInInitialMode(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.BEFORE_HTML: {\r\n                endTagBeforeHtml(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.BEFORE_HEAD: {\r\n                endTagBeforeHead(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_HEAD: {\r\n                endTagInHead(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\r\n                endTagInHeadNoScript(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.AFTER_HEAD: {\r\n                endTagAfterHead(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_BODY: {\r\n                endTagInBody(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.TEXT: {\r\n                endTagInText(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_TABLE: {\r\n                endTagInTable(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_TABLE_TEXT: {\r\n                tokenInTableText(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_CAPTION: {\r\n                endTagInCaption(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_COLUMN_GROUP: {\r\n                endTagInColumnGroup(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_TABLE_BODY: {\r\n                endTagInTableBody(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_ROW: {\r\n                endTagInRow(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_CELL: {\r\n                endTagInCell(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_SELECT: {\r\n                endTagInSelect(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_SELECT_IN_TABLE: {\r\n                endTagInSelectInTable(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_TEMPLATE: {\r\n                endTagInTemplate(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.AFTER_BODY: {\r\n                endTagAfterBody(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_FRAMESET: {\r\n                endTagInFrameset(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.AFTER_FRAMESET: {\r\n                endTagAfterFrameset(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.AFTER_AFTER_BODY: {\r\n                tokenAfterAfterBody(this, token);\r\n                break;\r\n            }\r\n            default:\r\n            // Do nothing\r\n        }\r\n    }\r\n    /** @internal */\r\n    onEof(token) {\r\n        switch (this.insertionMode) {\r\n            case InsertionMode.INITIAL: {\r\n                tokenInInitialMode(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.BEFORE_HTML: {\r\n                tokenBeforeHtml(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.BEFORE_HEAD: {\r\n                tokenBeforeHead(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_HEAD: {\r\n                tokenInHead(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\r\n                tokenInHeadNoScript(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.AFTER_HEAD: {\r\n                tokenAfterHead(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_BODY:\r\n            case InsertionMode.IN_TABLE:\r\n            case InsertionMode.IN_CAPTION:\r\n            case InsertionMode.IN_COLUMN_GROUP:\r\n            case InsertionMode.IN_TABLE_BODY:\r\n            case InsertionMode.IN_ROW:\r\n            case InsertionMode.IN_CELL:\r\n            case InsertionMode.IN_SELECT:\r\n            case InsertionMode.IN_SELECT_IN_TABLE: {\r\n                eofInBody(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.TEXT: {\r\n                eofInText(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_TABLE_TEXT: {\r\n                tokenInTableText(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_TEMPLATE: {\r\n                eofInTemplate(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.AFTER_BODY:\r\n            case InsertionMode.IN_FRAMESET:\r\n            case InsertionMode.AFTER_FRAMESET:\r\n            case InsertionMode.AFTER_AFTER_BODY:\r\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\r\n                stopParsing(this, token);\r\n                break;\r\n            }\r\n            default:\r\n            // Do nothing\r\n        }\r\n    }\r\n    /** @internal */\r\n    onWhitespaceCharacter(token) {\r\n        if (this.skipNextNewLine) {\r\n            this.skipNextNewLine = false;\r\n            if (token.chars.charCodeAt(0) === unicode.CODE_POINTS.LINE_FEED) {\r\n                if (token.chars.length === 1) {\r\n                    return;\r\n                }\r\n                token.chars = token.chars.substr(1);\r\n            }\r\n        }\r\n        if (this.tokenizer.inForeignNode) {\r\n            this._insertCharacters(token);\r\n            return;\r\n        }\r\n        switch (this.insertionMode) {\r\n            case InsertionMode.IN_HEAD:\r\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\r\n            case InsertionMode.AFTER_HEAD:\r\n            case InsertionMode.TEXT:\r\n            case InsertionMode.IN_COLUMN_GROUP:\r\n            case InsertionMode.IN_SELECT:\r\n            case InsertionMode.IN_SELECT_IN_TABLE:\r\n            case InsertionMode.IN_FRAMESET:\r\n            case InsertionMode.AFTER_FRAMESET: {\r\n                this._insertCharacters(token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_BODY:\r\n            case InsertionMode.IN_CAPTION:\r\n            case InsertionMode.IN_CELL:\r\n            case InsertionMode.IN_TEMPLATE:\r\n            case InsertionMode.AFTER_BODY:\r\n            case InsertionMode.AFTER_AFTER_BODY:\r\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\r\n                whitespaceCharacterInBody(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_TABLE:\r\n            case InsertionMode.IN_TABLE_BODY:\r\n            case InsertionMode.IN_ROW: {\r\n                characterInTable(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_TABLE_TEXT: {\r\n                whitespaceCharacterInTableText(this, token);\r\n                break;\r\n            }\r\n            default:\r\n            // Do nothing\r\n        }\r\n    }\r\n}\r\n//Adoption agency algorithm\r\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#adoptionAgency)\r\n//------------------------------------------------------------------\r\n//Steps 5-8 of the algorithm\r\nfunction aaObtainFormattingElementEntry(p, token) {\r\n    let formattingElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(token.tagName);\r\n    if (formattingElementEntry) {\r\n        if (!p.openElements.contains(formattingElementEntry.element)) {\r\n            p.activeFormattingElements.removeEntry(formattingElementEntry);\r\n            formattingElementEntry = null;\r\n        }\r\n        else if (!p.openElements.hasInScope(token.tagID)) {\r\n            formattingElementEntry = null;\r\n        }\r\n    }\r\n    else {\r\n        genericEndTagInBody(p, token);\r\n    }\r\n    return formattingElementEntry;\r\n}\r\n//Steps 9 and 10 of the algorithm\r\nfunction aaObtainFurthestBlock(p, formattingElementEntry) {\r\n    let furthestBlock = null;\r\n    let idx = p.openElements.stackTop;\r\n    for (; idx >= 0; idx--) {\r\n        const element = p.openElements.items[idx];\r\n        if (element === formattingElementEntry.element) {\r\n            break;\r\n        }\r\n        if (p._isSpecialElement(element, p.openElements.tagIDs[idx])) {\r\n            furthestBlock = element;\r\n        }\r\n    }\r\n    if (!furthestBlock) {\r\n        p.openElements.shortenToLength(idx < 0 ? 0 : idx);\r\n        p.activeFormattingElements.removeEntry(formattingElementEntry);\r\n    }\r\n    return furthestBlock;\r\n}\r\n//Step 13 of the algorithm\r\nfunction aaInnerLoop(p, furthestBlock, formattingElement) {\r\n    let lastElement = furthestBlock;\r\n    let nextElement = p.openElements.getCommonAncestor(furthestBlock);\r\n    for (let i = 0, element = nextElement; element !== formattingElement; i++, element = nextElement) {\r\n        //NOTE: store the next element for the next loop iteration (it may be deleted from the stack by step 9.5)\r\n        nextElement = p.openElements.getCommonAncestor(element);\r\n        const elementEntry = p.activeFormattingElements.getElementEntry(element);\r\n        const counterOverflow = elementEntry && i >= AA_INNER_LOOP_ITER;\r\n        const shouldRemoveFromOpenElements = !elementEntry || counterOverflow;\r\n        if (shouldRemoveFromOpenElements) {\r\n            if (counterOverflow) {\r\n                p.activeFormattingElements.removeEntry(elementEntry);\r\n            }\r\n            p.openElements.remove(element);\r\n        }\r\n        else {\r\n            element = aaRecreateElementFromEntry(p, elementEntry);\r\n            if (lastElement === furthestBlock) {\r\n                p.activeFormattingElements.bookmark = elementEntry;\r\n            }\r\n            p.treeAdapter.detachNode(lastElement);\r\n            p.treeAdapter.appendChild(element, lastElement);\r\n            lastElement = element;\r\n        }\r\n    }\r\n    return lastElement;\r\n}\r\n//Step 13.7 of the algorithm\r\nfunction aaRecreateElementFromEntry(p, elementEntry) {\r\n    const ns = p.treeAdapter.getNamespaceURI(elementEntry.element);\r\n    const newElement = p.treeAdapter.createElement(elementEntry.token.tagName, ns, elementEntry.token.attrs);\r\n    p.openElements.replace(elementEntry.element, newElement);\r\n    elementEntry.element = newElement;\r\n    return newElement;\r\n}\r\n//Step 14 of the algorithm\r\nfunction aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement) {\r\n    const tn = p.treeAdapter.getTagName(commonAncestor);\r\n    const tid = getTagID(tn);\r\n    if (p._isElementCausesFosterParenting(tid)) {\r\n        p._fosterParentElement(lastElement);\r\n    }\r\n    else {\r\n        const ns = p.treeAdapter.getNamespaceURI(commonAncestor);\r\n        if (tid === $.TEMPLATE && ns === NS.HTML) {\r\n            commonAncestor = p.treeAdapter.getTemplateContent(commonAncestor);\r\n        }\r\n        p.treeAdapter.appendChild(commonAncestor, lastElement);\r\n    }\r\n}\r\n//Steps 15-19 of the algorithm\r\nfunction aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry) {\r\n    const ns = p.treeAdapter.getNamespaceURI(formattingElementEntry.element);\r\n    const { token } = formattingElementEntry;\r\n    const newElement = p.treeAdapter.createElement(token.tagName, ns, token.attrs);\r\n    p._adoptNodes(furthestBlock, newElement);\r\n    p.treeAdapter.appendChild(furthestBlock, newElement);\r\n    p.activeFormattingElements.insertElementAfterBookmark(newElement, token);\r\n    p.activeFormattingElements.removeEntry(formattingElementEntry);\r\n    p.openElements.remove(formattingElementEntry.element);\r\n    p.openElements.insertAfter(furthestBlock, newElement, token.tagID);\r\n}\r\n//Algorithm entry point\r\nfunction callAdoptionAgency(p, token) {\r\n    for (let i = 0; i < AA_OUTER_LOOP_ITER; i++) {\r\n        const formattingElementEntry = aaObtainFormattingElementEntry(p, token);\r\n        if (!formattingElementEntry) {\r\n            break;\r\n        }\r\n        const furthestBlock = aaObtainFurthestBlock(p, formattingElementEntry);\r\n        if (!furthestBlock) {\r\n            break;\r\n        }\r\n        p.activeFormattingElements.bookmark = formattingElementEntry;\r\n        const lastElement = aaInnerLoop(p, furthestBlock, formattingElementEntry.element);\r\n        const commonAncestor = p.openElements.getCommonAncestor(formattingElementEntry.element);\r\n        p.treeAdapter.detachNode(lastElement);\r\n        if (commonAncestor)\r\n            aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement);\r\n        aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry);\r\n    }\r\n}\r\n//Generic token handlers\r\n//------------------------------------------------------------------\r\nfunction appendComment(p, token) {\r\n    p._appendCommentNode(token, p.openElements.currentTmplContentOrNode);\r\n}\r\nfunction appendCommentToRootHtmlElement(p, token) {\r\n    p._appendCommentNode(token, p.openElements.items[0]);\r\n}\r\nfunction appendCommentToDocument(p, token) {\r\n    p._appendCommentNode(token, p.document);\r\n}\r\nfunction stopParsing(p, token) {\r\n    p.stopped = true;\r\n    // NOTE: Set end locations for elements that remain on the open element stack.\r\n    if (token.location) {\r\n        // NOTE: If we are not in a fragment, `html` and `body` will stay on the stack.\r\n        // This is a problem, as we might overwrite their end position here.\r\n        const target = p.fragmentContext ? 0 : 2;\r\n        for (let i = p.openElements.stackTop; i >= target; i--) {\r\n            p._setEndLocation(p.openElements.items[i], token);\r\n        }\r\n        // Handle `html` and `body`\r\n        if (!p.fragmentContext && p.openElements.stackTop >= 0) {\r\n            const htmlElement = p.openElements.items[0];\r\n            const htmlLocation = p.treeAdapter.getNodeSourceCodeLocation(htmlElement);\r\n            if (htmlLocation && !htmlLocation.endTag) {\r\n                p._setEndLocation(htmlElement, token);\r\n                if (p.openElements.stackTop >= 1) {\r\n                    const bodyElement = p.openElements.items[1];\r\n                    const bodyLocation = p.treeAdapter.getNodeSourceCodeLocation(bodyElement);\r\n                    if (bodyLocation && !bodyLocation.endTag) {\r\n                        p._setEndLocation(bodyElement, token);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n// The \"initial\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction doctypeInInitialMode(p, token) {\r\n    p._setDocumentType(token);\r\n    const mode = token.forceQuirks ? DOCUMENT_MODE.QUIRKS : doctype.getDocumentMode(token);\r\n    if (!doctype.isConforming(token)) {\r\n        p._err(token, ERR.nonConformingDoctype);\r\n    }\r\n    p.treeAdapter.setDocumentMode(p.document, mode);\r\n    p.insertionMode = InsertionMode.BEFORE_HTML;\r\n}\r\nfunction tokenInInitialMode(p, token) {\r\n    p._err(token, ERR.missingDoctype, true);\r\n    p.treeAdapter.setDocumentMode(p.document, DOCUMENT_MODE.QUIRKS);\r\n    p.insertionMode = InsertionMode.BEFORE_HTML;\r\n    p._processToken(token);\r\n}\r\n// The \"before html\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagBeforeHtml(p, token) {\r\n    if (token.tagID === $.HTML) {\r\n        p._insertElement(token, NS.HTML);\r\n        p.insertionMode = InsertionMode.BEFORE_HEAD;\r\n    }\r\n    else {\r\n        tokenBeforeHtml(p, token);\r\n    }\r\n}\r\nfunction endTagBeforeHtml(p, token) {\r\n    const tn = token.tagID;\r\n    if (tn === $.HTML || tn === $.HEAD || tn === $.BODY || tn === $.BR) {\r\n        tokenBeforeHtml(p, token);\r\n    }\r\n}\r\nfunction tokenBeforeHtml(p, token) {\r\n    p._insertFakeRootElement();\r\n    p.insertionMode = InsertionMode.BEFORE_HEAD;\r\n    p._processToken(token);\r\n}\r\n// The \"before head\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagBeforeHead(p, token) {\r\n    switch (token.tagID) {\r\n        case $.HTML: {\r\n            startTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.HEAD: {\r\n            p._insertElement(token, NS.HTML);\r\n            p.headElement = p.openElements.current;\r\n            p.insertionMode = InsertionMode.IN_HEAD;\r\n            break;\r\n        }\r\n        default: {\r\n            tokenBeforeHead(p, token);\r\n        }\r\n    }\r\n}\r\nfunction endTagBeforeHead(p, token) {\r\n    const tn = token.tagID;\r\n    if (tn === $.HEAD || tn === $.BODY || tn === $.HTML || tn === $.BR) {\r\n        tokenBeforeHead(p, token);\r\n    }\r\n    else {\r\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\r\n    }\r\n}\r\nfunction tokenBeforeHead(p, token) {\r\n    p._insertFakeElement(TN.HEAD, $.HEAD);\r\n    p.headElement = p.openElements.current;\r\n    p.insertionMode = InsertionMode.IN_HEAD;\r\n    p._processToken(token);\r\n}\r\n// The \"in head\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagInHead(p, token) {\r\n    switch (token.tagID) {\r\n        case $.HTML: {\r\n            startTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.BASE:\r\n        case $.BASEFONT:\r\n        case $.BGSOUND:\r\n        case $.LINK:\r\n        case $.META: {\r\n            p._appendElement(token, NS.HTML);\r\n            token.ackSelfClosing = true;\r\n            break;\r\n        }\r\n        case $.TITLE: {\r\n            p._switchToTextParsing(token, TokenizerMode.RCDATA);\r\n            break;\r\n        }\r\n        case $.NOSCRIPT: {\r\n            if (p.options.scriptingEnabled) {\r\n                p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\r\n            }\r\n            else {\r\n                p._insertElement(token, NS.HTML);\r\n                p.insertionMode = InsertionMode.IN_HEAD_NO_SCRIPT;\r\n            }\r\n            break;\r\n        }\r\n        case $.NOFRAMES:\r\n        case $.STYLE: {\r\n            p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\r\n            break;\r\n        }\r\n        case $.SCRIPT: {\r\n            p._switchToTextParsing(token, TokenizerMode.SCRIPT_DATA);\r\n            break;\r\n        }\r\n        case $.TEMPLATE: {\r\n            p._insertTemplate(token);\r\n            p.activeFormattingElements.insertMarker();\r\n            p.framesetOk = false;\r\n            p.insertionMode = InsertionMode.IN_TEMPLATE;\r\n            p.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\r\n            break;\r\n        }\r\n        case $.HEAD: {\r\n            p._err(token, ERR.misplacedStartTagForHeadElement);\r\n            break;\r\n        }\r\n        default: {\r\n            tokenInHead(p, token);\r\n        }\r\n    }\r\n}\r\nfunction endTagInHead(p, token) {\r\n    switch (token.tagID) {\r\n        case $.HEAD: {\r\n            p.openElements.pop();\r\n            p.insertionMode = InsertionMode.AFTER_HEAD;\r\n            break;\r\n        }\r\n        case $.BODY:\r\n        case $.BR:\r\n        case $.HTML: {\r\n            tokenInHead(p, token);\r\n            break;\r\n        }\r\n        case $.TEMPLATE: {\r\n            templateEndTagInHead(p, token);\r\n            break;\r\n        }\r\n        default: {\r\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\r\n        }\r\n    }\r\n}\r\nfunction templateEndTagInHead(p, token) {\r\n    if (p.openElements.tmplCount > 0) {\r\n        p.openElements.generateImpliedEndTagsThoroughly();\r\n        if (p.openElements.currentTagId !== $.TEMPLATE) {\r\n            p._err(token, ERR.closingOfElementWithOpenChildElements);\r\n        }\r\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\r\n        p.activeFormattingElements.clearToLastMarker();\r\n        p.tmplInsertionModeStack.shift();\r\n        p._resetInsertionMode();\r\n    }\r\n    else {\r\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\r\n    }\r\n}\r\nfunction tokenInHead(p, token) {\r\n    p.openElements.pop();\r\n    p.insertionMode = InsertionMode.AFTER_HEAD;\r\n    p._processToken(token);\r\n}\r\n// The \"in head no script\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagInHeadNoScript(p, token) {\r\n    switch (token.tagID) {\r\n        case $.HTML: {\r\n            startTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.BASEFONT:\r\n        case $.BGSOUND:\r\n        case $.HEAD:\r\n        case $.LINK:\r\n        case $.META:\r\n        case $.NOFRAMES:\r\n        case $.STYLE: {\r\n            startTagInHead(p, token);\r\n            break;\r\n        }\r\n        case $.NOSCRIPT: {\r\n            p._err(token, ERR.nestedNoscriptInHead);\r\n            break;\r\n        }\r\n        default: {\r\n            tokenInHeadNoScript(p, token);\r\n        }\r\n    }\r\n}\r\nfunction endTagInHeadNoScript(p, token) {\r\n    switch (token.tagID) {\r\n        case $.NOSCRIPT: {\r\n            p.openElements.pop();\r\n            p.insertionMode = InsertionMode.IN_HEAD;\r\n            break;\r\n        }\r\n        case $.BR: {\r\n            tokenInHeadNoScript(p, token);\r\n            break;\r\n        }\r\n        default: {\r\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\r\n        }\r\n    }\r\n}\r\nfunction tokenInHeadNoScript(p, token) {\r\n    const errCode = token.type === TokenType.EOF ? ERR.openElementsLeftAfterEof : ERR.disallowedContentInNoscriptInHead;\r\n    p._err(token, errCode);\r\n    p.openElements.pop();\r\n    p.insertionMode = InsertionMode.IN_HEAD;\r\n    p._processToken(token);\r\n}\r\n// The \"after head\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagAfterHead(p, token) {\r\n    switch (token.tagID) {\r\n        case $.HTML: {\r\n            startTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.BODY: {\r\n            p._insertElement(token, NS.HTML);\r\n            p.framesetOk = false;\r\n            p.insertionMode = InsertionMode.IN_BODY;\r\n            break;\r\n        }\r\n        case $.FRAMESET: {\r\n            p._insertElement(token, NS.HTML);\r\n            p.insertionMode = InsertionMode.IN_FRAMESET;\r\n            break;\r\n        }\r\n        case $.BASE:\r\n        case $.BASEFONT:\r\n        case $.BGSOUND:\r\n        case $.LINK:\r\n        case $.META:\r\n        case $.NOFRAMES:\r\n        case $.SCRIPT:\r\n        case $.STYLE:\r\n        case $.TEMPLATE:\r\n        case $.TITLE: {\r\n            p._err(token, ERR.abandonedHeadElementChild);\r\n            p.openElements.push(p.headElement, $.HEAD);\r\n            startTagInHead(p, token);\r\n            p.openElements.remove(p.headElement);\r\n            break;\r\n        }\r\n        case $.HEAD: {\r\n            p._err(token, ERR.misplacedStartTagForHeadElement);\r\n            break;\r\n        }\r\n        default: {\r\n            tokenAfterHead(p, token);\r\n        }\r\n    }\r\n}\r\nfunction endTagAfterHead(p, token) {\r\n    switch (token.tagID) {\r\n        case $.BODY:\r\n        case $.HTML:\r\n        case $.BR: {\r\n            tokenAfterHead(p, token);\r\n            break;\r\n        }\r\n        case $.TEMPLATE: {\r\n            templateEndTagInHead(p, token);\r\n            break;\r\n        }\r\n        default: {\r\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\r\n        }\r\n    }\r\n}\r\nfunction tokenAfterHead(p, token) {\r\n    p._insertFakeElement(TN.BODY, $.BODY);\r\n    p.insertionMode = InsertionMode.IN_BODY;\r\n    modeInBody(p, token);\r\n}\r\n// The \"in body\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction modeInBody(p, token) {\r\n    switch (token.type) {\r\n        case TokenType.CHARACTER: {\r\n            characterInBody(p, token);\r\n            break;\r\n        }\r\n        case TokenType.WHITESPACE_CHARACTER: {\r\n            whitespaceCharacterInBody(p, token);\r\n            break;\r\n        }\r\n        case TokenType.COMMENT: {\r\n            appendComment(p, token);\r\n            break;\r\n        }\r\n        case TokenType.START_TAG: {\r\n            startTagInBody(p, token);\r\n            break;\r\n        }\r\n        case TokenType.END_TAG: {\r\n            endTagInBody(p, token);\r\n            break;\r\n        }\r\n        case TokenType.EOF: {\r\n            eofInBody(p, token);\r\n            break;\r\n        }\r\n        default:\r\n        // Do nothing\r\n    }\r\n}\r\nfunction whitespaceCharacterInBody(p, token) {\r\n    p._reconstructActiveFormattingElements();\r\n    p._insertCharacters(token);\r\n}\r\nfunction characterInBody(p, token) {\r\n    p._reconstructActiveFormattingElements();\r\n    p._insertCharacters(token);\r\n    p.framesetOk = false;\r\n}\r\nfunction htmlStartTagInBody(p, token) {\r\n    if (p.openElements.tmplCount === 0) {\r\n        p.treeAdapter.adoptAttributes(p.openElements.items[0], token.attrs);\r\n    }\r\n}\r\nfunction bodyStartTagInBody(p, token) {\r\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\r\n    if (bodyElement && p.openElements.tmplCount === 0) {\r\n        p.framesetOk = false;\r\n        p.treeAdapter.adoptAttributes(bodyElement, token.attrs);\r\n    }\r\n}\r\nfunction framesetStartTagInBody(p, token) {\r\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\r\n    if (p.framesetOk && bodyElement) {\r\n        p.treeAdapter.detachNode(bodyElement);\r\n        p.openElements.popAllUpToHtmlElement();\r\n        p._insertElement(token, NS.HTML);\r\n        p.insertionMode = InsertionMode.IN_FRAMESET;\r\n    }\r\n}\r\nfunction addressStartTagInBody(p, token) {\r\n    if (p.openElements.hasInButtonScope($.P)) {\r\n        p._closePElement();\r\n    }\r\n    p._insertElement(token, NS.HTML);\r\n}\r\nfunction numberedHeaderStartTagInBody(p, token) {\r\n    if (p.openElements.hasInButtonScope($.P)) {\r\n        p._closePElement();\r\n    }\r\n    if (NUMBERED_HEADERS.has(p.openElements.currentTagId)) {\r\n        p.openElements.pop();\r\n    }\r\n    p._insertElement(token, NS.HTML);\r\n}\r\nfunction preStartTagInBody(p, token) {\r\n    if (p.openElements.hasInButtonScope($.P)) {\r\n        p._closePElement();\r\n    }\r\n    p._insertElement(token, NS.HTML);\r\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\r\n    //on to the next one. (Newlines at the start of pre blocks are ignored as an authoring convenience.)\r\n    p.skipNextNewLine = true;\r\n    p.framesetOk = false;\r\n}\r\nfunction formStartTagInBody(p, token) {\r\n    const inTemplate = p.openElements.tmplCount > 0;\r\n    if (!p.formElement || inTemplate) {\r\n        if (p.openElements.hasInButtonScope($.P)) {\r\n            p._closePElement();\r\n        }\r\n        p._insertElement(token, NS.HTML);\r\n        if (!inTemplate) {\r\n            p.formElement = p.openElements.current;\r\n        }\r\n    }\r\n}\r\nfunction listItemStartTagInBody(p, token) {\r\n    p.framesetOk = false;\r\n    const tn = token.tagID;\r\n    for (let i = p.openElements.stackTop; i >= 0; i--) {\r\n        const elementId = p.openElements.tagIDs[i];\r\n        if ((tn === $.LI && elementId === $.LI) ||\r\n            ((tn === $.DD || tn === $.DT) && (elementId === $.DD || elementId === $.DT))) {\r\n            p.openElements.generateImpliedEndTagsWithExclusion(elementId);\r\n            p.openElements.popUntilTagNamePopped(elementId);\r\n            break;\r\n        }\r\n        if (elementId !== $.ADDRESS &&\r\n            elementId !== $.DIV &&\r\n            elementId !== $.P &&\r\n            p._isSpecialElement(p.openElements.items[i], elementId)) {\r\n            break;\r\n        }\r\n    }\r\n    if (p.openElements.hasInButtonScope($.P)) {\r\n        p._closePElement();\r\n    }\r\n    p._insertElement(token, NS.HTML);\r\n}\r\nfunction plaintextStartTagInBody(p, token) {\r\n    if (p.openElements.hasInButtonScope($.P)) {\r\n        p._closePElement();\r\n    }\r\n    p._insertElement(token, NS.HTML);\r\n    p.tokenizer.state = TokenizerMode.PLAINTEXT;\r\n}\r\nfunction buttonStartTagInBody(p, token) {\r\n    if (p.openElements.hasInScope($.BUTTON)) {\r\n        p.openElements.generateImpliedEndTags();\r\n        p.openElements.popUntilTagNamePopped($.BUTTON);\r\n    }\r\n    p._reconstructActiveFormattingElements();\r\n    p._insertElement(token, NS.HTML);\r\n    p.framesetOk = false;\r\n}\r\nfunction aStartTagInBody(p, token) {\r\n    const activeElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(TN.A);\r\n    if (activeElementEntry) {\r\n        callAdoptionAgency(p, token);\r\n        p.openElements.remove(activeElementEntry.element);\r\n        p.activeFormattingElements.removeEntry(activeElementEntry);\r\n    }\r\n    p._reconstructActiveFormattingElements();\r\n    p._insertElement(token, NS.HTML);\r\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\r\n}\r\nfunction bStartTagInBody(p, token) {\r\n    p._reconstructActiveFormattingElements();\r\n    p._insertElement(token, NS.HTML);\r\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\r\n}\r\nfunction nobrStartTagInBody(p, token) {\r\n    p._reconstructActiveFormattingElements();\r\n    if (p.openElements.hasInScope($.NOBR)) {\r\n        callAdoptionAgency(p, token);\r\n        p._reconstructActiveFormattingElements();\r\n    }\r\n    p._insertElement(token, NS.HTML);\r\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\r\n}\r\nfunction appletStartTagInBody(p, token) {\r\n    p._reconstructActiveFormattingElements();\r\n    p._insertElement(token, NS.HTML);\r\n    p.activeFormattingElements.insertMarker();\r\n    p.framesetOk = false;\r\n}\r\nfunction tableStartTagInBody(p, token) {\r\n    if (p.treeAdapter.getDocumentMode(p.document) !== DOCUMENT_MODE.QUIRKS && p.openElements.hasInButtonScope($.P)) {\r\n        p._closePElement();\r\n    }\r\n    p._insertElement(token, NS.HTML);\r\n    p.framesetOk = false;\r\n    p.insertionMode = InsertionMode.IN_TABLE;\r\n}\r\nfunction areaStartTagInBody(p, token) {\r\n    p._reconstructActiveFormattingElements();\r\n    p._appendElement(token, NS.HTML);\r\n    p.framesetOk = false;\r\n    token.ackSelfClosing = true;\r\n}\r\nfunction isHiddenInput(token) {\r\n    const inputType = getTokenAttr(token, ATTRS.TYPE);\r\n    return inputType != null && inputType.toLowerCase() === HIDDEN_INPUT_TYPE;\r\n}\r\nfunction inputStartTagInBody(p, token) {\r\n    p._reconstructActiveFormattingElements();\r\n    p._appendElement(token, NS.HTML);\r\n    if (!isHiddenInput(token)) {\r\n        p.framesetOk = false;\r\n    }\r\n    token.ackSelfClosing = true;\r\n}\r\nfunction paramStartTagInBody(p, token) {\r\n    p._appendElement(token, NS.HTML);\r\n    token.ackSelfClosing = true;\r\n}\r\nfunction hrStartTagInBody(p, token) {\r\n    if (p.openElements.hasInButtonScope($.P)) {\r\n        p._closePElement();\r\n    }\r\n    p._appendElement(token, NS.HTML);\r\n    p.framesetOk = false;\r\n    token.ackSelfClosing = true;\r\n}\r\nfunction imageStartTagInBody(p, token) {\r\n    token.tagName = TN.IMG;\r\n    token.tagID = $.IMG;\r\n    areaStartTagInBody(p, token);\r\n}\r\nfunction textareaStartTagInBody(p, token) {\r\n    p._insertElement(token, NS.HTML);\r\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\r\n    //on to the next one. (Newlines at the start of textarea elements are ignored as an authoring convenience.)\r\n    p.skipNextNewLine = true;\r\n    p.tokenizer.state = TokenizerMode.RCDATA;\r\n    p.originalInsertionMode = p.insertionMode;\r\n    p.framesetOk = false;\r\n    p.insertionMode = InsertionMode.TEXT;\r\n}\r\nfunction xmpStartTagInBody(p, token) {\r\n    if (p.openElements.hasInButtonScope($.P)) {\r\n        p._closePElement();\r\n    }\r\n    p._reconstructActiveFormattingElements();\r\n    p.framesetOk = false;\r\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\r\n}\r\nfunction iframeStartTagInBody(p, token) {\r\n    p.framesetOk = false;\r\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\r\n}\r\n//NOTE: here we assume that we always act as a user agent with enabled plugins/frames, so we parse\r\n//<noembed>/<noframes> as rawtext.\r\nfunction rawTextStartTagInBody(p, token) {\r\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\r\n}\r\nfunction selectStartTagInBody(p, token) {\r\n    p._reconstructActiveFormattingElements();\r\n    p._insertElement(token, NS.HTML);\r\n    p.framesetOk = false;\r\n    p.insertionMode =\r\n        p.insertionMode === InsertionMode.IN_TABLE ||\r\n            p.insertionMode === InsertionMode.IN_CAPTION ||\r\n            p.insertionMode === InsertionMode.IN_TABLE_BODY ||\r\n            p.insertionMode === InsertionMode.IN_ROW ||\r\n            p.insertionMode === InsertionMode.IN_CELL\r\n            ? InsertionMode.IN_SELECT_IN_TABLE\r\n            : InsertionMode.IN_SELECT;\r\n}\r\nfunction optgroupStartTagInBody(p, token) {\r\n    if (p.openElements.currentTagId === $.OPTION) {\r\n        p.openElements.pop();\r\n    }\r\n    p._reconstructActiveFormattingElements();\r\n    p._insertElement(token, NS.HTML);\r\n}\r\nfunction rbStartTagInBody(p, token) {\r\n    if (p.openElements.hasInScope($.RUBY)) {\r\n        p.openElements.generateImpliedEndTags();\r\n    }\r\n    p._insertElement(token, NS.HTML);\r\n}\r\nfunction rtStartTagInBody(p, token) {\r\n    if (p.openElements.hasInScope($.RUBY)) {\r\n        p.openElements.generateImpliedEndTagsWithExclusion($.RTC);\r\n    }\r\n    p._insertElement(token, NS.HTML);\r\n}\r\nfunction mathStartTagInBody(p, token) {\r\n    p._reconstructActiveFormattingElements();\r\n    foreignContent.adjustTokenMathMLAttrs(token);\r\n    foreignContent.adjustTokenXMLAttrs(token);\r\n    if (token.selfClosing) {\r\n        p._appendElement(token, NS.MATHML);\r\n    }\r\n    else {\r\n        p._insertElement(token, NS.MATHML);\r\n    }\r\n    token.ackSelfClosing = true;\r\n}\r\nfunction svgStartTagInBody(p, token) {\r\n    p._reconstructActiveFormattingElements();\r\n    foreignContent.adjustTokenSVGAttrs(token);\r\n    foreignContent.adjustTokenXMLAttrs(token);\r\n    if (token.selfClosing) {\r\n        p._appendElement(token, NS.SVG);\r\n    }\r\n    else {\r\n        p._insertElement(token, NS.SVG);\r\n    }\r\n    token.ackSelfClosing = true;\r\n}\r\nfunction genericStartTagInBody(p, token) {\r\n    p._reconstructActiveFormattingElements();\r\n    p._insertElement(token, NS.HTML);\r\n}\r\nfunction startTagInBody(p, token) {\r\n    switch (token.tagID) {\r\n        case $.I:\r\n        case $.S:\r\n        case $.B:\r\n        case $.U:\r\n        case $.EM:\r\n        case $.TT:\r\n        case $.BIG:\r\n        case $.CODE:\r\n        case $.FONT:\r\n        case $.SMALL:\r\n        case $.STRIKE:\r\n        case $.STRONG: {\r\n            bStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.A: {\r\n            aStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.H1:\r\n        case $.H2:\r\n        case $.H3:\r\n        case $.H4:\r\n        case $.H5:\r\n        case $.H6: {\r\n            numberedHeaderStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.P:\r\n        case $.DL:\r\n        case $.OL:\r\n        case $.UL:\r\n        case $.DIV:\r\n        case $.DIR:\r\n        case $.NAV:\r\n        case $.MAIN:\r\n        case $.MENU:\r\n        case $.ASIDE:\r\n        case $.CENTER:\r\n        case $.FIGURE:\r\n        case $.FOOTER:\r\n        case $.HEADER:\r\n        case $.HGROUP:\r\n        case $.DIALOG:\r\n        case $.DETAILS:\r\n        case $.ADDRESS:\r\n        case $.ARTICLE:\r\n        case $.SEARCH:\r\n        case $.SECTION:\r\n        case $.SUMMARY:\r\n        case $.FIELDSET:\r\n        case $.BLOCKQUOTE:\r\n        case $.FIGCAPTION: {\r\n            addressStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.LI:\r\n        case $.DD:\r\n        case $.DT: {\r\n            listItemStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.BR:\r\n        case $.IMG:\r\n        case $.WBR:\r\n        case $.AREA:\r\n        case $.EMBED:\r\n        case $.KEYGEN: {\r\n            areaStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.HR: {\r\n            hrStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.RB:\r\n        case $.RTC: {\r\n            rbStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.RT:\r\n        case $.RP: {\r\n            rtStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.PRE:\r\n        case $.LISTING: {\r\n            preStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.XMP: {\r\n            xmpStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.SVG: {\r\n            svgStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.HTML: {\r\n            htmlStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.BASE:\r\n        case $.LINK:\r\n        case $.META:\r\n        case $.STYLE:\r\n        case $.TITLE:\r\n        case $.SCRIPT:\r\n        case $.BGSOUND:\r\n        case $.BASEFONT:\r\n        case $.TEMPLATE: {\r\n            startTagInHead(p, token);\r\n            break;\r\n        }\r\n        case $.BODY: {\r\n            bodyStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.FORM: {\r\n            formStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.NOBR: {\r\n            nobrStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.MATH: {\r\n            mathStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.TABLE: {\r\n            tableStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.INPUT: {\r\n            inputStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.PARAM:\r\n        case $.TRACK:\r\n        case $.SOURCE: {\r\n            paramStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.IMAGE: {\r\n            imageStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.BUTTON: {\r\n            buttonStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.APPLET:\r\n        case $.OBJECT:\r\n        case $.MARQUEE: {\r\n            appletStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.IFRAME: {\r\n            iframeStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.SELECT: {\r\n            selectStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.OPTION:\r\n        case $.OPTGROUP: {\r\n            optgroupStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.NOEMBED:\r\n        case $.NOFRAMES: {\r\n            rawTextStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.FRAMESET: {\r\n            framesetStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.TEXTAREA: {\r\n            textareaStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.NOSCRIPT: {\r\n            if (p.options.scriptingEnabled) {\r\n                rawTextStartTagInBody(p, token);\r\n            }\r\n            else {\r\n                genericStartTagInBody(p, token);\r\n            }\r\n            break;\r\n        }\r\n        case $.PLAINTEXT: {\r\n            plaintextStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.COL:\r\n        case $.TH:\r\n        case $.TD:\r\n        case $.TR:\r\n        case $.HEAD:\r\n        case $.FRAME:\r\n        case $.TBODY:\r\n        case $.TFOOT:\r\n        case $.THEAD:\r\n        case $.CAPTION:\r\n        case $.COLGROUP: {\r\n            // Ignore token\r\n            break;\r\n        }\r\n        default: {\r\n            genericStartTagInBody(p, token);\r\n        }\r\n    }\r\n}\r\nfunction bodyEndTagInBody(p, token) {\r\n    if (p.openElements.hasInScope($.BODY)) {\r\n        p.insertionMode = InsertionMode.AFTER_BODY;\r\n        //NOTE: <body> is never popped from the stack, so we need to updated\r\n        //the end location explicitly.\r\n        if (p.options.sourceCodeLocationInfo) {\r\n            const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\r\n            if (bodyElement) {\r\n                p._setEndLocation(bodyElement, token);\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction htmlEndTagInBody(p, token) {\r\n    if (p.openElements.hasInScope($.BODY)) {\r\n        p.insertionMode = InsertionMode.AFTER_BODY;\r\n        endTagAfterBody(p, token);\r\n    }\r\n}\r\nfunction addressEndTagInBody(p, token) {\r\n    const tn = token.tagID;\r\n    if (p.openElements.hasInScope(tn)) {\r\n        p.openElements.generateImpliedEndTags();\r\n        p.openElements.popUntilTagNamePopped(tn);\r\n    }\r\n}\r\nfunction formEndTagInBody(p) {\r\n    const inTemplate = p.openElements.tmplCount > 0;\r\n    const { formElement } = p;\r\n    if (!inTemplate) {\r\n        p.formElement = null;\r\n    }\r\n    if ((formElement || inTemplate) && p.openElements.hasInScope($.FORM)) {\r\n        p.openElements.generateImpliedEndTags();\r\n        if (inTemplate) {\r\n            p.openElements.popUntilTagNamePopped($.FORM);\r\n        }\r\n        else if (formElement) {\r\n            p.openElements.remove(formElement);\r\n        }\r\n    }\r\n}\r\nfunction pEndTagInBody(p) {\r\n    if (!p.openElements.hasInButtonScope($.P)) {\r\n        p._insertFakeElement(TN.P, $.P);\r\n    }\r\n    p._closePElement();\r\n}\r\nfunction liEndTagInBody(p) {\r\n    if (p.openElements.hasInListItemScope($.LI)) {\r\n        p.openElements.generateImpliedEndTagsWithExclusion($.LI);\r\n        p.openElements.popUntilTagNamePopped($.LI);\r\n    }\r\n}\r\nfunction ddEndTagInBody(p, token) {\r\n    const tn = token.tagID;\r\n    if (p.openElements.hasInScope(tn)) {\r\n        p.openElements.generateImpliedEndTagsWithExclusion(tn);\r\n        p.openElements.popUntilTagNamePopped(tn);\r\n    }\r\n}\r\nfunction numberedHeaderEndTagInBody(p) {\r\n    if (p.openElements.hasNumberedHeaderInScope()) {\r\n        p.openElements.generateImpliedEndTags();\r\n        p.openElements.popUntilNumberedHeaderPopped();\r\n    }\r\n}\r\nfunction appletEndTagInBody(p, token) {\r\n    const tn = token.tagID;\r\n    if (p.openElements.hasInScope(tn)) {\r\n        p.openElements.generateImpliedEndTags();\r\n        p.openElements.popUntilTagNamePopped(tn);\r\n        p.activeFormattingElements.clearToLastMarker();\r\n    }\r\n}\r\nfunction brEndTagInBody(p) {\r\n    p._reconstructActiveFormattingElements();\r\n    p._insertFakeElement(TN.BR, $.BR);\r\n    p.openElements.pop();\r\n    p.framesetOk = false;\r\n}\r\nfunction genericEndTagInBody(p, token) {\r\n    const tn = token.tagName;\r\n    const tid = token.tagID;\r\n    for (let i = p.openElements.stackTop; i > 0; i--) {\r\n        const element = p.openElements.items[i];\r\n        const elementId = p.openElements.tagIDs[i];\r\n        // Compare the tag name here, as the tag might not be a known tag with an ID.\r\n        if (tid === elementId && (tid !== $.UNKNOWN || p.treeAdapter.getTagName(element) === tn)) {\r\n            p.openElements.generateImpliedEndTagsWithExclusion(tid);\r\n            if (p.openElements.stackTop >= i)\r\n                p.openElements.shortenToLength(i);\r\n            break;\r\n        }\r\n        if (p._isSpecialElement(element, elementId)) {\r\n            break;\r\n        }\r\n    }\r\n}\r\nfunction endTagInBody(p, token) {\r\n    switch (token.tagID) {\r\n        case $.A:\r\n        case $.B:\r\n        case $.I:\r\n        case $.S:\r\n        case $.U:\r\n        case $.EM:\r\n        case $.TT:\r\n        case $.BIG:\r\n        case $.CODE:\r\n        case $.FONT:\r\n        case $.NOBR:\r\n        case $.SMALL:\r\n        case $.STRIKE:\r\n        case $.STRONG: {\r\n            callAdoptionAgency(p, token);\r\n            break;\r\n        }\r\n        case $.P: {\r\n            pEndTagInBody(p);\r\n            break;\r\n        }\r\n        case $.DL:\r\n        case $.UL:\r\n        case $.OL:\r\n        case $.DIR:\r\n        case $.DIV:\r\n        case $.NAV:\r\n        case $.PRE:\r\n        case $.MAIN:\r\n        case $.MENU:\r\n        case $.ASIDE:\r\n        case $.BUTTON:\r\n        case $.CENTER:\r\n        case $.FIGURE:\r\n        case $.FOOTER:\r\n        case $.HEADER:\r\n        case $.HGROUP:\r\n        case $.DIALOG:\r\n        case $.ADDRESS:\r\n        case $.ARTICLE:\r\n        case $.DETAILS:\r\n        case $.SEARCH:\r\n        case $.SECTION:\r\n        case $.SUMMARY:\r\n        case $.LISTING:\r\n        case $.FIELDSET:\r\n        case $.BLOCKQUOTE:\r\n        case $.FIGCAPTION: {\r\n            addressEndTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.LI: {\r\n            liEndTagInBody(p);\r\n            break;\r\n        }\r\n        case $.DD:\r\n        case $.DT: {\r\n            ddEndTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.H1:\r\n        case $.H2:\r\n        case $.H3:\r\n        case $.H4:\r\n        case $.H5:\r\n        case $.H6: {\r\n            numberedHeaderEndTagInBody(p);\r\n            break;\r\n        }\r\n        case $.BR: {\r\n            brEndTagInBody(p);\r\n            break;\r\n        }\r\n        case $.BODY: {\r\n            bodyEndTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.HTML: {\r\n            htmlEndTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.FORM: {\r\n            formEndTagInBody(p);\r\n            break;\r\n        }\r\n        case $.APPLET:\r\n        case $.OBJECT:\r\n        case $.MARQUEE: {\r\n            appletEndTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.TEMPLATE: {\r\n            templateEndTagInHead(p, token);\r\n            break;\r\n        }\r\n        default: {\r\n            genericEndTagInBody(p, token);\r\n        }\r\n    }\r\n}\r\nfunction eofInBody(p, token) {\r\n    if (p.tmplInsertionModeStack.length > 0) {\r\n        eofInTemplate(p, token);\r\n    }\r\n    else {\r\n        stopParsing(p, token);\r\n    }\r\n}\r\n// The \"text\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction endTagInText(p, token) {\r\n    var _a;\r\n    if (token.tagID === $.SCRIPT) {\r\n        (_a = p.scriptHandler) === null || _a === void 0 ? void 0 : _a.call(p, p.openElements.current);\r\n    }\r\n    p.openElements.pop();\r\n    p.insertionMode = p.originalInsertionMode;\r\n}\r\nfunction eofInText(p, token) {\r\n    p._err(token, ERR.eofInElementThatCanContainOnlyText);\r\n    p.openElements.pop();\r\n    p.insertionMode = p.originalInsertionMode;\r\n    p.onEof(token);\r\n}\r\n// The \"in table\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction characterInTable(p, token) {\r\n    if (TABLE_STRUCTURE_TAGS.has(p.openElements.currentTagId)) {\r\n        p.pendingCharacterTokens.length = 0;\r\n        p.hasNonWhitespacePendingCharacterToken = false;\r\n        p.originalInsertionMode = p.insertionMode;\r\n        p.insertionMode = InsertionMode.IN_TABLE_TEXT;\r\n        switch (token.type) {\r\n            case TokenType.CHARACTER: {\r\n                characterInTableText(p, token);\r\n                break;\r\n            }\r\n            case TokenType.WHITESPACE_CHARACTER: {\r\n                whitespaceCharacterInTableText(p, token);\r\n                break;\r\n            }\r\n            // Ignore null\r\n        }\r\n    }\r\n    else {\r\n        tokenInTable(p, token);\r\n    }\r\n}\r\nfunction captionStartTagInTable(p, token) {\r\n    p.openElements.clearBackToTableContext();\r\n    p.activeFormattingElements.insertMarker();\r\n    p._insertElement(token, NS.HTML);\r\n    p.insertionMode = InsertionMode.IN_CAPTION;\r\n}\r\nfunction colgroupStartTagInTable(p, token) {\r\n    p.openElements.clearBackToTableContext();\r\n    p._insertElement(token, NS.HTML);\r\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\r\n}\r\nfunction colStartTagInTable(p, token) {\r\n    p.openElements.clearBackToTableContext();\r\n    p._insertFakeElement(TN.COLGROUP, $.COLGROUP);\r\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\r\n    startTagInColumnGroup(p, token);\r\n}\r\nfunction tbodyStartTagInTable(p, token) {\r\n    p.openElements.clearBackToTableContext();\r\n    p._insertElement(token, NS.HTML);\r\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\r\n}\r\nfunction tdStartTagInTable(p, token) {\r\n    p.openElements.clearBackToTableContext();\r\n    p._insertFakeElement(TN.TBODY, $.TBODY);\r\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\r\n    startTagInTableBody(p, token);\r\n}\r\nfunction tableStartTagInTable(p, token) {\r\n    if (p.openElements.hasInTableScope($.TABLE)) {\r\n        p.openElements.popUntilTagNamePopped($.TABLE);\r\n        p._resetInsertionMode();\r\n        p._processStartTag(token);\r\n    }\r\n}\r\nfunction inputStartTagInTable(p, token) {\r\n    if (isHiddenInput(token)) {\r\n        p._appendElement(token, NS.HTML);\r\n    }\r\n    else {\r\n        tokenInTable(p, token);\r\n    }\r\n    token.ackSelfClosing = true;\r\n}\r\nfunction formStartTagInTable(p, token) {\r\n    if (!p.formElement && p.openElements.tmplCount === 0) {\r\n        p._insertElement(token, NS.HTML);\r\n        p.formElement = p.openElements.current;\r\n        p.openElements.pop();\r\n    }\r\n}\r\nfunction startTagInTable(p, token) {\r\n    switch (token.tagID) {\r\n        case $.TD:\r\n        case $.TH:\r\n        case $.TR: {\r\n            tdStartTagInTable(p, token);\r\n            break;\r\n        }\r\n        case $.STYLE:\r\n        case $.SCRIPT:\r\n        case $.TEMPLATE: {\r\n            startTagInHead(p, token);\r\n            break;\r\n        }\r\n        case $.COL: {\r\n            colStartTagInTable(p, token);\r\n            break;\r\n        }\r\n        case $.FORM: {\r\n            formStartTagInTable(p, token);\r\n            break;\r\n        }\r\n        case $.TABLE: {\r\n            tableStartTagInTable(p, token);\r\n            break;\r\n        }\r\n        case $.TBODY:\r\n        case $.TFOOT:\r\n        case $.THEAD: {\r\n            tbodyStartTagInTable(p, token);\r\n            break;\r\n        }\r\n        case $.INPUT: {\r\n            inputStartTagInTable(p, token);\r\n            break;\r\n        }\r\n        case $.CAPTION: {\r\n            captionStartTagInTable(p, token);\r\n            break;\r\n        }\r\n        case $.COLGROUP: {\r\n            colgroupStartTagInTable(p, token);\r\n            break;\r\n        }\r\n        default: {\r\n            tokenInTable(p, token);\r\n        }\r\n    }\r\n}\r\nfunction endTagInTable(p, token) {\r\n    switch (token.tagID) {\r\n        case $.TABLE: {\r\n            if (p.openElements.hasInTableScope($.TABLE)) {\r\n                p.openElements.popUntilTagNamePopped($.TABLE);\r\n                p._resetInsertionMode();\r\n            }\r\n            break;\r\n        }\r\n        case $.TEMPLATE: {\r\n            templateEndTagInHead(p, token);\r\n            break;\r\n        }\r\n        case $.BODY:\r\n        case $.CAPTION:\r\n        case $.COL:\r\n        case $.COLGROUP:\r\n        case $.HTML:\r\n        case $.TBODY:\r\n        case $.TD:\r\n        case $.TFOOT:\r\n        case $.TH:\r\n        case $.THEAD:\r\n        case $.TR: {\r\n            // Ignore token\r\n            break;\r\n        }\r\n        default: {\r\n            tokenInTable(p, token);\r\n        }\r\n    }\r\n}\r\nfunction tokenInTable(p, token) {\r\n    const savedFosterParentingState = p.fosterParentingEnabled;\r\n    p.fosterParentingEnabled = true;\r\n    // Process token in `In Body` mode\r\n    modeInBody(p, token);\r\n    p.fosterParentingEnabled = savedFosterParentingState;\r\n}\r\n// The \"in table text\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction whitespaceCharacterInTableText(p, token) {\r\n    p.pendingCharacterTokens.push(token);\r\n}\r\nfunction characterInTableText(p, token) {\r\n    p.pendingCharacterTokens.push(token);\r\n    p.hasNonWhitespacePendingCharacterToken = true;\r\n}\r\nfunction tokenInTableText(p, token) {\r\n    let i = 0;\r\n    if (p.hasNonWhitespacePendingCharacterToken) {\r\n        for (; i < p.pendingCharacterTokens.length; i++) {\r\n            tokenInTable(p, p.pendingCharacterTokens[i]);\r\n        }\r\n    }\r\n    else {\r\n        for (; i < p.pendingCharacterTokens.length; i++) {\r\n            p._insertCharacters(p.pendingCharacterTokens[i]);\r\n        }\r\n    }\r\n    p.insertionMode = p.originalInsertionMode;\r\n    p._processToken(token);\r\n}\r\n// The \"in caption\" insertion mode\r\n//------------------------------------------------------------------\r\nconst TABLE_VOID_ELEMENTS = new Set([$.CAPTION, $.COL, $.COLGROUP, $.TBODY, $.TD, $.TFOOT, $.TH, $.THEAD, $.TR]);\r\nfunction startTagInCaption(p, token) {\r\n    const tn = token.tagID;\r\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\r\n        if (p.openElements.hasInTableScope($.CAPTION)) {\r\n            p.openElements.generateImpliedEndTags();\r\n            p.openElements.popUntilTagNamePopped($.CAPTION);\r\n            p.activeFormattingElements.clearToLastMarker();\r\n            p.insertionMode = InsertionMode.IN_TABLE;\r\n            startTagInTable(p, token);\r\n        }\r\n    }\r\n    else {\r\n        startTagInBody(p, token);\r\n    }\r\n}\r\nfunction endTagInCaption(p, token) {\r\n    const tn = token.tagID;\r\n    switch (tn) {\r\n        case $.CAPTION:\r\n        case $.TABLE: {\r\n            if (p.openElements.hasInTableScope($.CAPTION)) {\r\n                p.openElements.generateImpliedEndTags();\r\n                p.openElements.popUntilTagNamePopped($.CAPTION);\r\n                p.activeFormattingElements.clearToLastMarker();\r\n                p.insertionMode = InsertionMode.IN_TABLE;\r\n                if (tn === $.TABLE) {\r\n                    endTagInTable(p, token);\r\n                }\r\n            }\r\n            break;\r\n        }\r\n        case $.BODY:\r\n        case $.COL:\r\n        case $.COLGROUP:\r\n        case $.HTML:\r\n        case $.TBODY:\r\n        case $.TD:\r\n        case $.TFOOT:\r\n        case $.TH:\r\n        case $.THEAD:\r\n        case $.TR: {\r\n            // Ignore token\r\n            break;\r\n        }\r\n        default: {\r\n            endTagInBody(p, token);\r\n        }\r\n    }\r\n}\r\n// The \"in column group\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagInColumnGroup(p, token) {\r\n    switch (token.tagID) {\r\n        case $.HTML: {\r\n            startTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.COL: {\r\n            p._appendElement(token, NS.HTML);\r\n            token.ackSelfClosing = true;\r\n            break;\r\n        }\r\n        case $.TEMPLATE: {\r\n            startTagInHead(p, token);\r\n            break;\r\n        }\r\n        default: {\r\n            tokenInColumnGroup(p, token);\r\n        }\r\n    }\r\n}\r\nfunction endTagInColumnGroup(p, token) {\r\n    switch (token.tagID) {\r\n        case $.COLGROUP: {\r\n            if (p.openElements.currentTagId === $.COLGROUP) {\r\n                p.openElements.pop();\r\n                p.insertionMode = InsertionMode.IN_TABLE;\r\n            }\r\n            break;\r\n        }\r\n        case $.TEMPLATE: {\r\n            templateEndTagInHead(p, token);\r\n            break;\r\n        }\r\n        case $.COL: {\r\n            // Ignore token\r\n            break;\r\n        }\r\n        default: {\r\n            tokenInColumnGroup(p, token);\r\n        }\r\n    }\r\n}\r\nfunction tokenInColumnGroup(p, token) {\r\n    if (p.openElements.currentTagId === $.COLGROUP) {\r\n        p.openElements.pop();\r\n        p.insertionMode = InsertionMode.IN_TABLE;\r\n        p._processToken(token);\r\n    }\r\n}\r\n// The \"in table body\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagInTableBody(p, token) {\r\n    switch (token.tagID) {\r\n        case $.TR: {\r\n            p.openElements.clearBackToTableBodyContext();\r\n            p._insertElement(token, NS.HTML);\r\n            p.insertionMode = InsertionMode.IN_ROW;\r\n            break;\r\n        }\r\n        case $.TH:\r\n        case $.TD: {\r\n            p.openElements.clearBackToTableBodyContext();\r\n            p._insertFakeElement(TN.TR, $.TR);\r\n            p.insertionMode = InsertionMode.IN_ROW;\r\n            startTagInRow(p, token);\r\n            break;\r\n        }\r\n        case $.CAPTION:\r\n        case $.COL:\r\n        case $.COLGROUP:\r\n        case $.TBODY:\r\n        case $.TFOOT:\r\n        case $.THEAD: {\r\n            if (p.openElements.hasTableBodyContextInTableScope()) {\r\n                p.openElements.clearBackToTableBodyContext();\r\n                p.openElements.pop();\r\n                p.insertionMode = InsertionMode.IN_TABLE;\r\n                startTagInTable(p, token);\r\n            }\r\n            break;\r\n        }\r\n        default: {\r\n            startTagInTable(p, token);\r\n        }\r\n    }\r\n}\r\nfunction endTagInTableBody(p, token) {\r\n    const tn = token.tagID;\r\n    switch (token.tagID) {\r\n        case $.TBODY:\r\n        case $.TFOOT:\r\n        case $.THEAD: {\r\n            if (p.openElements.hasInTableScope(tn)) {\r\n                p.openElements.clearBackToTableBodyContext();\r\n                p.openElements.pop();\r\n                p.insertionMode = InsertionMode.IN_TABLE;\r\n            }\r\n            break;\r\n        }\r\n        case $.TABLE: {\r\n            if (p.openElements.hasTableBodyContextInTableScope()) {\r\n                p.openElements.clearBackToTableBodyContext();\r\n                p.openElements.pop();\r\n                p.insertionMode = InsertionMode.IN_TABLE;\r\n                endTagInTable(p, token);\r\n            }\r\n            break;\r\n        }\r\n        case $.BODY:\r\n        case $.CAPTION:\r\n        case $.COL:\r\n        case $.COLGROUP:\r\n        case $.HTML:\r\n        case $.TD:\r\n        case $.TH:\r\n        case $.TR: {\r\n            // Ignore token\r\n            break;\r\n        }\r\n        default: {\r\n            endTagInTable(p, token);\r\n        }\r\n    }\r\n}\r\n// The \"in row\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagInRow(p, token) {\r\n    switch (token.tagID) {\r\n        case $.TH:\r\n        case $.TD: {\r\n            p.openElements.clearBackToTableRowContext();\r\n            p._insertElement(token, NS.HTML);\r\n            p.insertionMode = InsertionMode.IN_CELL;\r\n            p.activeFormattingElements.insertMarker();\r\n            break;\r\n        }\r\n        case $.CAPTION:\r\n        case $.COL:\r\n        case $.COLGROUP:\r\n        case $.TBODY:\r\n        case $.TFOOT:\r\n        case $.THEAD:\r\n        case $.TR: {\r\n            if (p.openElements.hasInTableScope($.TR)) {\r\n                p.openElements.clearBackToTableRowContext();\r\n                p.openElements.pop();\r\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\r\n                startTagInTableBody(p, token);\r\n            }\r\n            break;\r\n        }\r\n        default: {\r\n            startTagInTable(p, token);\r\n        }\r\n    }\r\n}\r\nfunction endTagInRow(p, token) {\r\n    switch (token.tagID) {\r\n        case $.TR: {\r\n            if (p.openElements.hasInTableScope($.TR)) {\r\n                p.openElements.clearBackToTableRowContext();\r\n                p.openElements.pop();\r\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\r\n            }\r\n            break;\r\n        }\r\n        case $.TABLE: {\r\n            if (p.openElements.hasInTableScope($.TR)) {\r\n                p.openElements.clearBackToTableRowContext();\r\n                p.openElements.pop();\r\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\r\n                endTagInTableBody(p, token);\r\n            }\r\n            break;\r\n        }\r\n        case $.TBODY:\r\n        case $.TFOOT:\r\n        case $.THEAD: {\r\n            if (p.openElements.hasInTableScope(token.tagID) || p.openElements.hasInTableScope($.TR)) {\r\n                p.openElements.clearBackToTableRowContext();\r\n                p.openElements.pop();\r\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\r\n                endTagInTableBody(p, token);\r\n            }\r\n            break;\r\n        }\r\n        case $.BODY:\r\n        case $.CAPTION:\r\n        case $.COL:\r\n        case $.COLGROUP:\r\n        case $.HTML:\r\n        case $.TD:\r\n        case $.TH: {\r\n            // Ignore end tag\r\n            break;\r\n        }\r\n        default: {\r\n            endTagInTable(p, token);\r\n        }\r\n    }\r\n}\r\n// The \"in cell\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagInCell(p, token) {\r\n    const tn = token.tagID;\r\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\r\n        if (p.openElements.hasInTableScope($.TD) || p.openElements.hasInTableScope($.TH)) {\r\n            p._closeTableCell();\r\n            startTagInRow(p, token);\r\n        }\r\n    }\r\n    else {\r\n        startTagInBody(p, token);\r\n    }\r\n}\r\nfunction endTagInCell(p, token) {\r\n    const tn = token.tagID;\r\n    switch (tn) {\r\n        case $.TD:\r\n        case $.TH: {\r\n            if (p.openElements.hasInTableScope(tn)) {\r\n                p.openElements.generateImpliedEndTags();\r\n                p.openElements.popUntilTagNamePopped(tn);\r\n                p.activeFormattingElements.clearToLastMarker();\r\n                p.insertionMode = InsertionMode.IN_ROW;\r\n            }\r\n            break;\r\n        }\r\n        case $.TABLE:\r\n        case $.TBODY:\r\n        case $.TFOOT:\r\n        case $.THEAD:\r\n        case $.TR: {\r\n            if (p.openElements.hasInTableScope(tn)) {\r\n                p._closeTableCell();\r\n                endTagInRow(p, token);\r\n            }\r\n            break;\r\n        }\r\n        case $.BODY:\r\n        case $.CAPTION:\r\n        case $.COL:\r\n        case $.COLGROUP:\r\n        case $.HTML: {\r\n            // Ignore token\r\n            break;\r\n        }\r\n        default: {\r\n            endTagInBody(p, token);\r\n        }\r\n    }\r\n}\r\n// The \"in select\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagInSelect(p, token) {\r\n    switch (token.tagID) {\r\n        case $.HTML: {\r\n            startTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.OPTION: {\r\n            if (p.openElements.currentTagId === $.OPTION) {\r\n                p.openElements.pop();\r\n            }\r\n            p._insertElement(token, NS.HTML);\r\n            break;\r\n        }\r\n        case $.OPTGROUP: {\r\n            if (p.openElements.currentTagId === $.OPTION) {\r\n                p.openElements.pop();\r\n            }\r\n            if (p.openElements.currentTagId === $.OPTGROUP) {\r\n                p.openElements.pop();\r\n            }\r\n            p._insertElement(token, NS.HTML);\r\n            break;\r\n        }\r\n        case $.HR: {\r\n            if (p.openElements.currentTagId === $.OPTION) {\r\n                p.openElements.pop();\r\n            }\r\n            if (p.openElements.currentTagId === $.OPTGROUP) {\r\n                p.openElements.pop();\r\n            }\r\n            p._appendElement(token, NS.HTML);\r\n            token.ackSelfClosing = true;\r\n            break;\r\n        }\r\n        case $.INPUT:\r\n        case $.KEYGEN:\r\n        case $.TEXTAREA:\r\n        case $.SELECT: {\r\n            if (p.openElements.hasInSelectScope($.SELECT)) {\r\n                p.openElements.popUntilTagNamePopped($.SELECT);\r\n                p._resetInsertionMode();\r\n                if (token.tagID !== $.SELECT) {\r\n                    p._processStartTag(token);\r\n                }\r\n            }\r\n            break;\r\n        }\r\n        case $.SCRIPT:\r\n        case $.TEMPLATE: {\r\n            startTagInHead(p, token);\r\n            break;\r\n        }\r\n        default:\r\n        // Do nothing\r\n    }\r\n}\r\nfunction endTagInSelect(p, token) {\r\n    switch (token.tagID) {\r\n        case $.OPTGROUP: {\r\n            if (p.openElements.stackTop > 0 &&\r\n                p.openElements.currentTagId === $.OPTION &&\r\n                p.openElements.tagIDs[p.openElements.stackTop - 1] === $.OPTGROUP) {\r\n                p.openElements.pop();\r\n            }\r\n            if (p.openElements.currentTagId === $.OPTGROUP) {\r\n                p.openElements.pop();\r\n            }\r\n            break;\r\n        }\r\n        case $.OPTION: {\r\n            if (p.openElements.currentTagId === $.OPTION) {\r\n                p.openElements.pop();\r\n            }\r\n            break;\r\n        }\r\n        case $.SELECT: {\r\n            if (p.openElements.hasInSelectScope($.SELECT)) {\r\n                p.openElements.popUntilTagNamePopped($.SELECT);\r\n                p._resetInsertionMode();\r\n            }\r\n            break;\r\n        }\r\n        case $.TEMPLATE: {\r\n            templateEndTagInHead(p, token);\r\n            break;\r\n        }\r\n        default:\r\n        // Do nothing\r\n    }\r\n}\r\n// The \"in select in table\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagInSelectInTable(p, token) {\r\n    const tn = token.tagID;\r\n    if (tn === $.CAPTION ||\r\n        tn === $.TABLE ||\r\n        tn === $.TBODY ||\r\n        tn === $.TFOOT ||\r\n        tn === $.THEAD ||\r\n        tn === $.TR ||\r\n        tn === $.TD ||\r\n        tn === $.TH) {\r\n        p.openElements.popUntilTagNamePopped($.SELECT);\r\n        p._resetInsertionMode();\r\n        p._processStartTag(token);\r\n    }\r\n    else {\r\n        startTagInSelect(p, token);\r\n    }\r\n}\r\nfunction endTagInSelectInTable(p, token) {\r\n    const tn = token.tagID;\r\n    if (tn === $.CAPTION ||\r\n        tn === $.TABLE ||\r\n        tn === $.TBODY ||\r\n        tn === $.TFOOT ||\r\n        tn === $.THEAD ||\r\n        tn === $.TR ||\r\n        tn === $.TD ||\r\n        tn === $.TH) {\r\n        if (p.openElements.hasInTableScope(tn)) {\r\n            p.openElements.popUntilTagNamePopped($.SELECT);\r\n            p._resetInsertionMode();\r\n            p.onEndTag(token);\r\n        }\r\n    }\r\n    else {\r\n        endTagInSelect(p, token);\r\n    }\r\n}\r\n// The \"in template\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagInTemplate(p, token) {\r\n    switch (token.tagID) {\r\n        // First, handle tags that can start without a mode change\r\n        case $.BASE:\r\n        case $.BASEFONT:\r\n        case $.BGSOUND:\r\n        case $.LINK:\r\n        case $.META:\r\n        case $.NOFRAMES:\r\n        case $.SCRIPT:\r\n        case $.STYLE:\r\n        case $.TEMPLATE:\r\n        case $.TITLE: {\r\n            startTagInHead(p, token);\r\n            break;\r\n        }\r\n        // Re-process the token in the appropriate mode\r\n        case $.CAPTION:\r\n        case $.COLGROUP:\r\n        case $.TBODY:\r\n        case $.TFOOT:\r\n        case $.THEAD: {\r\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE;\r\n            p.insertionMode = InsertionMode.IN_TABLE;\r\n            startTagInTable(p, token);\r\n            break;\r\n        }\r\n        case $.COL: {\r\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_COLUMN_GROUP;\r\n            p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\r\n            startTagInColumnGroup(p, token);\r\n            break;\r\n        }\r\n        case $.TR: {\r\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE_BODY;\r\n            p.insertionMode = InsertionMode.IN_TABLE_BODY;\r\n            startTagInTableBody(p, token);\r\n            break;\r\n        }\r\n        case $.TD:\r\n        case $.TH: {\r\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_ROW;\r\n            p.insertionMode = InsertionMode.IN_ROW;\r\n            startTagInRow(p, token);\r\n            break;\r\n        }\r\n        default: {\r\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_BODY;\r\n            p.insertionMode = InsertionMode.IN_BODY;\r\n            startTagInBody(p, token);\r\n        }\r\n    }\r\n}\r\nfunction endTagInTemplate(p, token) {\r\n    if (token.tagID === $.TEMPLATE) {\r\n        templateEndTagInHead(p, token);\r\n    }\r\n}\r\nfunction eofInTemplate(p, token) {\r\n    if (p.openElements.tmplCount > 0) {\r\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\r\n        p.activeFormattingElements.clearToLastMarker();\r\n        p.tmplInsertionModeStack.shift();\r\n        p._resetInsertionMode();\r\n        p.onEof(token);\r\n    }\r\n    else {\r\n        stopParsing(p, token);\r\n    }\r\n}\r\n// The \"after body\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagAfterBody(p, token) {\r\n    if (token.tagID === $.HTML) {\r\n        startTagInBody(p, token);\r\n    }\r\n    else {\r\n        tokenAfterBody(p, token);\r\n    }\r\n}\r\nfunction endTagAfterBody(p, token) {\r\n    var _a;\r\n    if (token.tagID === $.HTML) {\r\n        if (!p.fragmentContext) {\r\n            p.insertionMode = InsertionMode.AFTER_AFTER_BODY;\r\n        }\r\n        //NOTE: <html> is never popped from the stack, so we need to updated\r\n        //the end location explicitly.\r\n        if (p.options.sourceCodeLocationInfo && p.openElements.tagIDs[0] === $.HTML) {\r\n            p._setEndLocation(p.openElements.items[0], token);\r\n            // Update the body element, if it doesn't have an end tag\r\n            const bodyElement = p.openElements.items[1];\r\n            if (bodyElement && !((_a = p.treeAdapter.getNodeSourceCodeLocation(bodyElement)) === null || _a === void 0 ? void 0 : _a.endTag)) {\r\n                p._setEndLocation(bodyElement, token);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        tokenAfterBody(p, token);\r\n    }\r\n}\r\nfunction tokenAfterBody(p, token) {\r\n    p.insertionMode = InsertionMode.IN_BODY;\r\n    modeInBody(p, token);\r\n}\r\n// The \"in frameset\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagInFrameset(p, token) {\r\n    switch (token.tagID) {\r\n        case $.HTML: {\r\n            startTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.FRAMESET: {\r\n            p._insertElement(token, NS.HTML);\r\n            break;\r\n        }\r\n        case $.FRAME: {\r\n            p._appendElement(token, NS.HTML);\r\n            token.ackSelfClosing = true;\r\n            break;\r\n        }\r\n        case $.NOFRAMES: {\r\n            startTagInHead(p, token);\r\n            break;\r\n        }\r\n        default:\r\n        // Do nothing\r\n    }\r\n}\r\nfunction endTagInFrameset(p, token) {\r\n    if (token.tagID === $.FRAMESET && !p.openElements.isRootHtmlElementCurrent()) {\r\n        p.openElements.pop();\r\n        if (!p.fragmentContext && p.openElements.currentTagId !== $.FRAMESET) {\r\n            p.insertionMode = InsertionMode.AFTER_FRAMESET;\r\n        }\r\n    }\r\n}\r\n// The \"after frameset\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagAfterFrameset(p, token) {\r\n    switch (token.tagID) {\r\n        case $.HTML: {\r\n            startTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.NOFRAMES: {\r\n            startTagInHead(p, token);\r\n            break;\r\n        }\r\n        default:\r\n        // Do nothing\r\n    }\r\n}\r\nfunction endTagAfterFrameset(p, token) {\r\n    if (token.tagID === $.HTML) {\r\n        p.insertionMode = InsertionMode.AFTER_AFTER_FRAMESET;\r\n    }\r\n}\r\n// The \"after after body\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagAfterAfterBody(p, token) {\r\n    if (token.tagID === $.HTML) {\r\n        startTagInBody(p, token);\r\n    }\r\n    else {\r\n        tokenAfterAfterBody(p, token);\r\n    }\r\n}\r\nfunction tokenAfterAfterBody(p, token) {\r\n    p.insertionMode = InsertionMode.IN_BODY;\r\n    modeInBody(p, token);\r\n}\r\n// The \"after after frameset\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagAfterAfterFrameset(p, token) {\r\n    switch (token.tagID) {\r\n        case $.HTML: {\r\n            startTagInBody(p, token);\r\n            break;\r\n        }\r\n        case $.NOFRAMES: {\r\n            startTagInHead(p, token);\r\n            break;\r\n        }\r\n        default:\r\n        // Do nothing\r\n    }\r\n}\r\n// The rules for parsing tokens in foreign content\r\n//------------------------------------------------------------------\r\nfunction nullCharacterInForeignContent(p, token) {\r\n    token.chars = unicode.REPLACEMENT_CHARACTER;\r\n    p._insertCharacters(token);\r\n}\r\nfunction characterInForeignContent(p, token) {\r\n    p._insertCharacters(token);\r\n    p.framesetOk = false;\r\n}\r\nfunction popUntilHtmlOrIntegrationPoint(p) {\r\n    while (p.treeAdapter.getNamespaceURI(p.openElements.current) !== NS.HTML &&\r\n        !p._isIntegrationPoint(p.openElements.currentTagId, p.openElements.current)) {\r\n        p.openElements.pop();\r\n    }\r\n}\r\nfunction startTagInForeignContent(p, token) {\r\n    if (foreignContent.causesExit(token)) {\r\n        popUntilHtmlOrIntegrationPoint(p);\r\n        p._startTagOutsideForeignContent(token);\r\n    }\r\n    else {\r\n        const current = p._getAdjustedCurrentElement();\r\n        const currentNs = p.treeAdapter.getNamespaceURI(current);\r\n        if (currentNs === NS.MATHML) {\r\n            foreignContent.adjustTokenMathMLAttrs(token);\r\n        }\r\n        else if (currentNs === NS.SVG) {\r\n            foreignContent.adjustTokenSVGTagName(token);\r\n            foreignContent.adjustTokenSVGAttrs(token);\r\n        }\r\n        foreignContent.adjustTokenXMLAttrs(token);\r\n        if (token.selfClosing) {\r\n            p._appendElement(token, currentNs);\r\n        }\r\n        else {\r\n            p._insertElement(token, currentNs);\r\n        }\r\n        token.ackSelfClosing = true;\r\n    }\r\n}\r\nfunction endTagInForeignContent(p, token) {\r\n    if (token.tagID === $.P || token.tagID === $.BR) {\r\n        popUntilHtmlOrIntegrationPoint(p);\r\n        p._endTagOutsideForeignContent(token);\r\n        return;\r\n    }\r\n    for (let i = p.openElements.stackTop; i > 0; i--) {\r\n        const element = p.openElements.items[i];\r\n        if (p.treeAdapter.getNamespaceURI(element) === NS.HTML) {\r\n            p._endTagOutsideForeignContent(token);\r\n            break;\r\n        }\r\n        const tagName = p.treeAdapter.getTagName(element);\r\n        if (tagName.toLowerCase() === token.tagName) {\r\n            //NOTE: update the token tag name for `_setEndLocation`.\r\n            token.tagName = tagName;\r\n            p.openElements.shortenToLength(i);\r\n            break;\r\n        }\r\n    }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}