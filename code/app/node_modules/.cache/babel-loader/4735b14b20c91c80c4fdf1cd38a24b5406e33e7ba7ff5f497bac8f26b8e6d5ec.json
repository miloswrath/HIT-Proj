{"ast":null,"code":"var _jsxFileName = \"/Users/zakg04/Documents/Personal-Cloud/theJourney/theProj/HIT-Proj/code/app/src/ChatRow.js\",\n  _s = $RefreshSig$();\n// ChatRow.jsx\nimport React, { useState, useEffect } from 'react';\nimport ChatProfileBubble from './ChatProfileBubble';\nimport PropTypes from 'prop-types';\nimport ReactMarkdown from 'react-markdown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatRow({\n  chatContent,\n  originatingUser\n}) {\n  _s();\n  const isUser = originatingUser === 'user';\n  const isBot = originatingUser === 'bot';\n  const chatBubbleClasses = `\n        bg-white w-3/4 py-4 px-6 \n        ${isUser ? 'rounded-l-2xl rounded-t-2xl ml-2 ' : ''}\n        ${isBot ? 'rounded-r-2xl rounded-b-2xl mr-2' : ''}\n    `;\n  const contentClass = `\n        w-8/9 flex flex-row\n        ${isUser ? 'justify-end' : ''}\n        ${isBot ? 'justify-start' : ''}\n    `;\n  const [displayedText, setDisplayedText] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  useEffect(() => {\n    const sanitizedText = typeof chatContent === 'string' ? chatContent : String(chatContent);\n    if (isBot && sanitizedText.length > 0) {\n      let index = 0;\n      setIsTyping(true);\n      setDisplayedText('');\n      const typingSpeed = 15; // milliseconds per character\n      const type = () => {\n        if (index < sanitizedText.length) {\n          setDisplayedText(prev => prev + sanitizedText.charAt(index));\n          index++;\n          setTimeout(type, typingSpeed);\n        } else {\n          setIsTyping(false);\n        }\n      };\n      type();\n    }\n  }, [isBot, chatContent]);\n  const contentToRender = isBot ? displayedText : chatContent;\n  const formattedText = contentToRender.replace(/\\n/g, '<br/>');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `w-full flex flex-row transform transition-transform duration-300 animate-popIn`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-1/12 flex flex-col justify-start items-center pb-6\",\n      children: isBot && /*#__PURE__*/_jsxDEV(ChatProfileBubble, {\n        user: \"bot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 28\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: contentClass,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: chatBubbleClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-gray-700 text-sm font-semibold leading-5 whitespace-pre-wrap\",\n          style: {\n            whiteSpace: 'pre-wrap'\n          },\n          dangerouslySetInnerHTML: {\n            __html: formattedText\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), isBot && isTyping && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"inline-block w-2 h-2 ml-1 bg-gray-700 rounded-full animate-bounce\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-1/12 flex flex-col justify-end items-center pt-6\",\n      children: isUser && /*#__PURE__*/_jsxDEV(ChatProfileBubble, {\n        user: \"user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n// Helper function to tokenize HTML content\n_s(ChatRow, \"UQ25kdMGnuFC5P/kLuPD8AvN944=\");\n_c = ChatRow;\nfunction tokenizeHTML(html) {\n  const regex = /(<[^>]+>)/g;\n  const tokens = html.split(regex).filter(token => token.length > 0);\n  return tokens;\n}\n\n// PropTypes for type checking\nChatRow.propTypes = {\n  chatContent: PropTypes.string.isRequired,\n  originatingUser: PropTypes.oneOf(['user', 'bot']).isRequired\n};\nexport default ChatRow;\nvar _c;\n$RefreshReg$(_c, \"ChatRow\");","map":{"version":3,"names":["React","useState","useEffect","ChatProfileBubble","PropTypes","ReactMarkdown","jsxDEV","_jsxDEV","ChatRow","chatContent","originatingUser","_s","isUser","isBot","chatBubbleClasses","contentClass","displayedText","setDisplayedText","isTyping","setIsTyping","sanitizedText","String","length","index","typingSpeed","type","prev","charAt","setTimeout","contentToRender","formattedText","replace","className","children","user","fileName","_jsxFileName","lineNumber","columnNumber","style","whiteSpace","dangerouslySetInnerHTML","__html","_c","tokenizeHTML","html","regex","tokens","split","filter","token","propTypes","string","isRequired","oneOf","$RefreshReg$"],"sources":["/Users/zakg04/Documents/Personal-Cloud/theJourney/theProj/HIT-Proj/code/app/src/ChatRow.js"],"sourcesContent":["// ChatRow.jsx\nimport React, { useState, useEffect } from 'react';\nimport ChatProfileBubble from './ChatProfileBubble';\nimport PropTypes from 'prop-types';\nimport ReactMarkdown from 'react-markdown';\n\nfunction ChatRow({ chatContent, originatingUser }) {\n    const isUser = originatingUser === 'user';\n    const isBot = originatingUser === 'bot';\n\n    const chatBubbleClasses = `\n        bg-white w-3/4 py-4 px-6 \n        ${isUser ? 'rounded-l-2xl rounded-t-2xl ml-2 ' : ''}\n        ${isBot ? 'rounded-r-2xl rounded-b-2xl mr-2' : ''}\n    `;\n\n    const contentClass = `\n        w-8/9 flex flex-row\n        ${isUser ? 'justify-end' : ''}\n        ${isBot ? 'justify-start' : ''}\n    `;\n\n    const [displayedText, setDisplayedText] = useState('');\n    const [isTyping, setIsTyping] = useState(false);\n\n    useEffect(() => {\n        const sanitizedText = typeof chatContent === 'string' ? chatContent : String(chatContent);\n\n        if (isBot && sanitizedText.length > 0) {\n            let index = 0;\n            setIsTyping(true);\n            setDisplayedText('');\n\n            const typingSpeed = 15; // milliseconds per character\n            const type = () => {\n                if (index < sanitizedText.length) {\n                    setDisplayedText(prev => prev + sanitizedText.charAt(index));\n                    index++;\n                    setTimeout(type, typingSpeed);\n                } else {\n                    setIsTyping(false);\n                }\n            };\n            type();\n        }\n    }, [isBot, chatContent]);\n\n    const contentToRender = isBot ? displayedText : chatContent;\n    const formattedText = contentToRender.replace(/\\n/g, '<br/>');\n    \n    return (\n        <div className={`w-full flex flex-row transform transition-transform duration-300 animate-popIn`}>\n            {/* Left Profile Bubble (Bot) */}\n            <div className=\"w-1/12 flex flex-col justify-start items-center pb-6\">\n                {isBot && (<ChatProfileBubble user=\"bot\" />)}\n            </div>\n            \n            {/* Chat Content */}\n            <div className={contentClass}>\n                <div className={chatBubbleClasses}>\n                    {/* Use dangerouslySetInnerHTML to render formattedText with <br/> */}\n                    <div\n                        className=\"text-gray-700 text-sm font-semibold leading-5 whitespace-pre-wrap\"\n                        style={{ whiteSpace: 'pre-wrap' }}\n                        dangerouslySetInnerHTML={{ __html: formattedText }}\n                    />\n                    {isBot && isTyping && (\n                        <span className=\"inline-block w-2 h-2 ml-1 bg-gray-700 rounded-full animate-bounce\"></span>\n                    )}\n                </div>\n            </div>\n                \n            {/* Right Profile Bubble (User) */}\n            <div className=\"w-1/12 flex flex-col justify-end items-center pt-6\">\n                {isUser && (<ChatProfileBubble user=\"user\" />)}\n            </div>\n        </div>\n    );\n}\n\n\n// Helper function to tokenize HTML content\nfunction tokenizeHTML(html) {\n    const regex = /(<[^>]+>)/g;\n    const tokens = html.split(regex).filter(token => token.length > 0);\n    return tokens;\n}\n\n// PropTypes for type checking\nChatRow.propTypes = {\n    chatContent: PropTypes.string.isRequired,\n    originatingUser: PropTypes.oneOf(['user', 'bot']).isRequired,\n};\n\nexport default ChatRow;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}