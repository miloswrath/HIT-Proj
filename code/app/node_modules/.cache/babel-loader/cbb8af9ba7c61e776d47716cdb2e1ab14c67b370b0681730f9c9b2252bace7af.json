{"ast":null,"code":"var _jsxFileName = \"/Users/zakg04/Documents/Personal-Cloud/theJourney/theProj/HIT-Proj/code/app/src/ConnectedChatWindow.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useImperativeHandle, forwardRef } from 'react';\nimport ChatRow from './ChatRow';\nimport UserInputBox from './UserInputBox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConnectedChatWindow = /*#__PURE__*/_s(/*#__PURE__*/forwardRef(_c = _s(({\n  preMessageContent,\n  interpretation\n}, ref) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [showPreMessage, setShowPreMessage] = useState(true);\n  const [isPreMessageExiting, setIsPreMessageExiting] = useState(false);\n  // Expose addMessage function to parent via ref\n  const addMessage = async (chatContent, originatingUser) => {\n    const newMessage = {\n      chatContent,\n      originatingUser\n    };\n    if (originatingUser === 'user') {\n      setMessages(prevMessages => [...prevMessages, newMessage]);\n    }\n    try {\n      const response = await fetch('http://localhost:8000/api/messages', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          currentMessage: newMessage,\n          previousMessages: messages\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      console.log('Server response:', data);\n\n      // Update messages with the bot's response\n      setMessages(prevMessages => [...prevMessages, {\n        chatContent: data.response,\n        originatingUser: 'bot'\n      }]);\n    } catch (error) {\n      console.error('Error sending message to server:', error);\n      // Update messages with the bot's response\n      setMessages(prevMessages => [...prevMessages, {\n        chatContent: `BEEP BOOP. ERROR CONNECTING TO API: \\n \\n${error}`,\n        originatingUser: 'bot'\n      }]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-300 rounded-xl py-4 flex flex-col mx-2 shadow-md shadow-inner space-y-6 transition-all duration-500\",\n    children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(ChatRow, {\n      chatContent: message.chatContent,\n      originatingUser: message.originatingUser\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(UserInputBox, {\n      addMessage: addMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}, \"5qeoCiotJI0RC1OFY0tP+YjgX6U=\")), \"5qeoCiotJI0RC1OFY0tP+YjgX6U=\");\n_c2 = ConnectedChatWindow;\nexport default ConnectedChatWindow;\nvar _c, _c2;\n$RefreshReg$(_c, \"ConnectedChatWindow$forwardRef\");\n$RefreshReg$(_c2, \"ConnectedChatWindow\");","map":{"version":3,"names":["React","useState","useImperativeHandle","forwardRef","ChatRow","UserInputBox","jsxDEV","_jsxDEV","ConnectedChatWindow","_s","_c","preMessageContent","interpretation","ref","messages","setMessages","showPreMessage","setShowPreMessage","isPreMessageExiting","setIsPreMessageExiting","addMessage","chatContent","originatingUser","newMessage","prevMessages","response","fetch","method","headers","body","JSON","stringify","currentMessage","previousMessages","ok","Error","data","json","console","log","error","className","children","map","message","index","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/Users/zakg04/Documents/Personal-Cloud/theJourney/theProj/HIT-Proj/code/app/src/ConnectedChatWindow.js"],"sourcesContent":["import React, { useState, useImperativeHandle, forwardRef } from 'react';\nimport ChatRow from './ChatRow';\nimport UserInputBox from './UserInputBox';\n\nconst ConnectedChatWindow = forwardRef(({ preMessageContent, interpretation }, ref) => {\n    const [messages, setMessages] = useState([]);\n    const [showPreMessage, setShowPreMessage] = useState(true);\n    const [isPreMessageExiting, setIsPreMessageExiting] = useState(false);\n    // Expose addMessage function to parent via ref\n    const addMessage = async (chatContent, originatingUser) => {\n        const newMessage = { chatContent, originatingUser };\n        if (originatingUser === 'user') {\n            setMessages(prevMessages => [...prevMessages, newMessage]);\n        }\n        try {\n            const response = await fetch('http://localhost:8000/api/messages', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    currentMessage: newMessage,\n                    previousMessages: messages,\n                }),\n            });\n    \n            if (!response.ok) {\n                throw new Error('Network response was not ok');\n            }\n    \n            const data = await response.json();\n            console.log('Server response:', data);\n    \n            // Update messages with the bot's response\n            setMessages(prevMessages => [\n                ...prevMessages,\n                { chatContent: data.response, originatingUser: 'bot' },\n            ]);\n        } catch (error) {\n            console.error('Error sending message to server:', error);\n            // Update messages with the bot's response\n            setMessages(prevMessages => [\n                ...prevMessages,\n                { chatContent: `BEEP BOOP. ERROR CONNECTING TO API: \\n \\n${error}`, originatingUser: 'bot' },\n            ]);\n        }\n    };\n    return (\n        <div className=\"bg-gray-300 rounded-xl py-4 flex flex-col mx-2 shadow-md shadow-inner space-y-6 transition-all duration-500\">\n            {/* Render ChatRows with animation */}\n            {messages.map((message, index) => (\n                <ChatRow\n                    key={index}\n                    chatContent={message.chatContent}\n                    originatingUser={message.originatingUser}\n                />\n            ))}\n            <UserInputBox addMessage={addMessage}/>\n        </div>\n    );\n});\n\nexport default ConnectedChatWindow;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}